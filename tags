!_TAG_EXTRA_DESCRIPTION	anonymous	/Include tags for non-named objects like lambda/
!_TAG_EXTRA_DESCRIPTION	fileScope	/Include tags of file scope/
!_TAG_EXTRA_DESCRIPTION	pseudo	/Include pseudo tags/
!_TAG_EXTRA_DESCRIPTION	subparser	/Include tags generated by subparsers/
!_TAG_FIELD_DESCRIPTION	epoch	/the last modified time of the input file (only for F\/file kind tag)/
!_TAG_FIELD_DESCRIPTION	file	/File-restricted scoping/
!_TAG_FIELD_DESCRIPTION	input	/input file/
!_TAG_FIELD_DESCRIPTION	name	/tag name/
!_TAG_FIELD_DESCRIPTION	pattern	/pattern/
!_TAG_FIELD_DESCRIPTION	typeref	/Type and name of a variable or typedef/
!_TAG_FIELD_DESCRIPTION!C++	name	/aliased names/
!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_KIND_DESCRIPTION!C++	M,module	/modules/
!_TAG_KIND_DESCRIPTION!C++	P,partition	/partitions/
!_TAG_KIND_DESCRIPTION!C++	c,class	/classes/
!_TAG_KIND_DESCRIPTION!C++	d,macro	/macro definitions/
!_TAG_KIND_DESCRIPTION!C++	e,enumerator	/enumerators (values inside an enumeration)/
!_TAG_KIND_DESCRIPTION!C++	f,function	/function definitions/
!_TAG_KIND_DESCRIPTION!C++	g,enum	/enumeration names/
!_TAG_KIND_DESCRIPTION!C++	h,header	/included header files/
!_TAG_KIND_DESCRIPTION!C++	m,member	/class, struct, and union members/
!_TAG_KIND_DESCRIPTION!C++	n,namespace	/namespaces/
!_TAG_KIND_DESCRIPTION!C++	s,struct	/structure names/
!_TAG_KIND_DESCRIPTION!C++	t,typedef	/typedefs/
!_TAG_KIND_DESCRIPTION!C++	u,union	/union names/
!_TAG_KIND_DESCRIPTION!C++	v,variable	/variable definitions/
!_TAG_KIND_DESCRIPTION!JSON	a,array	/arrays/
!_TAG_KIND_DESCRIPTION!JSON	b,boolean	/booleans/
!_TAG_KIND_DESCRIPTION!JSON	n,number	/numbers/
!_TAG_KIND_DESCRIPTION!JSON	o,object	/objects/
!_TAG_KIND_DESCRIPTION!JSON	s,string	/strings/
!_TAG_KIND_DESCRIPTION!JSON	z,null	/nulls/
!_TAG_KIND_DESCRIPTION!Make	I,makefile	/makefiles/
!_TAG_KIND_DESCRIPTION!Make	m,macro	/macros/
!_TAG_KIND_DESCRIPTION!Make	t,target	/targets/
!_TAG_KIND_DESCRIPTION!Markdown	S,subsection	/level 2 sections/
!_TAG_KIND_DESCRIPTION!Markdown	T,l4subsection	/level 4 sections/
!_TAG_KIND_DESCRIPTION!Markdown	c,chapter	/chapters/
!_TAG_KIND_DESCRIPTION!Markdown	h,hashtag	/hashtags/
!_TAG_KIND_DESCRIPTION!Markdown	n,footnote	/footnotes/
!_TAG_KIND_DESCRIPTION!Markdown	s,section	/sections/
!_TAG_KIND_DESCRIPTION!Markdown	t,subsubsection	/level 3 sections/
!_TAG_KIND_DESCRIPTION!Markdown	u,l5subsection	/level 5 sections/
!_TAG_OUTPUT_EXCMD	mixed	/number, pattern, mixed, or combineV2/
!_TAG_OUTPUT_FILESEP	slash	/slash or backslash/
!_TAG_OUTPUT_MODE	u-ctags	/u-ctags or e-ctags/
!_TAG_OUTPUT_VERSION	1.1	/current.age/
!_TAG_PARSER_VERSION!C++	1.1	/current.age/
!_TAG_PARSER_VERSION!JSON	0.0	/current.age/
!_TAG_PARSER_VERSION!Make	1.1	/current.age/
!_TAG_PARSER_VERSION!Markdown	1.1	/current.age/
!_TAG_PATTERN_LENGTH_LIMIT	96	/0 for no limit/
!_TAG_PROC_CWD	/home/hnsorens/VoxelEngine/	//
!_TAG_PROGRAM_AUTHOR	Universal Ctags Team	//
!_TAG_PROGRAM_NAME	Universal Ctags	/Derived from Exuberant Ctags/
!_TAG_PROGRAM_URL	https://ctags.io/	/official site/
!_TAG_PROGRAM_VERSION	6.2.0	/v6.2.0/
!_TAG_ROLE_DESCRIPTION!C++!header	exported	/exported with "exported imported ..."/
!_TAG_ROLE_DESCRIPTION!C++!header	imported	/imported with "imported ..."/
!_TAG_ROLE_DESCRIPTION!C++!header	local	/local header/
!_TAG_ROLE_DESCRIPTION!C++!header	system	/system header/
!_TAG_ROLE_DESCRIPTION!C++!macro	undef	/undefined/
!_TAG_ROLE_DESCRIPTION!C++!module	imported	/imported with "imported ..."/
!_TAG_ROLE_DESCRIPTION!C++!module	partOwner	/used for specifying a partition/
!_TAG_ROLE_DESCRIPTION!C++!partition	imported	/imported with "imported ..."/
!_TAG_ROLE_DESCRIPTION!Make!makefile	included	/included/
!_TAG_ROLE_DESCRIPTION!Make!makefile	optional	/optionally included/
0	compile_commands.json	/^      "\/usr\/bin\/g++",$/;"	s	array:0.arguments
0	compile_commands.json	/^      "\/usr\/bin\/g++",$/;"	s	array:1.arguments
0	compile_commands.json	/^      "\/usr\/bin\/g++",$/;"	s	array:2.arguments
0	compile_commands.json	/^      "\/usr\/bin\/g++",$/;"	s	array:3.arguments
0	compile_commands.json	/^      "\/usr\/bin\/g++",$/;"	s	array:4.arguments
0	compile_commands.json	/^  {$/;"	o
1	compile_commands.json	/^      "-c",$/;"	s	array:0.arguments
1	compile_commands.json	/^      "-c",$/;"	s	array:1.arguments
1	compile_commands.json	/^      "-c",$/;"	s	array:2.arguments
1	compile_commands.json	/^      "-c",$/;"	s	array:3.arguments
1	compile_commands.json	/^      "-c",$/;"	s	array:4.arguments
1	compile_commands.json	/^  {$/;"	o
2	compile_commands.json	/^      "-std=c++23",$/;"	s	array:0.arguments
2	compile_commands.json	/^      "-std=c++23",$/;"	s	array:1.arguments
2	compile_commands.json	/^      "-std=c++23",$/;"	s	array:2.arguments
2	compile_commands.json	/^      "-std=c++23",$/;"	s	array:3.arguments
2	compile_commands.json	/^      "-std=c++23",$/;"	s	array:4.arguments
2	compile_commands.json	/^  {$/;"	o
3	compile_commands.json	/^      "-Iinclude",$/;"	s	array:0.arguments
3	compile_commands.json	/^      "-Iinclude",$/;"	s	array:1.arguments
3	compile_commands.json	/^      "-Iinclude",$/;"	s	array:2.arguments
3	compile_commands.json	/^      "-Iinclude",$/;"	s	array:3.arguments
3	compile_commands.json	/^      "-Iinclude",$/;"	s	array:4.arguments
3	compile_commands.json	/^  {$/;"	o
4	compile_commands.json	/^      "-IVkZero\/include",$/;"	s	array:0.arguments
4	compile_commands.json	/^      "-IVkZero\/include",$/;"	s	array:1.arguments
4	compile_commands.json	/^      "-IVkZero\/include",$/;"	s	array:2.arguments
4	compile_commands.json	/^      "-IVkZero\/include",$/;"	s	array:3.arguments
4	compile_commands.json	/^      "-IVkZero\/include",$/;"	s	array:4.arguments
4	compile_commands.json	/^  {$/;"	o
5	compile_commands.json	/^      "-g3",$/;"	s	array:0.arguments
5	compile_commands.json	/^      "-g3",$/;"	s	array:1.arguments
5	compile_commands.json	/^      "-g3",$/;"	s	array:2.arguments
5	compile_commands.json	/^      "-g3",$/;"	s	array:3.arguments
5	compile_commands.json	/^      "-g3",$/;"	s	array:4.arguments
6	compile_commands.json	/^      "-o",$/;"	s	array:0.arguments
6	compile_commands.json	/^      "-o",$/;"	s	array:1.arguments
6	compile_commands.json	/^      "-o",$/;"	s	array:2.arguments
6	compile_commands.json	/^      "-o",$/;"	s	array:3.arguments
6	compile_commands.json	/^      "-o",$/;"	s	array:4.arguments
7	compile_commands.json	/^      "bin\/voxels",$/;"	s	array:0.arguments
7	compile_commands.json	/^      "bin\/voxels",$/;"	s	array:1.arguments
7	compile_commands.json	/^      "bin\/voxels",$/;"	s	array:2.arguments
7	compile_commands.json	/^      "bin\/voxels",$/;"	s	array:3.arguments
7	compile_commands.json	/^      "bin\/voxels",$/;"	s	array:4.arguments
8	compile_commands.json	/^      "src\/Camera.cpp"$/;"	s	array:0.arguments
8	compile_commands.json	/^      "src\/Engine.cpp"$/;"	s	array:1.arguments
8	compile_commands.json	/^      "src\/VkZeroObjects.cpp"$/;"	s	array:3.arguments
8	compile_commands.json	/^      "src\/VoxelWorld.cpp"$/;"	s	array:4.arguments
8	compile_commands.json	/^      "src\/main.cpp"$/;"	s	array:2.arguments
A1B5G5R5UnormPack16	VkZero/include/VkZero/types.hpp	/^        A1B5G5R5UnormPack16 = 1000470000,$/;"	e	enum:VkZero::Format
A1B5G5R5UnormPack16	VkZero/include/types.hpp	/^        A1B5G5R5UnormPack16 = 1000470000,$/;"	e	enum:VkZero::Format
A1R5G5B5UnormPack16	VkZero/include/VkZero/types.hpp	/^        A1R5G5B5UnormPack16 = 8,$/;"	e	enum:VkZero::Format
A1R5G5B5UnormPack16	VkZero/include/types.hpp	/^        A1R5G5B5UnormPack16 = 8,$/;"	e	enum:VkZero::Format
A2B10G10R10SintPack32	VkZero/include/VkZero/types.hpp	/^        A2B10G10R10SintPack32 = 69,$/;"	e	enum:VkZero::Format
A2B10G10R10SintPack32	VkZero/include/types.hpp	/^        A2B10G10R10SintPack32 = 69,$/;"	e	enum:VkZero::Format
A2B10G10R10SnormPack32	VkZero/include/VkZero/types.hpp	/^        A2B10G10R10SnormPack32 = 65,$/;"	e	enum:VkZero::Format
A2B10G10R10SnormPack32	VkZero/include/types.hpp	/^        A2B10G10R10SnormPack32 = 65,$/;"	e	enum:VkZero::Format
A2B10G10R10SscaledPack32	VkZero/include/VkZero/types.hpp	/^        A2B10G10R10SscaledPack32 = 67,$/;"	e	enum:VkZero::Format
A2B10G10R10SscaledPack32	VkZero/include/types.hpp	/^        A2B10G10R10SscaledPack32 = 67,$/;"	e	enum:VkZero::Format
A2B10G10R10UintPack32	VkZero/include/VkZero/types.hpp	/^        A2B10G10R10UintPack32 = 68,$/;"	e	enum:VkZero::Format
A2B10G10R10UintPack32	VkZero/include/types.hpp	/^        A2B10G10R10UintPack32 = 68,$/;"	e	enum:VkZero::Format
A2B10G10R10UnormPack32	VkZero/include/VkZero/types.hpp	/^        A2B10G10R10UnormPack32 = 64,$/;"	e	enum:VkZero::Format
A2B10G10R10UnormPack32	VkZero/include/types.hpp	/^        A2B10G10R10UnormPack32 = 64,$/;"	e	enum:VkZero::Format
A2B10G10R10UscaledPack32	VkZero/include/VkZero/types.hpp	/^        A2B10G10R10UscaledPack32 = 66,$/;"	e	enum:VkZero::Format
A2B10G10R10UscaledPack32	VkZero/include/types.hpp	/^        A2B10G10R10UscaledPack32 = 66,$/;"	e	enum:VkZero::Format
A2R10G10B10SintPack32	VkZero/include/VkZero/types.hpp	/^        A2R10G10B10SintPack32 = 63,$/;"	e	enum:VkZero::Format
A2R10G10B10SintPack32	VkZero/include/types.hpp	/^        A2R10G10B10SintPack32 = 63,$/;"	e	enum:VkZero::Format
A2R10G10B10SnormPack32	VkZero/include/VkZero/types.hpp	/^        A2R10G10B10SnormPack32 = 59,$/;"	e	enum:VkZero::Format
A2R10G10B10SnormPack32	VkZero/include/types.hpp	/^        A2R10G10B10SnormPack32 = 59,$/;"	e	enum:VkZero::Format
A2R10G10B10SscaledPack32	VkZero/include/VkZero/types.hpp	/^        A2R10G10B10SscaledPack32 = 61,$/;"	e	enum:VkZero::Format
A2R10G10B10SscaledPack32	VkZero/include/types.hpp	/^        A2R10G10B10SscaledPack32 = 61,$/;"	e	enum:VkZero::Format
A2R10G10B10UintPack32	VkZero/include/VkZero/types.hpp	/^        A2R10G10B10UintPack32 = 62,$/;"	e	enum:VkZero::Format
A2R10G10B10UintPack32	VkZero/include/types.hpp	/^        A2R10G10B10UintPack32 = 62,$/;"	e	enum:VkZero::Format
A2R10G10B10UnormPack32	VkZero/include/VkZero/types.hpp	/^        A2R10G10B10UnormPack32 = 58,$/;"	e	enum:VkZero::Format
A2R10G10B10UnormPack32	VkZero/include/types.hpp	/^        A2R10G10B10UnormPack32 = 58,$/;"	e	enum:VkZero::Format
A2R10G10B10UscaledPack32	VkZero/include/VkZero/types.hpp	/^        A2R10G10B10UscaledPack32 = 60,$/;"	e	enum:VkZero::Format
A2R10G10B10UscaledPack32	VkZero/include/types.hpp	/^        A2R10G10B10UscaledPack32 = 60,$/;"	e	enum:VkZero::Format
A4B4G4R4UnormPack16	VkZero/include/VkZero/types.hpp	/^        A4B4G4R4UnormPack16 = 1000340001,$/;"	e	enum:VkZero::Format
A4B4G4R4UnormPack16	VkZero/include/types.hpp	/^        A4B4G4R4UnormPack16 = 1000340001,$/;"	e	enum:VkZero::Format
A4R4G4B4UnormPack16	VkZero/include/VkZero/types.hpp	/^        A4R4G4B4UnormPack16 = 1000340000,$/;"	e	enum:VkZero::Format
A4R4G4B4UnormPack16	VkZero/include/types.hpp	/^        A4R4G4B4UnormPack16 = 1000340000,$/;"	e	enum:VkZero::Format
A8B8G8R8SintPack32	VkZero/include/VkZero/types.hpp	/^        A8B8G8R8SintPack32 = 56,$/;"	e	enum:VkZero::Format
A8B8G8R8SintPack32	VkZero/include/types.hpp	/^        A8B8G8R8SintPack32 = 56,$/;"	e	enum:VkZero::Format
A8B8G8R8SnormPack32	VkZero/include/VkZero/types.hpp	/^        A8B8G8R8SnormPack32 = 52,$/;"	e	enum:VkZero::Format
A8B8G8R8SnormPack32	VkZero/include/types.hpp	/^        A8B8G8R8SnormPack32 = 52,$/;"	e	enum:VkZero::Format
A8B8G8R8SrgbPack32	VkZero/include/VkZero/types.hpp	/^        A8B8G8R8SrgbPack32 = 57,$/;"	e	enum:VkZero::Format
A8B8G8R8SrgbPack32	VkZero/include/types.hpp	/^        A8B8G8R8SrgbPack32 = 57,$/;"	e	enum:VkZero::Format
A8B8G8R8SscaledPack32	VkZero/include/VkZero/types.hpp	/^        A8B8G8R8SscaledPack32 = 54,$/;"	e	enum:VkZero::Format
A8B8G8R8SscaledPack32	VkZero/include/types.hpp	/^        A8B8G8R8SscaledPack32 = 54,$/;"	e	enum:VkZero::Format
A8B8G8R8UintPack32	VkZero/include/VkZero/types.hpp	/^        A8B8G8R8UintPack32 = 55,$/;"	e	enum:VkZero::Format
A8B8G8R8UintPack32	VkZero/include/types.hpp	/^        A8B8G8R8UintPack32 = 55,$/;"	e	enum:VkZero::Format
A8B8G8R8UnormPack32	VkZero/include/VkZero/types.hpp	/^        A8B8G8R8UnormPack32 = 51,$/;"	e	enum:VkZero::Format
A8B8G8R8UnormPack32	VkZero/include/types.hpp	/^        A8B8G8R8UnormPack32 = 51,$/;"	e	enum:VkZero::Format
A8B8G8R8UscaledPack32	VkZero/include/VkZero/types.hpp	/^        A8B8G8R8UscaledPack32 = 53,$/;"	e	enum:VkZero::Format
A8B8G8R8UscaledPack32	VkZero/include/types.hpp	/^        A8B8G8R8UscaledPack32 = 53,$/;"	e	enum:VkZero::Format
A8Unorm	VkZero/include/VkZero/types.hpp	/^        A8Unorm = 1000470001,$/;"	e	enum:VkZero::Format
A8Unorm	VkZero/include/types.hpp	/^        A8Unorm = 1000470001,$/;"	e	enum:VkZero::Format
ALIGN_UP	VkZero/include/VkZero/raytracing_pipeline.hpp	/^#define ALIGN_UP(/;"	d
ALIGN_UP	VkZero/include/VkZero/render_pass.hpp	/^#define ALIGN_UP(/;"	d
ALIGN_UP	VkZero/include/raytracing_pipeline.hpp	/^#define ALIGN_UP(/;"	d
ALIGN_UP	VkZero/include/render_pass.hpp	/^#define ALIGN_UP(/;"	d
ASTC10x10SfloatBlock	VkZero/include/VkZero/types.hpp	/^        ASTC10x10SfloatBlock = 1000066011,$/;"	e	enum:VkZero::Format
ASTC10x10SfloatBlock	VkZero/include/types.hpp	/^        ASTC10x10SfloatBlock = 1000066011,$/;"	e	enum:VkZero::Format
ASTC10x10SrgbBlock	VkZero/include/VkZero/types.hpp	/^        ASTC10x10SrgbBlock = 180,$/;"	e	enum:VkZero::Format
ASTC10x10SrgbBlock	VkZero/include/types.hpp	/^        ASTC10x10SrgbBlock = 180,$/;"	e	enum:VkZero::Format
ASTC10x10UnormBlock	VkZero/include/VkZero/types.hpp	/^        ASTC10x10UnormBlock = 179,$/;"	e	enum:VkZero::Format
ASTC10x10UnormBlock	VkZero/include/types.hpp	/^        ASTC10x10UnormBlock = 179,$/;"	e	enum:VkZero::Format
ASTC10x5SfloatBlock	VkZero/include/VkZero/types.hpp	/^        ASTC10x5SfloatBlock = 1000066008,$/;"	e	enum:VkZero::Format
ASTC10x5SfloatBlock	VkZero/include/types.hpp	/^        ASTC10x5SfloatBlock = 1000066008,$/;"	e	enum:VkZero::Format
ASTC10x5SrgbBlock	VkZero/include/VkZero/types.hpp	/^        ASTC10x5SrgbBlock = 174,$/;"	e	enum:VkZero::Format
ASTC10x5SrgbBlock	VkZero/include/types.hpp	/^        ASTC10x5SrgbBlock = 174,$/;"	e	enum:VkZero::Format
ASTC10x5UnormBlock	VkZero/include/VkZero/types.hpp	/^        ASTC10x5UnormBlock = 173,$/;"	e	enum:VkZero::Format
ASTC10x5UnormBlock	VkZero/include/types.hpp	/^        ASTC10x5UnormBlock = 173,$/;"	e	enum:VkZero::Format
ASTC10x6SfloatBlock	VkZero/include/VkZero/types.hpp	/^        ASTC10x6SfloatBlock = 1000066009,$/;"	e	enum:VkZero::Format
ASTC10x6SfloatBlock	VkZero/include/types.hpp	/^        ASTC10x6SfloatBlock = 1000066009,$/;"	e	enum:VkZero::Format
ASTC10x6SrgbBlock	VkZero/include/VkZero/types.hpp	/^        ASTC10x6SrgbBlock = 176,$/;"	e	enum:VkZero::Format
ASTC10x6SrgbBlock	VkZero/include/types.hpp	/^        ASTC10x6SrgbBlock = 176,$/;"	e	enum:VkZero::Format
ASTC10x6UnormBlock	VkZero/include/VkZero/types.hpp	/^        ASTC10x6UnormBlock = 175,$/;"	e	enum:VkZero::Format
ASTC10x6UnormBlock	VkZero/include/types.hpp	/^        ASTC10x6UnormBlock = 175,$/;"	e	enum:VkZero::Format
ASTC10x8SfloatBlock	VkZero/include/VkZero/types.hpp	/^        ASTC10x8SfloatBlock = 1000066010,$/;"	e	enum:VkZero::Format
ASTC10x8SfloatBlock	VkZero/include/types.hpp	/^        ASTC10x8SfloatBlock = 1000066010,$/;"	e	enum:VkZero::Format
ASTC10x8SrgbBlock	VkZero/include/VkZero/types.hpp	/^        ASTC10x8SrgbBlock = 178,$/;"	e	enum:VkZero::Format
ASTC10x8SrgbBlock	VkZero/include/types.hpp	/^        ASTC10x8SrgbBlock = 178,$/;"	e	enum:VkZero::Format
ASTC10x8UnormBlock	VkZero/include/VkZero/types.hpp	/^        ASTC10x8UnormBlock = 177,$/;"	e	enum:VkZero::Format
ASTC10x8UnormBlock	VkZero/include/types.hpp	/^        ASTC10x8UnormBlock = 177,$/;"	e	enum:VkZero::Format
ASTC12x10SfloatBlock	VkZero/include/VkZero/types.hpp	/^        ASTC12x10SfloatBlock = 1000066012,$/;"	e	enum:VkZero::Format
ASTC12x10SfloatBlock	VkZero/include/types.hpp	/^        ASTC12x10SfloatBlock = 1000066012,$/;"	e	enum:VkZero::Format
ASTC12x10SrgbBlock	VkZero/include/VkZero/types.hpp	/^        ASTC12x10SrgbBlock = 182,$/;"	e	enum:VkZero::Format
ASTC12x10SrgbBlock	VkZero/include/types.hpp	/^        ASTC12x10SrgbBlock = 182,$/;"	e	enum:VkZero::Format
ASTC12x10UnormBlock	VkZero/include/VkZero/types.hpp	/^        ASTC12x10UnormBlock = 181,$/;"	e	enum:VkZero::Format
ASTC12x10UnormBlock	VkZero/include/types.hpp	/^        ASTC12x10UnormBlock = 181,$/;"	e	enum:VkZero::Format
ASTC12x12SfloatBlock	VkZero/include/VkZero/types.hpp	/^        ASTC12x12SfloatBlock = 1000066013,$/;"	e	enum:VkZero::Format
ASTC12x12SfloatBlock	VkZero/include/types.hpp	/^        ASTC12x12SfloatBlock = 1000066013,$/;"	e	enum:VkZero::Format
ASTC12x12SrgbBlock	VkZero/include/VkZero/types.hpp	/^        ASTC12x12SrgbBlock = 184,$/;"	e	enum:VkZero::Format
ASTC12x12SrgbBlock	VkZero/include/types.hpp	/^        ASTC12x12SrgbBlock = 184,$/;"	e	enum:VkZero::Format
ASTC12x12UnormBlock	VkZero/include/VkZero/types.hpp	/^        ASTC12x12UnormBlock = 183,$/;"	e	enum:VkZero::Format
ASTC12x12UnormBlock	VkZero/include/types.hpp	/^        ASTC12x12UnormBlock = 183,$/;"	e	enum:VkZero::Format
ASTC4x4SfloatBlock	VkZero/include/VkZero/types.hpp	/^        ASTC4x4SfloatBlock = 1000066000,$/;"	e	enum:VkZero::Format
ASTC4x4SfloatBlock	VkZero/include/types.hpp	/^        ASTC4x4SfloatBlock = 1000066000,$/;"	e	enum:VkZero::Format
ASTC4x4SrgbBlock	VkZero/include/VkZero/types.hpp	/^        ASTC4x4SrgbBlock = 158,$/;"	e	enum:VkZero::Format
ASTC4x4SrgbBlock	VkZero/include/types.hpp	/^        ASTC4x4SrgbBlock = 158,$/;"	e	enum:VkZero::Format
ASTC4x4UnormBlock	VkZero/include/VkZero/types.hpp	/^        ASTC4x4UnormBlock = 157,$/;"	e	enum:VkZero::Format
ASTC4x4UnormBlock	VkZero/include/types.hpp	/^        ASTC4x4UnormBlock = 157,$/;"	e	enum:VkZero::Format
ASTC5x4SfloatBlock	VkZero/include/VkZero/types.hpp	/^        ASTC5x4SfloatBlock = 1000066001,$/;"	e	enum:VkZero::Format
ASTC5x4SfloatBlock	VkZero/include/types.hpp	/^        ASTC5x4SfloatBlock = 1000066001,$/;"	e	enum:VkZero::Format
ASTC5x4SrgbBlock	VkZero/include/VkZero/types.hpp	/^        ASTC5x4SrgbBlock = 160,$/;"	e	enum:VkZero::Format
ASTC5x4SrgbBlock	VkZero/include/types.hpp	/^        ASTC5x4SrgbBlock = 160,$/;"	e	enum:VkZero::Format
ASTC5x4UnormBlock	VkZero/include/VkZero/types.hpp	/^        ASTC5x4UnormBlock = 159,$/;"	e	enum:VkZero::Format
ASTC5x4UnormBlock	VkZero/include/types.hpp	/^        ASTC5x4UnormBlock = 159,$/;"	e	enum:VkZero::Format
ASTC5x5SfloatBlock	VkZero/include/VkZero/types.hpp	/^        ASTC5x5SfloatBlock = 1000066002,$/;"	e	enum:VkZero::Format
ASTC5x5SfloatBlock	VkZero/include/types.hpp	/^        ASTC5x5SfloatBlock = 1000066002,$/;"	e	enum:VkZero::Format
ASTC5x5SrgbBlock	VkZero/include/VkZero/types.hpp	/^        ASTC5x5SrgbBlock = 162,$/;"	e	enum:VkZero::Format
ASTC5x5SrgbBlock	VkZero/include/types.hpp	/^        ASTC5x5SrgbBlock = 162,$/;"	e	enum:VkZero::Format
ASTC5x5UnormBlock	VkZero/include/VkZero/types.hpp	/^        ASTC5x5UnormBlock = 161,$/;"	e	enum:VkZero::Format
ASTC5x5UnormBlock	VkZero/include/types.hpp	/^        ASTC5x5UnormBlock = 161,$/;"	e	enum:VkZero::Format
ASTC6x5SfloatBlock	VkZero/include/VkZero/types.hpp	/^        ASTC6x5SfloatBlock = 1000066003,$/;"	e	enum:VkZero::Format
ASTC6x5SfloatBlock	VkZero/include/types.hpp	/^        ASTC6x5SfloatBlock = 1000066003,$/;"	e	enum:VkZero::Format
ASTC6x5SrgbBlock	VkZero/include/VkZero/types.hpp	/^        ASTC6x5SrgbBlock = 164,$/;"	e	enum:VkZero::Format
ASTC6x5SrgbBlock	VkZero/include/types.hpp	/^        ASTC6x5SrgbBlock = 164,$/;"	e	enum:VkZero::Format
ASTC6x5UnormBlock	VkZero/include/VkZero/types.hpp	/^        ASTC6x5UnormBlock = 163,$/;"	e	enum:VkZero::Format
ASTC6x5UnormBlock	VkZero/include/types.hpp	/^        ASTC6x5UnormBlock = 163,$/;"	e	enum:VkZero::Format
ASTC6x6SfloatBlock	VkZero/include/VkZero/types.hpp	/^        ASTC6x6SfloatBlock = 1000066004,$/;"	e	enum:VkZero::Format
ASTC6x6SfloatBlock	VkZero/include/types.hpp	/^        ASTC6x6SfloatBlock = 1000066004,$/;"	e	enum:VkZero::Format
ASTC6x6SrgbBlock	VkZero/include/VkZero/types.hpp	/^        ASTC6x6SrgbBlock = 166,$/;"	e	enum:VkZero::Format
ASTC6x6SrgbBlock	VkZero/include/types.hpp	/^        ASTC6x6SrgbBlock = 166,$/;"	e	enum:VkZero::Format
ASTC6x6UnormBlock	VkZero/include/VkZero/types.hpp	/^        ASTC6x6UnormBlock = 165,$/;"	e	enum:VkZero::Format
ASTC6x6UnormBlock	VkZero/include/types.hpp	/^        ASTC6x6UnormBlock = 165,$/;"	e	enum:VkZero::Format
ASTC8x5SfloatBlock	VkZero/include/VkZero/types.hpp	/^        ASTC8x5SfloatBlock = 1000066005,$/;"	e	enum:VkZero::Format
ASTC8x5SfloatBlock	VkZero/include/types.hpp	/^        ASTC8x5SfloatBlock = 1000066005,$/;"	e	enum:VkZero::Format
ASTC8x5SrgbBlock	VkZero/include/VkZero/types.hpp	/^        ASTC8x5SrgbBlock = 168,$/;"	e	enum:VkZero::Format
ASTC8x5SrgbBlock	VkZero/include/types.hpp	/^        ASTC8x5SrgbBlock = 168,$/;"	e	enum:VkZero::Format
ASTC8x5UnormBlock	VkZero/include/VkZero/types.hpp	/^        ASTC8x5UnormBlock = 167,$/;"	e	enum:VkZero::Format
ASTC8x5UnormBlock	VkZero/include/types.hpp	/^        ASTC8x5UnormBlock = 167,$/;"	e	enum:VkZero::Format
ASTC8x6SfloatBlock	VkZero/include/VkZero/types.hpp	/^        ASTC8x6SfloatBlock = 1000066006,$/;"	e	enum:VkZero::Format
ASTC8x6SfloatBlock	VkZero/include/types.hpp	/^        ASTC8x6SfloatBlock = 1000066006,$/;"	e	enum:VkZero::Format
ASTC8x6SrgbBlock	VkZero/include/VkZero/types.hpp	/^        ASTC8x6SrgbBlock = 170,$/;"	e	enum:VkZero::Format
ASTC8x6SrgbBlock	VkZero/include/types.hpp	/^        ASTC8x6SrgbBlock = 170,$/;"	e	enum:VkZero::Format
ASTC8x6UnormBlock	VkZero/include/VkZero/types.hpp	/^        ASTC8x6UnormBlock = 169,$/;"	e	enum:VkZero::Format
ASTC8x6UnormBlock	VkZero/include/types.hpp	/^        ASTC8x6UnormBlock = 169,$/;"	e	enum:VkZero::Format
ASTC8x8SfloatBlock	VkZero/include/VkZero/types.hpp	/^        ASTC8x8SfloatBlock = 1000066007,$/;"	e	enum:VkZero::Format
ASTC8x8SfloatBlock	VkZero/include/types.hpp	/^        ASTC8x8SfloatBlock = 1000066007,$/;"	e	enum:VkZero::Format
ASTC8x8SrgbBlock	VkZero/include/VkZero/types.hpp	/^        ASTC8x8SrgbBlock = 172,$/;"	e	enum:VkZero::Format
ASTC8x8SrgbBlock	VkZero/include/types.hpp	/^        ASTC8x8SrgbBlock = 172,$/;"	e	enum:VkZero::Format
ASTC8x8UnormBlock	VkZero/include/VkZero/types.hpp	/^        ASTC8x8UnormBlock = 171,$/;"	e	enum:VkZero::Format
ASTC8x8UnormBlock	VkZero/include/types.hpp	/^        ASTC8x8UnormBlock = 171,$/;"	e	enum:VkZero::Format
ATTACHMENT_COLOR	VkZero/include/VkZero/render_pass.hpp	/^    ATTACHMENT_COLOR,$/;"	e	enum:VkZero::AttachmentBase::AttachmentType
ATTACHMENT_COLOR	VkZero/include/render_pass.hpp	/^    ATTACHMENT_COLOR,$/;"	e	enum:VkZero::AttachmentBase::AttachmentType
ATTACHMENT_DEPTH	VkZero/include/VkZero/render_pass.hpp	/^    ATTACHMENT_DEPTH,$/;"	e	enum:VkZero::AttachmentBase::AttachmentType
ATTACHMENT_DEPTH	VkZero/include/render_pass.hpp	/^    ATTACHMENT_DEPTH,$/;"	e	enum:VkZero::AttachmentBase::AttachmentType
ATTACHMENT_INPUT	VkZero/include/VkZero/render_pass.hpp	/^    ATTACHMENT_INPUT,$/;"	e	enum:VkZero::AttachmentBase::AttachmentType
ATTACHMENT_INPUT	VkZero/include/render_pass.hpp	/^    ATTACHMENT_INPUT,$/;"	e	enum:VkZero::AttachmentBase::AttachmentType
ATTACHMENT_PRESERVE	VkZero/include/VkZero/render_pass.hpp	/^    ATTACHMENT_PRESERVE,$/;"	e	enum:VkZero::AttachmentBase::AttachmentType
ATTACHMENT_PRESERVE	VkZero/include/render_pass.hpp	/^    ATTACHMENT_PRESERVE,$/;"	e	enum:VkZero::AttachmentBase::AttachmentType
AccelerationStructureKHR	VkZero/include/VkZero/types.hpp	/^        AccelerationStructureKHR = 1000150000,$/;"	e	enum:VkZero::DescriptorType
AccelerationStructureKHR	VkZero/include/types.hpp	/^        AccelerationStructureKHR = 1000150000,$/;"	e	enum:VkZero::DescriptorType
AccelerationStructureNV	VkZero/include/VkZero/types.hpp	/^        AccelerationStructureNV = 1000165000,$/;"	e	enum:VkZero::DescriptorType
AccelerationStructureNV	VkZero/include/types.hpp	/^        AccelerationStructureNV = 1000165000,$/;"	e	enum:VkZero::DescriptorType
Adding New Shaders	README.md	/^## Adding New Shaders$/;"	s	chapter:VoxelEngine
AllBindings	VkZero/include/VkZero/binding.hpp	/^  using AllBindings = decltype(std::tuple_cat($/;"	t	struct:VkZero::CombinedBindings
Arguments_must_be_floating_point_values	include/FastNoiseLite.hpp	/^struct FastNoiseLite::Arguments_must_be_floating_point_values<double> {};$/;"	s	class:FastNoiseLite
Arguments_must_be_floating_point_values	include/FastNoiseLite.hpp	/^struct FastNoiseLite::Arguments_must_be_floating_point_values<float> {};$/;"	s	class:FastNoiseLite
Arguments_must_be_floating_point_values	include/FastNoiseLite.hpp	/^struct FastNoiseLite::Arguments_must_be_floating_point_values<long double> {};$/;"	s	class:FastNoiseLite
AttachmentBase	VkZero/include/VkZero/render_pass.hpp	/^struct AttachmentBase {$/;"	s	namespace:VkZero
AttachmentBase	VkZero/include/render_pass.hpp	/^struct AttachmentBase {$/;"	s	namespace:VkZero
AttachmentBase	VkZero/src/graphics_renderpass.cpp	/^AttachmentBase::AttachmentBase(const char *name) {$/;"	f	class:AttachmentBase
AttachmentBase	VkZero/src/graphics_renderpass.cpp	/^AttachmentBase::AttachmentBase(const char *name, Format format, int location,$/;"	f	class:AttachmentBase
AttachmentFeedbackLoopOptimal	VkZero/include/VkZero/types.hpp	/^        AttachmentFeedbackLoopOptimal = 1000339000,$/;"	e	enum:VkZero::ImageLayout
AttachmentFeedbackLoopOptimal	VkZero/include/types.hpp	/^        AttachmentFeedbackLoopOptimal = 1000339000,$/;"	e	enum:VkZero::ImageLayout
AttachmentImage	VkZero/include/VkZero/image.hpp	/^using AttachmentImage = class MultiImage<3>;$/;"	t	namespace:VkZero	typeref:class:MultiImage<3>
AttachmentImage	VkZero/include/image.hpp	/^using AttachmentImage = class MultiImage<3>;$/;"	t	namespace:VkZero	typeref:class:MultiImage<3>
AttachmentImpl_T	VkZero/include/VkZero/Internal/graphics_renderpass_internal.hpp	/^  AttachmentImpl_T(const char *name) : name(name), type(3) {}$/;"	f	struct:VkZero::AttachmentImpl_T
AttachmentImpl_T	VkZero/include/VkZero/Internal/graphics_renderpass_internal.hpp	/^  AttachmentImpl_T(const char *name, VkFormat format, int location, int type)$/;"	f	struct:VkZero::AttachmentImpl_T
AttachmentImpl_T	VkZero/include/VkZero/Internal/graphics_renderpass_internal.hpp	/^struct AttachmentImpl_T {$/;"	s	namespace:VkZero
AttachmentOptimal	VkZero/include/VkZero/types.hpp	/^        AttachmentOptimal = 1000314001,$/;"	e	enum:VkZero::ImageLayout
AttachmentOptimal	VkZero/include/types.hpp	/^        AttachmentOptimal = 1000314001,$/;"	e	enum:VkZero::ImageLayout
AttachmentType	VkZero/include/VkZero/render_pass.hpp	/^  enum class AttachmentType {$/;"	g	struct:VkZero::AttachmentBase
AttachmentType	VkZero/include/render_pass.hpp	/^  enum class AttachmentType {$/;"	g	struct:VkZero::AttachmentBase
Attachments	VkZero/include/VkZero/graphics_pipeline.hpp	/^  using Attachments = ShaderGroup::Attachments;$/;"	t	class:VkZero::GraphicsPipeline	typeref:typename:ShaderGroup::Attachments
Attachments	VkZero/include/VkZero/raytracing_pipeline.hpp	/^  using Attachments = ShaderGroup::Attachments;$/;"	t	class:VkZero::RaytracingPipeline	typeref:typename:ShaderGroup::Attachments
Attachments	VkZero/include/VkZero/shader.hpp	/^        using Attachments = ShaderDetails::attachments_extractor<std::tuple<ShaderOptions...>>::/;"	t	class:VkZero::Shader	typeref:typename:ShaderDetails::attachments_extractor<std::tuple<ShaderOptions...>>::type::Options
Attachments	VkZero/include/VkZero/shader_group.hpp	/^    using Attachments =$/;"	t	class:VkZero::ShaderGroup	typeref:typename:ShaderGroupDetails::attachment_collector<shaders>::value
Attachments	VkZero/include/graphics_pipeline.hpp	/^  using Attachments = ShaderGroup::Attachments;$/;"	t	class:VkZero::GraphicsPipeline	typeref:typename:ShaderGroup::Attachments
Attachments	VkZero/include/raytracing_pipeline.hpp	/^  using Attachments = ShaderGroup::Attachments;$/;"	t	class:VkZero::RaytracingPipeline	typeref:typename:ShaderGroup::Attachments
Attachments	VkZero/include/shader.hpp	/^        using Attachments = ShaderDetails::attachments_extractor<std::tuple<ShaderOptions...>>::/;"	t	class:VkZero::Shader	typeref:typename:ShaderDetails::attachments_extractor<std::tuple<ShaderOptions...>>::type::Options
Attachments	VkZero/include/shader_group.hpp	/^    using Attachments =$/;"	t	class:VkZero::ShaderGroup	typeref:typename:ShaderGroupDetails::attachment_collector<shaders>::value
B10G11R11UfloatPack32	VkZero/include/VkZero/types.hpp	/^        B10G11R11UfloatPack32 = 122,$/;"	e	enum:VkZero::Format
B10G11R11UfloatPack32	VkZero/include/types.hpp	/^        B10G11R11UfloatPack32 = 122,$/;"	e	enum:VkZero::Format
B10X6G10X6R10X6G10X6422Unorm4Pack16	VkZero/include/VkZero/types.hpp	/^        B10X6G10X6R10X6G10X6422Unorm4Pack16 = 1000156011,$/;"	e	enum:VkZero::Format
B10X6G10X6R10X6G10X6422Unorm4Pack16	VkZero/include/types.hpp	/^        B10X6G10X6R10X6G10X6422Unorm4Pack16 = 1000156011,$/;"	e	enum:VkZero::Format
B12X4G12X4R12X4G12X4422Unorm4Pack16	VkZero/include/VkZero/types.hpp	/^        B12X4G12X4R12X4G12X4422Unorm4Pack16 = 1000156021,$/;"	e	enum:VkZero::Format
B12X4G12X4R12X4G12X4422Unorm4Pack16	VkZero/include/types.hpp	/^        B12X4G12X4R12X4G12X4422Unorm4Pack16 = 1000156021,$/;"	e	enum:VkZero::Format
B16G16R16G16422Unorm	VkZero/include/VkZero/types.hpp	/^        B16G16R16G16422Unorm = 1000156028,$/;"	e	enum:VkZero::Format
B16G16R16G16422Unorm	VkZero/include/types.hpp	/^        B16G16R16G16422Unorm = 1000156028,$/;"	e	enum:VkZero::Format
B4G4R4A4UnormPack16	VkZero/include/VkZero/types.hpp	/^        B4G4R4A4UnormPack16 = 3,$/;"	e	enum:VkZero::Format
B4G4R4A4UnormPack16	VkZero/include/types.hpp	/^        B4G4R4A4UnormPack16 = 3,$/;"	e	enum:VkZero::Format
B5G5R5A1UnormPack16	VkZero/include/VkZero/types.hpp	/^        B5G5R5A1UnormPack16 = 7,$/;"	e	enum:VkZero::Format
B5G5R5A1UnormPack16	VkZero/include/types.hpp	/^        B5G5R5A1UnormPack16 = 7,$/;"	e	enum:VkZero::Format
B5G6R5UnormPack16	VkZero/include/VkZero/types.hpp	/^        B5G6R5UnormPack16 = 5,$/;"	e	enum:VkZero::Format
B5G6R5UnormPack16	VkZero/include/types.hpp	/^        B5G6R5UnormPack16 = 5,$/;"	e	enum:VkZero::Format
B8G8R8A8Sint	VkZero/include/VkZero/types.hpp	/^        B8G8R8A8Sint = 49,$/;"	e	enum:VkZero::Format
B8G8R8A8Sint	VkZero/include/types.hpp	/^        B8G8R8A8Sint = 49,$/;"	e	enum:VkZero::Format
B8G8R8A8Snorm	VkZero/include/VkZero/types.hpp	/^        B8G8R8A8Snorm = 45,$/;"	e	enum:VkZero::Format
B8G8R8A8Snorm	VkZero/include/types.hpp	/^        B8G8R8A8Snorm = 45,$/;"	e	enum:VkZero::Format
B8G8R8A8Srgb	VkZero/include/VkZero/types.hpp	/^        B8G8R8A8Srgb = 50,$/;"	e	enum:VkZero::Format
B8G8R8A8Srgb	VkZero/include/types.hpp	/^        B8G8R8A8Srgb = 50,$/;"	e	enum:VkZero::Format
B8G8R8A8Sscaled	VkZero/include/VkZero/types.hpp	/^        B8G8R8A8Sscaled = 47,$/;"	e	enum:VkZero::Format
B8G8R8A8Sscaled	VkZero/include/types.hpp	/^        B8G8R8A8Sscaled = 47,$/;"	e	enum:VkZero::Format
B8G8R8A8Uint	VkZero/include/VkZero/types.hpp	/^        B8G8R8A8Uint = 48,$/;"	e	enum:VkZero::Format
B8G8R8A8Uint	VkZero/include/types.hpp	/^        B8G8R8A8Uint = 48,$/;"	e	enum:VkZero::Format
B8G8R8A8Unorm	VkZero/include/VkZero/types.hpp	/^        B8G8R8A8Unorm = 44,$/;"	e	enum:VkZero::Format
B8G8R8A8Unorm	VkZero/include/types.hpp	/^        B8G8R8A8Unorm = 44,$/;"	e	enum:VkZero::Format
B8G8R8A8Uscaled	VkZero/include/VkZero/types.hpp	/^        B8G8R8A8Uscaled = 46,$/;"	e	enum:VkZero::Format
B8G8R8A8Uscaled	VkZero/include/types.hpp	/^        B8G8R8A8Uscaled = 46,$/;"	e	enum:VkZero::Format
B8G8R8G8422Unorm	VkZero/include/VkZero/types.hpp	/^        B8G8R8G8422Unorm = 1000156001,$/;"	e	enum:VkZero::Format
B8G8R8G8422Unorm	VkZero/include/types.hpp	/^        B8G8R8G8422Unorm = 1000156001,$/;"	e	enum:VkZero::Format
B8G8R8Sint	VkZero/include/VkZero/types.hpp	/^        B8G8R8Sint = 35,$/;"	e	enum:VkZero::Format
B8G8R8Sint	VkZero/include/types.hpp	/^        B8G8R8Sint = 35,$/;"	e	enum:VkZero::Format
B8G8R8Snorm	VkZero/include/VkZero/types.hpp	/^        B8G8R8Snorm = 31,$/;"	e	enum:VkZero::Format
B8G8R8Snorm	VkZero/include/types.hpp	/^        B8G8R8Snorm = 31,$/;"	e	enum:VkZero::Format
B8G8R8Srgb	VkZero/include/VkZero/types.hpp	/^        B8G8R8Srgb = 36,$/;"	e	enum:VkZero::Format
B8G8R8Srgb	VkZero/include/types.hpp	/^        B8G8R8Srgb = 36,$/;"	e	enum:VkZero::Format
B8G8R8Sscaled	VkZero/include/VkZero/types.hpp	/^        B8G8R8Sscaled = 33,$/;"	e	enum:VkZero::Format
B8G8R8Sscaled	VkZero/include/types.hpp	/^        B8G8R8Sscaled = 33,$/;"	e	enum:VkZero::Format
B8G8R8Uint	VkZero/include/VkZero/types.hpp	/^        B8G8R8Uint = 34,$/;"	e	enum:VkZero::Format
B8G8R8Uint	VkZero/include/types.hpp	/^        B8G8R8Uint = 34,$/;"	e	enum:VkZero::Format
B8G8R8Unorm	VkZero/include/VkZero/types.hpp	/^        B8G8R8Unorm = 30,$/;"	e	enum:VkZero::Format
B8G8R8Unorm	VkZero/include/types.hpp	/^        B8G8R8Unorm = 30,$/;"	e	enum:VkZero::Format
B8G8R8Uscaled	VkZero/include/VkZero/types.hpp	/^        B8G8R8Uscaled = 32,$/;"	e	enum:VkZero::Format
B8G8R8Uscaled	VkZero/include/types.hpp	/^        B8G8R8Uscaled = 32,$/;"	e	enum:VkZero::Format
BC1RgbSrgbBlock	VkZero/include/VkZero/types.hpp	/^        BC1RgbSrgbBlock = 132,$/;"	e	enum:VkZero::Format
BC1RgbSrgbBlock	VkZero/include/types.hpp	/^        BC1RgbSrgbBlock = 132,$/;"	e	enum:VkZero::Format
BC1RgbUnormBlock	VkZero/include/VkZero/types.hpp	/^        BC1RgbUnormBlock = 131,$/;"	e	enum:VkZero::Format
BC1RgbUnormBlock	VkZero/include/types.hpp	/^        BC1RgbUnormBlock = 131,$/;"	e	enum:VkZero::Format
BC1RgbaSrgbBlock	VkZero/include/VkZero/types.hpp	/^        BC1RgbaSrgbBlock = 134,$/;"	e	enum:VkZero::Format
BC1RgbaSrgbBlock	VkZero/include/types.hpp	/^        BC1RgbaSrgbBlock = 134,$/;"	e	enum:VkZero::Format
BC1RgbaUnormBlock	VkZero/include/VkZero/types.hpp	/^        BC1RgbaUnormBlock = 133,$/;"	e	enum:VkZero::Format
BC1RgbaUnormBlock	VkZero/include/types.hpp	/^        BC1RgbaUnormBlock = 133,$/;"	e	enum:VkZero::Format
BC2SrgbBlock	VkZero/include/VkZero/types.hpp	/^        BC2SrgbBlock = 136,$/;"	e	enum:VkZero::Format
BC2SrgbBlock	VkZero/include/types.hpp	/^        BC2SrgbBlock = 136,$/;"	e	enum:VkZero::Format
BC2UnormBlock	VkZero/include/VkZero/types.hpp	/^        BC2UnormBlock = 135,$/;"	e	enum:VkZero::Format
BC2UnormBlock	VkZero/include/types.hpp	/^        BC2UnormBlock = 135,$/;"	e	enum:VkZero::Format
BC3SrgbBlock	VkZero/include/VkZero/types.hpp	/^        BC3SrgbBlock = 138,$/;"	e	enum:VkZero::Format
BC3SrgbBlock	VkZero/include/types.hpp	/^        BC3SrgbBlock = 138,$/;"	e	enum:VkZero::Format
BC3UnormBlock	VkZero/include/VkZero/types.hpp	/^        BC3UnormBlock = 137,$/;"	e	enum:VkZero::Format
BC3UnormBlock	VkZero/include/types.hpp	/^        BC3UnormBlock = 137,$/;"	e	enum:VkZero::Format
BC4SnormBlock	VkZero/include/VkZero/types.hpp	/^        BC4SnormBlock = 140,$/;"	e	enum:VkZero::Format
BC4SnormBlock	VkZero/include/types.hpp	/^        BC4SnormBlock = 140,$/;"	e	enum:VkZero::Format
BC4UnormBlock	VkZero/include/VkZero/types.hpp	/^        BC4UnormBlock = 139,$/;"	e	enum:VkZero::Format
BC4UnormBlock	VkZero/include/types.hpp	/^        BC4UnormBlock = 139,$/;"	e	enum:VkZero::Format
BC5SnormBlock	VkZero/include/VkZero/types.hpp	/^        BC5SnormBlock = 142,$/;"	e	enum:VkZero::Format
BC5SnormBlock	VkZero/include/types.hpp	/^        BC5SnormBlock = 142,$/;"	e	enum:VkZero::Format
BC5UnormBlock	VkZero/include/VkZero/types.hpp	/^        BC5UnormBlock = 141,$/;"	e	enum:VkZero::Format
BC5UnormBlock	VkZero/include/types.hpp	/^        BC5UnormBlock = 141,$/;"	e	enum:VkZero::Format
BC6HSfloatBlock	VkZero/include/VkZero/types.hpp	/^        BC6HSfloatBlock = 144,$/;"	e	enum:VkZero::Format
BC6HSfloatBlock	VkZero/include/types.hpp	/^        BC6HSfloatBlock = 144,$/;"	e	enum:VkZero::Format
BC6HUfloatBlock	VkZero/include/VkZero/types.hpp	/^        BC6HUfloatBlock = 143,$/;"	e	enum:VkZero::Format
BC6HUfloatBlock	VkZero/include/types.hpp	/^        BC6HUfloatBlock = 143,$/;"	e	enum:VkZero::Format
BC7SrgbBlock	VkZero/include/VkZero/types.hpp	/^        BC7SrgbBlock = 146,$/;"	e	enum:VkZero::Format
BC7SrgbBlock	VkZero/include/types.hpp	/^        BC7SrgbBlock = 146,$/;"	e	enum:VkZero::Format
BC7UnormBlock	VkZero/include/VkZero/types.hpp	/^        BC7UnormBlock = 145,$/;"	e	enum:VkZero::Format
BC7UnormBlock	VkZero/include/types.hpp	/^        BC7UnormBlock = 145,$/;"	e	enum:VkZero::Format
Bind	VkZero/include/VkZero/binding.hpp	/^template <typename type, int binding> struct Bind {$/;"	s	namespace:VkZero
BindResource	VkZero/include/VkZero/Internal/bind_resource_internal.hpp	/^    class BindResource$/;"	c	namespace:VkZero
BindingResources	VkZero/include/VkZero/shader_resource_set.hpp	/^  using BindingResources = std::tuple<Bindings...>;$/;"	t	class:VkZero::ShaderResourceSet	typeref:typename:std::tuple<Bindings...>
BindingResources	VkZero/include/shader_resource_set.hpp	/^  using BindingResources = std::tuple<Bindings...>;$/;"	t	class:VkZero::ShaderResourceSet	typeref:typename:std::tuple<Bindings...>
Bindings	VkZero/include/VkZero/shader.hpp	/^        using Bindings = ShaderDetails::bindings_extractor<std::tuple<ShaderOptions...>>::type::/;"	t	class:VkZero::Shader	typeref:typename:ShaderDetails::bindings_extractor<std::tuple<ShaderOptions...>>::type::Options
Bindings	VkZero/include/shader.hpp	/^        using Bindings = ShaderDetails::bindings_extractor<std::tuple<ShaderOptions...>>::type::/;"	t	class:VkZero::Shader	typeref:typename:ShaderDetails::bindings_extractor<std::tuple<ShaderOptions...>>::type::Options
BindingsList	VkZero/include/VkZero/shader.hpp	/^        using BindingsList = Bindings;$/;"	t	class:VkZero::Shader	typeref:typename:Bindings
BindingsList	VkZero/include/shader.hpp	/^        using BindingsList = Bindings;$/;"	t	class:VkZero::Shader	typeref:typename:Bindings
BlockMatchImageQCOM	VkZero/include/VkZero/types.hpp	/^        BlockMatchImageQCOM = 1000440001,$/;"	e	enum:VkZero::DescriptorType
BlockMatchImageQCOM	VkZero/include/types.hpp	/^        BlockMatchImageQCOM = 1000440001,$/;"	e	enum:VkZero::DescriptorType
Building	README.md	/^## Building$/;"	s	chapter:VoxelEngine
CalculateFractalBounding	include/FastNoiseLite.hpp	/^  void CalculateFractalBounding() {$/;"	f	class:FastNoiseLite	typeref:typename:void
Camera	include/Camera.hpp	/^class Camera {$/;"	c
Camera	src/Camera.cpp	/^Camera::Camera(VkZero::Window &window) : uniformBuffer(ubo) {$/;"	f	class:Camera
CellularDistanceFunction	include/FastNoiseLite.hpp	/^  enum CellularDistanceFunction {$/;"	g	class:FastNoiseLite
CellularDistanceFunction_Euclidean	include/FastNoiseLite.hpp	/^    CellularDistanceFunction_Euclidean,$/;"	e	enum:FastNoiseLite::CellularDistanceFunction
CellularDistanceFunction_EuclideanSq	include/FastNoiseLite.hpp	/^    CellularDistanceFunction_EuclideanSq,$/;"	e	enum:FastNoiseLite::CellularDistanceFunction
CellularDistanceFunction_Hybrid	include/FastNoiseLite.hpp	/^    CellularDistanceFunction_Hybrid$/;"	e	enum:FastNoiseLite::CellularDistanceFunction
CellularDistanceFunction_Manhattan	include/FastNoiseLite.hpp	/^    CellularDistanceFunction_Manhattan,$/;"	e	enum:FastNoiseLite::CellularDistanceFunction
CellularReturnType	include/FastNoiseLite.hpp	/^  enum CellularReturnType {$/;"	g	class:FastNoiseLite
CellularReturnType_CellValue	include/FastNoiseLite.hpp	/^    CellularReturnType_CellValue,$/;"	e	enum:FastNoiseLite::CellularReturnType
CellularReturnType_Distance	include/FastNoiseLite.hpp	/^    CellularReturnType_Distance,$/;"	e	enum:FastNoiseLite::CellularReturnType
CellularReturnType_Distance2	include/FastNoiseLite.hpp	/^    CellularReturnType_Distance2,$/;"	e	enum:FastNoiseLite::CellularReturnType
CellularReturnType_Distance2Add	include/FastNoiseLite.hpp	/^    CellularReturnType_Distance2Add,$/;"	e	enum:FastNoiseLite::CellularReturnType
CellularReturnType_Distance2Div	include/FastNoiseLite.hpp	/^    CellularReturnType_Distance2Div$/;"	e	enum:FastNoiseLite::CellularReturnType
CellularReturnType_Distance2Mul	include/FastNoiseLite.hpp	/^    CellularReturnType_Distance2Mul,$/;"	e	enum:FastNoiseLite::CellularReturnType
CellularReturnType_Distance2Sub	include/FastNoiseLite.hpp	/^    CellularReturnType_Distance2Sub,$/;"	e	enum:FastNoiseLite::CellularReturnType
Cleaning	README.md	/^## Cleaning$/;"	s	chapter:VoxelEngine
ColorAttachment	VkZero/include/VkZero/render_pass.hpp	/^  ColorAttachment()$/;"	f	struct:VkZero::ColorAttachment
ColorAttachment	VkZero/include/VkZero/render_pass.hpp	/^struct ColorAttachment : public AttachmentBase {$/;"	s	namespace:VkZero
ColorAttachment	VkZero/include/render_pass.hpp	/^  ColorAttachment()$/;"	f	struct:VkZero::ColorAttachment
ColorAttachment	VkZero/include/render_pass.hpp	/^struct ColorAttachment : public AttachmentBase {$/;"	s	namespace:VkZero
ColorAttachmentOptimal	VkZero/include/VkZero/types.hpp	/^        ColorAttachmentOptimal = 2,$/;"	e	enum:VkZero::ImageLayout
ColorAttachmentOptimal	VkZero/include/types.hpp	/^        ColorAttachmentOptimal = 2,$/;"	e	enum:VkZero::ImageLayout
CombinedBindings	VkZero/include/VkZero/binding.hpp	/^template <typename... Shaders> struct CombinedBindings {$/;"	s	namespace:VkZero
CombinedImageSampler	VkZero/include/VkZero/types.hpp	/^        CombinedImageSampler = 1,$/;"	e	enum:VkZero::DescriptorType
CombinedImageSampler	VkZero/include/types.hpp	/^        CombinedImageSampler = 1,$/;"	e	enum:VkZero::DescriptorType
CreateDebugUtilsMessengerEXT	VkZero/src/core.cpp	/^VkResult VkZeroCoreImpl_T::CreateDebugUtilsMessengerEXT($/;"	f	class:VkZeroCoreImpl_T	typeref:typename:VkResult
CreateImages	VkZero/include/VkZero/Internal/image_internal.hpp	/^  void CreateImages(VkImageUsageFlags usage, VkMemoryPropertyFlags properties,$/;"	f	class:VkZero::Image	typeref:typename:void
CreateStagingBuffer	VkZero/include/VkZero/Internal/image_internal.hpp	/^  void CreateStagingBuffer(struct StagingData_T **staging, size_t imageCount) {$/;"	f	class:VkZero::Image	typeref:typename:void
CubicLerp	include/FastNoiseLite.hpp	/^  static float CubicLerp(float a, float b, float c, float d, float t) {$/;"	f	class:FastNoiseLite	typeref:typename:float
D16Unorm	VkZero/include/VkZero/types.hpp	/^        D16Unorm = 124,$/;"	e	enum:VkZero::Format
D16Unorm	VkZero/include/types.hpp	/^        D16Unorm = 124,$/;"	e	enum:VkZero::Format
D16UnormS8Uint	VkZero/include/VkZero/types.hpp	/^        D16UnormS8Uint = 128,$/;"	e	enum:VkZero::Format
D16UnormS8Uint	VkZero/include/types.hpp	/^        D16UnormS8Uint = 128,$/;"	e	enum:VkZero::Format
D24UnormS8Uint	VkZero/include/VkZero/types.hpp	/^        D24UnormS8Uint = 129,$/;"	e	enum:VkZero::Format
D24UnormS8Uint	VkZero/include/types.hpp	/^        D24UnormS8Uint = 129,$/;"	e	enum:VkZero::Format
D32Sfloat	VkZero/include/VkZero/types.hpp	/^        D32Sfloat = 126,$/;"	e	enum:VkZero::Format
D32Sfloat	VkZero/include/types.hpp	/^        D32Sfloat = 126,$/;"	e	enum:VkZero::Format
D32SfloatS8Uint	VkZero/include/VkZero/types.hpp	/^        D32SfloatS8Uint = 130,$/;"	e	enum:VkZero::Format
D32SfloatS8Uint	VkZero/include/types.hpp	/^        D32SfloatS8Uint = 130,$/;"	e	enum:VkZero::Format
DEFINE_VK_ZERO_CORE	VkZero/include/VkZero/Internal/core_internal.hpp	/^#define DEFINE_VK_ZERO_CORE /;"	d
Dependencies	README.md	/^## Dependencies$/;"	s	chapter:VoxelEngine
DepthAttachment	VkZero/include/VkZero/render_pass.hpp	/^  DepthAttachment()$/;"	f	struct:VkZero::DepthAttachment
DepthAttachment	VkZero/include/VkZero/render_pass.hpp	/^struct DepthAttachment : public AttachmentBase {$/;"	s	namespace:VkZero
DepthAttachment	VkZero/include/render_pass.hpp	/^  DepthAttachment()$/;"	f	struct:VkZero::DepthAttachment
DepthAttachment	VkZero/include/render_pass.hpp	/^struct DepthAttachment : public AttachmentBase {$/;"	s	namespace:VkZero
DepthAttachmentOptimal	VkZero/include/VkZero/types.hpp	/^        DepthAttachmentOptimal = 1000241000,$/;"	e	enum:VkZero::ImageLayout
DepthAttachmentOptimal	VkZero/include/types.hpp	/^        DepthAttachmentOptimal = 1000241000,$/;"	e	enum:VkZero::ImageLayout
DepthAttachmentStencilReadOnlyOptimal	VkZero/include/VkZero/types.hpp	/^        DepthAttachmentStencilReadOnlyOptimal = 1000117001,$/;"	e	enum:VkZero::ImageLayout
DepthAttachmentStencilReadOnlyOptimal	VkZero/include/types.hpp	/^        DepthAttachmentStencilReadOnlyOptimal = 1000117001,$/;"	e	enum:VkZero::ImageLayout
DepthReadOnlyOptimal	VkZero/include/VkZero/types.hpp	/^        DepthReadOnlyOptimal = 1000241001,$/;"	e	enum:VkZero::ImageLayout
DepthReadOnlyOptimal	VkZero/include/types.hpp	/^        DepthReadOnlyOptimal = 1000241001,$/;"	e	enum:VkZero::ImageLayout
DepthReadOnlyStencilAttachmentOptimal	VkZero/include/VkZero/types.hpp	/^        DepthReadOnlyStencilAttachmentOptimal = 1000117000,$/;"	e	enum:VkZero::ImageLayout
DepthReadOnlyStencilAttachmentOptimal	VkZero/include/types.hpp	/^        DepthReadOnlyStencilAttachmentOptimal = 1000117000,$/;"	e	enum:VkZero::ImageLayout
DepthStencilAttachmentOptimal	VkZero/include/VkZero/types.hpp	/^        DepthStencilAttachmentOptimal = 3,$/;"	e	enum:VkZero::ImageLayout
DepthStencilAttachmentOptimal	VkZero/include/types.hpp	/^        DepthStencilAttachmentOptimal = 3,$/;"	e	enum:VkZero::ImageLayout
DepthStencilReadOnlyOptimal	VkZero/include/VkZero/types.hpp	/^        DepthStencilReadOnlyOptimal = 4,$/;"	e	enum:VkZero::ImageLayout
DepthStencilReadOnlyOptimal	VkZero/include/types.hpp	/^        DepthStencilReadOnlyOptimal = 4,$/;"	e	enum:VkZero::ImageLayout
DescriptorPool	VkZero/include/VkZero/Internal/descriptor_pool_internal.hpp	/^    class DescriptorPool$/;"	c	namespace:VkZero
DescriptorPool	VkZero/src/descriptor_pool.cpp	/^DescriptorPool::DescriptorPool(){}$/;"	f	class:DescriptorPool
DescriptorType	VkZero/include/VkZero/types.hpp	/^    enum class DescriptorType : uint32_t {$/;"	g	namespace:VkZero	typeref:typename:uint32_t
DescriptorType	VkZero/include/types.hpp	/^    enum class DescriptorType : uint32_t {$/;"	g	namespace:VkZero	typeref:typename:uint32_t
DescriptorTypeObject	VkZero/include/VkZero/shader_library.hpp	/^    struct DescriptorTypeObject$/;"	s	namespace:VkZero
DescriptorTypeObject	VkZero/include/shader_library.hpp	/^    struct DescriptorTypeObject$/;"	s	namespace:VkZero
DescriptorTypes	VkZero/include/VkZero/shader_library.hpp	/^    struct DescriptorTypes<std::tuple<First, Rest...>> {$/;"	s	namespace:VkZero
DescriptorTypes	VkZero/include/shader_library.hpp	/^    struct DescriptorTypes<std::tuple<First, Rest...>> {$/;"	s	namespace:VkZero
DestroyDebugUtilsMessengerEXT	VkZero/src/core.cpp	/^void VkZeroCoreImpl_T::DestroyDebugUtilsMessengerEXT($/;"	f	class:VkZeroCoreImpl_T	typeref:typename:void
DoSingleDomainWarp	include/FastNoiseLite.hpp	/^  void DoSingleDomainWarp(int seed, float amp, float freq, FNfloat x, FNfloat y,$/;"	f	class:FastNoiseLite	typeref:typename:void
DomainWarp	include/FastNoiseLite.hpp	/^  template <typename FNfloat> void DomainWarp(FNfloat &x, FNfloat &y) const {$/;"	f	class:FastNoiseLite	typeref:typename:void
DomainWarp	include/FastNoiseLite.hpp	/^  void DomainWarp(FNfloat &x, FNfloat &y, FNfloat &z) const {$/;"	f	class:FastNoiseLite	typeref:typename:void
DomainWarpFractalIndependent	include/FastNoiseLite.hpp	/^  void DomainWarpFractalIndependent(FNfloat &x, FNfloat &y) const {$/;"	f	class:FastNoiseLite	typeref:typename:void
DomainWarpFractalIndependent	include/FastNoiseLite.hpp	/^  void DomainWarpFractalIndependent(FNfloat &x, FNfloat &y, FNfloat &z) const {$/;"	f	class:FastNoiseLite	typeref:typename:void
DomainWarpFractalProgressive	include/FastNoiseLite.hpp	/^  void DomainWarpFractalProgressive(FNfloat &x, FNfloat &y) const {$/;"	f	class:FastNoiseLite	typeref:typename:void
DomainWarpFractalProgressive	include/FastNoiseLite.hpp	/^  void DomainWarpFractalProgressive(FNfloat &x, FNfloat &y, FNfloat &z) const {$/;"	f	class:FastNoiseLite	typeref:typename:void
DomainWarpSingle	include/FastNoiseLite.hpp	/^  void DomainWarpSingle(FNfloat &x, FNfloat &y) const {$/;"	f	class:FastNoiseLite	typeref:typename:void
DomainWarpSingle	include/FastNoiseLite.hpp	/^  void DomainWarpSingle(FNfloat &x, FNfloat &y, FNfloat &z) const {$/;"	f	class:FastNoiseLite	typeref:typename:void
DomainWarpType	include/FastNoiseLite.hpp	/^  enum DomainWarpType {$/;"	g	class:FastNoiseLite
DomainWarpType_BasicGrid	include/FastNoiseLite.hpp	/^    DomainWarpType_BasicGrid$/;"	e	enum:FastNoiseLite::DomainWarpType
DomainWarpType_OpenSimplex2	include/FastNoiseLite.hpp	/^    DomainWarpType_OpenSimplex2,$/;"	e	enum:FastNoiseLite::DomainWarpType
DomainWarpType_OpenSimplex2Reduced	include/FastNoiseLite.hpp	/^    DomainWarpType_OpenSimplex2Reduced,$/;"	e	enum:FastNoiseLite::DomainWarpType
E5B9G9R9UfloatPack32	VkZero/include/VkZero/types.hpp	/^        E5B9G9R9UfloatPack32 = 123,$/;"	e	enum:VkZero::Format
E5B9G9R9UfloatPack32	VkZero/include/types.hpp	/^        E5B9G9R9UfloatPack32 = 123,$/;"	e	enum:VkZero::Format
EACR11G11SnormBlock	VkZero/include/VkZero/types.hpp	/^        EACR11G11SnormBlock = 156,$/;"	e	enum:VkZero::Format
EACR11G11SnormBlock	VkZero/include/types.hpp	/^        EACR11G11SnormBlock = 156,$/;"	e	enum:VkZero::Format
EACR11G11UnormBlock	VkZero/include/VkZero/types.hpp	/^        EACR11G11UnormBlock = 155,$/;"	e	enum:VkZero::Format
EACR11G11UnormBlock	VkZero/include/types.hpp	/^        EACR11G11UnormBlock = 155,$/;"	e	enum:VkZero::Format
EACR11SnormBlock	VkZero/include/VkZero/types.hpp	/^        EACR11SnormBlock = 154,$/;"	e	enum:VkZero::Format
EACR11SnormBlock	VkZero/include/types.hpp	/^        EACR11SnormBlock = 154,$/;"	e	enum:VkZero::Format
EACR11UnormBlock	VkZero/include/VkZero/types.hpp	/^        EACR11UnormBlock = 153,$/;"	e	enum:VkZero::Format
EACR11UnormBlock	VkZero/include/types.hpp	/^        EACR11UnormBlock = 153,$/;"	e	enum:VkZero::Format
ETC2R8G8B8A1SrgbBlock	VkZero/include/VkZero/types.hpp	/^        ETC2R8G8B8A1SrgbBlock = 150,$/;"	e	enum:VkZero::Format
ETC2R8G8B8A1SrgbBlock	VkZero/include/types.hpp	/^        ETC2R8G8B8A1SrgbBlock = 150,$/;"	e	enum:VkZero::Format
ETC2R8G8B8A1UnormBlock	VkZero/include/VkZero/types.hpp	/^        ETC2R8G8B8A1UnormBlock = 149,$/;"	e	enum:VkZero::Format
ETC2R8G8B8A1UnormBlock	VkZero/include/types.hpp	/^        ETC2R8G8B8A1UnormBlock = 149,$/;"	e	enum:VkZero::Format
ETC2R8G8B8A8SrgbBlock	VkZero/include/VkZero/types.hpp	/^        ETC2R8G8B8A8SrgbBlock = 152,$/;"	e	enum:VkZero::Format
ETC2R8G8B8A8SrgbBlock	VkZero/include/types.hpp	/^        ETC2R8G8B8A8SrgbBlock = 152,$/;"	e	enum:VkZero::Format
ETC2R8G8B8A8UnormBlock	VkZero/include/VkZero/types.hpp	/^        ETC2R8G8B8A8UnormBlock = 151,$/;"	e	enum:VkZero::Format
ETC2R8G8B8A8UnormBlock	VkZero/include/types.hpp	/^        ETC2R8G8B8A8UnormBlock = 151,$/;"	e	enum:VkZero::Format
ETC2R8G8B8SrgbBlock	VkZero/include/VkZero/types.hpp	/^        ETC2R8G8B8SrgbBlock = 148,$/;"	e	enum:VkZero::Format
ETC2R8G8B8SrgbBlock	VkZero/include/types.hpp	/^        ETC2R8G8B8SrgbBlock = 148,$/;"	e	enum:VkZero::Format
ETC2R8G8B8UnormBlock	VkZero/include/VkZero/types.hpp	/^        ETC2R8G8B8UnormBlock = 147,$/;"	e	enum:VkZero::Format
ETC2R8G8B8UnormBlock	VkZero/include/types.hpp	/^        ETC2R8G8B8UnormBlock = 147,$/;"	e	enum:VkZero::Format
Element	VkZero/include/VkZero/render_pass.hpp	/^    using Element = std::tuple_element_t<Index, Tuple>;$/;"	t	function:VkZero::RenderPassResourceSetDetails::findResourceIndex	typeref:typename:std::tuple_element_t<Index,Tuple>
Element	VkZero/include/render_pass.hpp	/^    using Element = std::tuple_element_t<Index, Tuple>;$/;"	t	function:VkZero::RenderPassResourceSetDetails::findResourceIndex	typeref:typename:std::tuple_element_t<Index,Tuple>
FASTNOISELITE_H	include/FastNoiseLite.hpp	/^#define FASTNOISELITE_H$/;"	d
FNL_IMPL	include/VoxelWorld.hpp	/^#define FNL_IMPL$/;"	d
FastAbs	include/FastNoiseLite.hpp	/^  static float FastAbs(float f) { return f < 0 ? -f : f; }$/;"	f	class:FastNoiseLite	typeref:typename:float
FastFloor	include/FastNoiseLite.hpp	/^  template <typename FNfloat> static int FastFloor(FNfloat f) {$/;"	f	class:FastNoiseLite	typeref:typename:int
FastMax	include/FastNoiseLite.hpp	/^  static float FastMax(float a, float b) { return a > b ? a : b; }$/;"	f	class:FastNoiseLite	typeref:typename:float
FastMin	include/FastNoiseLite.hpp	/^  static float FastMin(float a, float b) { return a < b ? a : b; }$/;"	f	class:FastNoiseLite	typeref:typename:float
FastNoiseLite	include/FastNoiseLite.hpp	/^  FastNoiseLite(int seed = 1337) {$/;"	f	class:FastNoiseLite
FastNoiseLite	include/FastNoiseLite.hpp	/^class FastNoiseLite {$/;"	c
FastRound	include/FastNoiseLite.hpp	/^  template <typename FNfloat> static int FastRound(FNfloat f) {$/;"	f	class:FastNoiseLite	typeref:typename:int
FastSqrt	include/FastNoiseLite.hpp	/^  static float FastSqrt(float f) { return sqrtf(f); }$/;"	f	class:FastNoiseLite	typeref:typename:float
Features	README.md	/^## Features$/;"	s	chapter:VoxelEngine
FixedString	VkZero/include/VkZero/fixed_string.hpp	/^  constexpr FixedString(const char (&str)[N]) { std::copy_n(str, N, value); }$/;"	f	struct:VkZero::FixedString
FixedString	VkZero/include/VkZero/fixed_string.hpp	/^template <size_t N> struct FixedString {$/;"	s	namespace:VkZero
FixedString	VkZero/include/fixed_string.hpp	/^  constexpr FixedString(const char (&str)[N]) { std::copy_n(str, N, value); }$/;"	f	struct:VkZero::FixedString
FixedString	VkZero/include/fixed_string.hpp	/^template <size_t N> struct FixedString {$/;"	s	namespace:VkZero
Format	VkZero/include/VkZero/types.hpp	/^    enum class Format : uint32_t {$/;"	g	namespace:VkZero	typeref:typename:uint32_t
Format	VkZero/include/types.hpp	/^    enum class Format : uint32_t {$/;"	g	namespace:VkZero	typeref:typename:uint32_t
FractalType	include/FastNoiseLite.hpp	/^  enum FractalType {$/;"	g	class:FastNoiseLite
FractalType_DomainWarpIndependent	include/FastNoiseLite.hpp	/^    FractalType_DomainWarpIndependent$/;"	e	enum:FastNoiseLite::FractalType
FractalType_DomainWarpProgressive	include/FastNoiseLite.hpp	/^    FractalType_DomainWarpProgressive,$/;"	e	enum:FastNoiseLite::FractalType
FractalType_FBm	include/FastNoiseLite.hpp	/^    FractalType_FBm,$/;"	e	enum:FastNoiseLite::FractalType
FractalType_None	include/FastNoiseLite.hpp	/^    FractalType_None,$/;"	e	enum:FastNoiseLite::FractalType
FractalType_PingPong	include/FastNoiseLite.hpp	/^    FractalType_PingPong,$/;"	e	enum:FastNoiseLite::FractalType
FractalType_Ridged	include/FastNoiseLite.hpp	/^    FractalType_Ridged,$/;"	e	enum:FastNoiseLite::FractalType
FragmentDensityMapOptimal	VkZero/include/VkZero/types.hpp	/^        FragmentDensityMapOptimal = 1000218000,$/;"	e	enum:VkZero::ImageLayout
FragmentDensityMapOptimal	VkZero/include/types.hpp	/^        FragmentDensityMapOptimal = 1000218000,$/;"	e	enum:VkZero::ImageLayout
FragmentShadingRateAttachmentOptimal	VkZero/include/VkZero/types.hpp	/^        FragmentShadingRateAttachmentOptimal = 1000164003,$/;"	e	enum:VkZero::ImageLayout
FragmentShadingRateAttachmentOptimal	VkZero/include/types.hpp	/^        FragmentShadingRateAttachmentOptimal = 1000164003,$/;"	e	enum:VkZero::ImageLayout
Frame	VkZero/include/VkZero/frame.hpp	/^  Frame(Renderpasses &...renderpasses, WindowImpl_T* window)$/;"	f	class:VkZero::Frame
Frame	VkZero/include/VkZero/frame.hpp	/^template <typename... Renderpasses> class Frame : public FrameBase {$/;"	c	namespace:VkZero
Frame	VkZero/include/frame.hpp	/^  Frame(Renderpasses &...renderpasses, WindowImpl_T* window)$/;"	f	class:VkZero::Frame
Frame	VkZero/include/frame.hpp	/^template <typename... Renderpasses> class Frame : public FrameBase {$/;"	c	namespace:VkZero
FrameBase	VkZero/include/VkZero/frame.hpp	/^struct FrameBase {$/;"	s	namespace:VkZero
FrameBase	VkZero/include/frame.hpp	/^struct FrameBase {$/;"	s	namespace:VkZero
FrameBase	VkZero/src/frame.cpp	/^FrameBase::FrameBase(std::vector<struct RenderpassImpl_T *> renderpasses, WindowImpl_T* window) /;"	f	class:FrameBase
FrameImpl_T	VkZero/include/VkZero/Internal/frame_internal.hpp	/^struct FrameImpl_T {$/;"	s	namespace:VkZero
FrameImpl_T	VkZero/src/frame.cpp	/^FrameImpl_T::FrameImpl_T(std::vector<RenderpassImpl_T *> renderpasses, WindowImpl_T* window)$/;"	f	class:FrameImpl_T
G10X6B10X6G10X6R10X6422Unorm4Pack16	VkZero/include/VkZero/types.hpp	/^        G10X6B10X6G10X6R10X6422Unorm4Pack16 = 1000156010,$/;"	e	enum:VkZero::Format
G10X6B10X6G10X6R10X6422Unorm4Pack16	VkZero/include/types.hpp	/^        G10X6B10X6G10X6R10X6422Unorm4Pack16 = 1000156010,$/;"	e	enum:VkZero::Format
G10X6B10X6R10X62Plane420Unorm3Pack16	VkZero/include/VkZero/types.hpp	/^        G10X6B10X6R10X62Plane420Unorm3Pack16 = 1000156013,$/;"	e	enum:VkZero::Format
G10X6B10X6R10X62Plane420Unorm3Pack16	VkZero/include/types.hpp	/^        G10X6B10X6R10X62Plane420Unorm3Pack16 = 1000156013,$/;"	e	enum:VkZero::Format
G10X6B10X6R10X62Plane422Unorm3Pack16	VkZero/include/VkZero/types.hpp	/^        G10X6B10X6R10X62Plane422Unorm3Pack16 = 1000156015,$/;"	e	enum:VkZero::Format
G10X6B10X6R10X62Plane422Unorm3Pack16	VkZero/include/types.hpp	/^        G10X6B10X6R10X62Plane422Unorm3Pack16 = 1000156015,$/;"	e	enum:VkZero::Format
G10X6B10X6R10X62Plane444Unorm3Pack16	VkZero/include/VkZero/types.hpp	/^        G10X6B10X6R10X62Plane444Unorm3Pack16 = 1000330001,$/;"	e	enum:VkZero::Format
G10X6B10X6R10X62Plane444Unorm3Pack16	VkZero/include/types.hpp	/^        G10X6B10X6R10X62Plane444Unorm3Pack16 = 1000330001,$/;"	e	enum:VkZero::Format
G10X6B10X6R10X63Plane420Unorm3Pack16	VkZero/include/VkZero/types.hpp	/^        G10X6B10X6R10X63Plane420Unorm3Pack16 = 1000156012,$/;"	e	enum:VkZero::Format
G10X6B10X6R10X63Plane420Unorm3Pack16	VkZero/include/types.hpp	/^        G10X6B10X6R10X63Plane420Unorm3Pack16 = 1000156012,$/;"	e	enum:VkZero::Format
G10X6B10X6R10X63Plane422Unorm3Pack16	VkZero/include/VkZero/types.hpp	/^        G10X6B10X6R10X63Plane422Unorm3Pack16 = 1000156014,$/;"	e	enum:VkZero::Format
G10X6B10X6R10X63Plane422Unorm3Pack16	VkZero/include/types.hpp	/^        G10X6B10X6R10X63Plane422Unorm3Pack16 = 1000156014,$/;"	e	enum:VkZero::Format
G10X6B10X6R10X63Plane444Unorm3Pack16	VkZero/include/VkZero/types.hpp	/^        G10X6B10X6R10X63Plane444Unorm3Pack16 = 1000156016,$/;"	e	enum:VkZero::Format
G10X6B10X6R10X63Plane444Unorm3Pack16	VkZero/include/types.hpp	/^        G10X6B10X6R10X63Plane444Unorm3Pack16 = 1000156016,$/;"	e	enum:VkZero::Format
G12X4B12X4G12X4R12X4422Unorm4Pack16	VkZero/include/VkZero/types.hpp	/^        G12X4B12X4G12X4R12X4422Unorm4Pack16 = 1000156020,$/;"	e	enum:VkZero::Format
G12X4B12X4G12X4R12X4422Unorm4Pack16	VkZero/include/types.hpp	/^        G12X4B12X4G12X4R12X4422Unorm4Pack16 = 1000156020,$/;"	e	enum:VkZero::Format
G12X4B12X4R12X42Plane420Unorm3Pack16	VkZero/include/VkZero/types.hpp	/^        G12X4B12X4R12X42Plane420Unorm3Pack16 = 1000156023,$/;"	e	enum:VkZero::Format
G12X4B12X4R12X42Plane420Unorm3Pack16	VkZero/include/types.hpp	/^        G12X4B12X4R12X42Plane420Unorm3Pack16 = 1000156023,$/;"	e	enum:VkZero::Format
G12X4B12X4R12X42Plane422Unorm3Pack16	VkZero/include/VkZero/types.hpp	/^        G12X4B12X4R12X42Plane422Unorm3Pack16 = 1000156025,$/;"	e	enum:VkZero::Format
G12X4B12X4R12X42Plane422Unorm3Pack16	VkZero/include/types.hpp	/^        G12X4B12X4R12X42Plane422Unorm3Pack16 = 1000156025,$/;"	e	enum:VkZero::Format
G12X4B12X4R12X42Plane444Unorm3Pack16	VkZero/include/VkZero/types.hpp	/^        G12X4B12X4R12X42Plane444Unorm3Pack16 = 1000330002,$/;"	e	enum:VkZero::Format
G12X4B12X4R12X42Plane444Unorm3Pack16	VkZero/include/types.hpp	/^        G12X4B12X4R12X42Plane444Unorm3Pack16 = 1000330002,$/;"	e	enum:VkZero::Format
G12X4B12X4R12X43Plane420Unorm3Pack16	VkZero/include/VkZero/types.hpp	/^        G12X4B12X4R12X43Plane420Unorm3Pack16 = 1000156022,$/;"	e	enum:VkZero::Format
G12X4B12X4R12X43Plane420Unorm3Pack16	VkZero/include/types.hpp	/^        G12X4B12X4R12X43Plane420Unorm3Pack16 = 1000156022,$/;"	e	enum:VkZero::Format
G12X4B12X4R12X43Plane422Unorm3Pack16	VkZero/include/VkZero/types.hpp	/^        G12X4B12X4R12X43Plane422Unorm3Pack16 = 1000156024,$/;"	e	enum:VkZero::Format
G12X4B12X4R12X43Plane422Unorm3Pack16	VkZero/include/types.hpp	/^        G12X4B12X4R12X43Plane422Unorm3Pack16 = 1000156024,$/;"	e	enum:VkZero::Format
G12X4B12X4R12X63Plane444Unorm3Pack16	VkZero/include/VkZero/types.hpp	/^        G12X4B12X4R12X63Plane444Unorm3Pack16 = 1000156026,$/;"	e	enum:VkZero::Format
G12X4B12X4R12X63Plane444Unorm3Pack16	VkZero/include/types.hpp	/^        G12X4B12X4R12X63Plane444Unorm3Pack16 = 1000156026,$/;"	e	enum:VkZero::Format
G16B16G16R16422Unorm	VkZero/include/VkZero/types.hpp	/^        G16B16G16R16422Unorm = 1000156027,$/;"	e	enum:VkZero::Format
G16B16G16R16422Unorm	VkZero/include/types.hpp	/^        G16B16G16R16422Unorm = 1000156027,$/;"	e	enum:VkZero::Format
G16B16R162Plane420Unorm	VkZero/include/VkZero/types.hpp	/^        G16B16R162Plane420Unorm = 1000156030,$/;"	e	enum:VkZero::Format
G16B16R162Plane420Unorm	VkZero/include/types.hpp	/^        G16B16R162Plane420Unorm = 1000156030,$/;"	e	enum:VkZero::Format
G16B16R162Plane422Unorm	VkZero/include/VkZero/types.hpp	/^        G16B16R162Plane422Unorm = 1000156032,$/;"	e	enum:VkZero::Format
G16B16R162Plane422Unorm	VkZero/include/types.hpp	/^        G16B16R162Plane422Unorm = 1000156032,$/;"	e	enum:VkZero::Format
G16B16R162Plane444Unorm	VkZero/include/VkZero/types.hpp	/^        G16B16R162Plane444Unorm = 1000330003,$/;"	e	enum:VkZero::Format
G16B16R162Plane444Unorm	VkZero/include/types.hpp	/^        G16B16R162Plane444Unorm = 1000330003,$/;"	e	enum:VkZero::Format
G16B16R163Plane420Unorm	VkZero/include/VkZero/types.hpp	/^        G16B16R163Plane420Unorm = 1000156029,$/;"	e	enum:VkZero::Format
G16B16R163Plane420Unorm	VkZero/include/types.hpp	/^        G16B16R163Plane420Unorm = 1000156029,$/;"	e	enum:VkZero::Format
G16B16R163Plane422Unorm	VkZero/include/VkZero/types.hpp	/^        G16B16R163Plane422Unorm = 1000156031,$/;"	e	enum:VkZero::Format
G16B16R163Plane422Unorm	VkZero/include/types.hpp	/^        G16B16R163Plane422Unorm = 1000156031,$/;"	e	enum:VkZero::Format
G16B16R163Plane444Unorm	VkZero/include/VkZero/types.hpp	/^        G16B16R163Plane444Unorm = 1000156033,$/;"	e	enum:VkZero::Format
G16B16R163Plane444Unorm	VkZero/include/types.hpp	/^        G16B16R163Plane444Unorm = 1000156033,$/;"	e	enum:VkZero::Format
G8B8G8R8422Unorm	VkZero/include/VkZero/types.hpp	/^        G8B8G8R8422Unorm = 1000156000,$/;"	e	enum:VkZero::Format
G8B8G8R8422Unorm	VkZero/include/types.hpp	/^        G8B8G8R8422Unorm = 1000156000,$/;"	e	enum:VkZero::Format
G8B8R82Plane420Unorm	VkZero/include/VkZero/types.hpp	/^        G8B8R82Plane420Unorm = 1000156003,$/;"	e	enum:VkZero::Format
G8B8R82Plane420Unorm	VkZero/include/types.hpp	/^        G8B8R82Plane420Unorm = 1000156003,$/;"	e	enum:VkZero::Format
G8B8R82Plane422Unorm	VkZero/include/VkZero/types.hpp	/^        G8B8R82Plane422Unorm = 1000156005,$/;"	e	enum:VkZero::Format
G8B8R82Plane422Unorm	VkZero/include/types.hpp	/^        G8B8R82Plane422Unorm = 1000156005,$/;"	e	enum:VkZero::Format
G8B8R82Plane444Unorm	VkZero/include/VkZero/types.hpp	/^        G8B8R82Plane444Unorm = 1000330000,$/;"	e	enum:VkZero::Format
G8B8R82Plane444Unorm	VkZero/include/types.hpp	/^        G8B8R82Plane444Unorm = 1000330000,$/;"	e	enum:VkZero::Format
G8B8R83Plane420Unorm	VkZero/include/VkZero/types.hpp	/^        G8B8R83Plane420Unorm = 1000156002,$/;"	e	enum:VkZero::Format
G8B8R83Plane420Unorm	VkZero/include/types.hpp	/^        G8B8R83Plane420Unorm = 1000156002,$/;"	e	enum:VkZero::Format
G8B8R83Plane422Unorm	VkZero/include/VkZero/types.hpp	/^        G8B8R83Plane422Unorm = 1000156004,$/;"	e	enum:VkZero::Format
G8B8R83Plane422Unorm	VkZero/include/types.hpp	/^        G8B8R83Plane422Unorm = 1000156004,$/;"	e	enum:VkZero::Format
G8B8R83Plane444Unorm	VkZero/include/VkZero/types.hpp	/^        G8B8R83Plane444Unorm = 1000156006,$/;"	e	enum:VkZero::Format
G8B8R83Plane444Unorm	VkZero/include/types.hpp	/^        G8B8R83Plane444Unorm = 1000156006,$/;"	e	enum:VkZero::Format
GLFW_GAMEPAD_AXIS_LAST	VkZero/include/VkZero/types.hpp	/^#define GLFW_GAMEPAD_AXIS_LAST /;"	d
GLFW_GAMEPAD_AXIS_LAST	VkZero/include/types.hpp	/^#define GLFW_GAMEPAD_AXIS_LAST /;"	d
GLFW_GAMEPAD_AXIS_LEFT_TRIGGER	VkZero/include/VkZero/types.hpp	/^#define GLFW_GAMEPAD_AXIS_LEFT_TRIGGER /;"	d
GLFW_GAMEPAD_AXIS_LEFT_TRIGGER	VkZero/include/types.hpp	/^#define GLFW_GAMEPAD_AXIS_LEFT_TRIGGER /;"	d
GLFW_GAMEPAD_AXIS_LEFT_X	VkZero/include/VkZero/types.hpp	/^#define GLFW_GAMEPAD_AXIS_LEFT_X /;"	d
GLFW_GAMEPAD_AXIS_LEFT_X	VkZero/include/types.hpp	/^#define GLFW_GAMEPAD_AXIS_LEFT_X /;"	d
GLFW_GAMEPAD_AXIS_LEFT_Y	VkZero/include/VkZero/types.hpp	/^#define GLFW_GAMEPAD_AXIS_LEFT_Y /;"	d
GLFW_GAMEPAD_AXIS_LEFT_Y	VkZero/include/types.hpp	/^#define GLFW_GAMEPAD_AXIS_LEFT_Y /;"	d
GLFW_GAMEPAD_AXIS_RIGHT_TRIGGER	VkZero/include/VkZero/types.hpp	/^#define GLFW_GAMEPAD_AXIS_RIGHT_TRIGGER /;"	d
GLFW_GAMEPAD_AXIS_RIGHT_TRIGGER	VkZero/include/types.hpp	/^#define GLFW_GAMEPAD_AXIS_RIGHT_TRIGGER /;"	d
GLFW_GAMEPAD_AXIS_RIGHT_X	VkZero/include/VkZero/types.hpp	/^#define GLFW_GAMEPAD_AXIS_RIGHT_X /;"	d
GLFW_GAMEPAD_AXIS_RIGHT_X	VkZero/include/types.hpp	/^#define GLFW_GAMEPAD_AXIS_RIGHT_X /;"	d
GLFW_GAMEPAD_AXIS_RIGHT_Y	VkZero/include/VkZero/types.hpp	/^#define GLFW_GAMEPAD_AXIS_RIGHT_Y /;"	d
GLFW_GAMEPAD_AXIS_RIGHT_Y	VkZero/include/types.hpp	/^#define GLFW_GAMEPAD_AXIS_RIGHT_Y /;"	d
GLFW_GAMEPAD_BUTTON_A	VkZero/include/VkZero/types.hpp	/^#define GLFW_GAMEPAD_BUTTON_A /;"	d
GLFW_GAMEPAD_BUTTON_A	VkZero/include/types.hpp	/^#define GLFW_GAMEPAD_BUTTON_A /;"	d
GLFW_GAMEPAD_BUTTON_B	VkZero/include/VkZero/types.hpp	/^#define GLFW_GAMEPAD_BUTTON_B /;"	d
GLFW_GAMEPAD_BUTTON_B	VkZero/include/types.hpp	/^#define GLFW_GAMEPAD_BUTTON_B /;"	d
GLFW_GAMEPAD_BUTTON_BACK	VkZero/include/VkZero/types.hpp	/^#define GLFW_GAMEPAD_BUTTON_BACK /;"	d
GLFW_GAMEPAD_BUTTON_BACK	VkZero/include/types.hpp	/^#define GLFW_GAMEPAD_BUTTON_BACK /;"	d
GLFW_GAMEPAD_BUTTON_CIRCLE	VkZero/include/VkZero/types.hpp	/^#define GLFW_GAMEPAD_BUTTON_CIRCLE /;"	d
GLFW_GAMEPAD_BUTTON_CIRCLE	VkZero/include/types.hpp	/^#define GLFW_GAMEPAD_BUTTON_CIRCLE /;"	d
GLFW_GAMEPAD_BUTTON_CROSS	VkZero/include/VkZero/types.hpp	/^#define GLFW_GAMEPAD_BUTTON_CROSS /;"	d
GLFW_GAMEPAD_BUTTON_CROSS	VkZero/include/types.hpp	/^#define GLFW_GAMEPAD_BUTTON_CROSS /;"	d
GLFW_GAMEPAD_BUTTON_DPAD_DOWN	VkZero/include/VkZero/types.hpp	/^#define GLFW_GAMEPAD_BUTTON_DPAD_DOWN /;"	d
GLFW_GAMEPAD_BUTTON_DPAD_DOWN	VkZero/include/types.hpp	/^#define GLFW_GAMEPAD_BUTTON_DPAD_DOWN /;"	d
GLFW_GAMEPAD_BUTTON_DPAD_LEFT	VkZero/include/VkZero/types.hpp	/^#define GLFW_GAMEPAD_BUTTON_DPAD_LEFT /;"	d
GLFW_GAMEPAD_BUTTON_DPAD_LEFT	VkZero/include/types.hpp	/^#define GLFW_GAMEPAD_BUTTON_DPAD_LEFT /;"	d
GLFW_GAMEPAD_BUTTON_DPAD_RIGHT	VkZero/include/VkZero/types.hpp	/^#define GLFW_GAMEPAD_BUTTON_DPAD_RIGHT /;"	d
GLFW_GAMEPAD_BUTTON_DPAD_RIGHT	VkZero/include/types.hpp	/^#define GLFW_GAMEPAD_BUTTON_DPAD_RIGHT /;"	d
GLFW_GAMEPAD_BUTTON_DPAD_UP	VkZero/include/VkZero/types.hpp	/^#define GLFW_GAMEPAD_BUTTON_DPAD_UP /;"	d
GLFW_GAMEPAD_BUTTON_DPAD_UP	VkZero/include/types.hpp	/^#define GLFW_GAMEPAD_BUTTON_DPAD_UP /;"	d
GLFW_GAMEPAD_BUTTON_GUIDE	VkZero/include/VkZero/types.hpp	/^#define GLFW_GAMEPAD_BUTTON_GUIDE /;"	d
GLFW_GAMEPAD_BUTTON_GUIDE	VkZero/include/types.hpp	/^#define GLFW_GAMEPAD_BUTTON_GUIDE /;"	d
GLFW_GAMEPAD_BUTTON_LAST	VkZero/include/VkZero/types.hpp	/^#define GLFW_GAMEPAD_BUTTON_LAST /;"	d
GLFW_GAMEPAD_BUTTON_LAST	VkZero/include/types.hpp	/^#define GLFW_GAMEPAD_BUTTON_LAST /;"	d
GLFW_GAMEPAD_BUTTON_LEFT_BUMPER	VkZero/include/VkZero/types.hpp	/^#define GLFW_GAMEPAD_BUTTON_LEFT_BUMPER /;"	d
GLFW_GAMEPAD_BUTTON_LEFT_BUMPER	VkZero/include/types.hpp	/^#define GLFW_GAMEPAD_BUTTON_LEFT_BUMPER /;"	d
GLFW_GAMEPAD_BUTTON_LEFT_THUMB	VkZero/include/VkZero/types.hpp	/^#define GLFW_GAMEPAD_BUTTON_LEFT_THUMB /;"	d
GLFW_GAMEPAD_BUTTON_LEFT_THUMB	VkZero/include/types.hpp	/^#define GLFW_GAMEPAD_BUTTON_LEFT_THUMB /;"	d
GLFW_GAMEPAD_BUTTON_RIGHT_BUMPER	VkZero/include/VkZero/types.hpp	/^#define GLFW_GAMEPAD_BUTTON_RIGHT_BUMPER /;"	d
GLFW_GAMEPAD_BUTTON_RIGHT_BUMPER	VkZero/include/types.hpp	/^#define GLFW_GAMEPAD_BUTTON_RIGHT_BUMPER /;"	d
GLFW_GAMEPAD_BUTTON_RIGHT_THUMB	VkZero/include/VkZero/types.hpp	/^#define GLFW_GAMEPAD_BUTTON_RIGHT_THUMB /;"	d
GLFW_GAMEPAD_BUTTON_RIGHT_THUMB	VkZero/include/types.hpp	/^#define GLFW_GAMEPAD_BUTTON_RIGHT_THUMB /;"	d
GLFW_GAMEPAD_BUTTON_SQUARE	VkZero/include/VkZero/types.hpp	/^#define GLFW_GAMEPAD_BUTTON_SQUARE /;"	d
GLFW_GAMEPAD_BUTTON_SQUARE	VkZero/include/types.hpp	/^#define GLFW_GAMEPAD_BUTTON_SQUARE /;"	d
GLFW_GAMEPAD_BUTTON_START	VkZero/include/VkZero/types.hpp	/^#define GLFW_GAMEPAD_BUTTON_START /;"	d
GLFW_GAMEPAD_BUTTON_START	VkZero/include/types.hpp	/^#define GLFW_GAMEPAD_BUTTON_START /;"	d
GLFW_GAMEPAD_BUTTON_TRIANGLE	VkZero/include/VkZero/types.hpp	/^#define GLFW_GAMEPAD_BUTTON_TRIANGLE /;"	d
GLFW_GAMEPAD_BUTTON_TRIANGLE	VkZero/include/types.hpp	/^#define GLFW_GAMEPAD_BUTTON_TRIANGLE /;"	d
GLFW_GAMEPAD_BUTTON_X	VkZero/include/VkZero/types.hpp	/^#define GLFW_GAMEPAD_BUTTON_X /;"	d
GLFW_GAMEPAD_BUTTON_X	VkZero/include/types.hpp	/^#define GLFW_GAMEPAD_BUTTON_X /;"	d
GLFW_GAMEPAD_BUTTON_Y	VkZero/include/VkZero/types.hpp	/^#define GLFW_GAMEPAD_BUTTON_Y /;"	d
GLFW_GAMEPAD_BUTTON_Y	VkZero/include/types.hpp	/^#define GLFW_GAMEPAD_BUTTON_Y /;"	d
GLFW_JOYSTICK_1	VkZero/include/VkZero/types.hpp	/^#define GLFW_JOYSTICK_1 /;"	d
GLFW_JOYSTICK_1	VkZero/include/types.hpp	/^#define GLFW_JOYSTICK_1 /;"	d
GLFW_JOYSTICK_10	VkZero/include/VkZero/types.hpp	/^#define GLFW_JOYSTICK_10 /;"	d
GLFW_JOYSTICK_10	VkZero/include/types.hpp	/^#define GLFW_JOYSTICK_10 /;"	d
GLFW_JOYSTICK_11	VkZero/include/VkZero/types.hpp	/^#define GLFW_JOYSTICK_11 /;"	d
GLFW_JOYSTICK_11	VkZero/include/types.hpp	/^#define GLFW_JOYSTICK_11 /;"	d
GLFW_JOYSTICK_12	VkZero/include/VkZero/types.hpp	/^#define GLFW_JOYSTICK_12 /;"	d
GLFW_JOYSTICK_12	VkZero/include/types.hpp	/^#define GLFW_JOYSTICK_12 /;"	d
GLFW_JOYSTICK_13	VkZero/include/VkZero/types.hpp	/^#define GLFW_JOYSTICK_13 /;"	d
GLFW_JOYSTICK_13	VkZero/include/types.hpp	/^#define GLFW_JOYSTICK_13 /;"	d
GLFW_JOYSTICK_14	VkZero/include/VkZero/types.hpp	/^#define GLFW_JOYSTICK_14 /;"	d
GLFW_JOYSTICK_14	VkZero/include/types.hpp	/^#define GLFW_JOYSTICK_14 /;"	d
GLFW_JOYSTICK_15	VkZero/include/VkZero/types.hpp	/^#define GLFW_JOYSTICK_15 /;"	d
GLFW_JOYSTICK_15	VkZero/include/types.hpp	/^#define GLFW_JOYSTICK_15 /;"	d
GLFW_JOYSTICK_16	VkZero/include/VkZero/types.hpp	/^#define GLFW_JOYSTICK_16 /;"	d
GLFW_JOYSTICK_16	VkZero/include/types.hpp	/^#define GLFW_JOYSTICK_16 /;"	d
GLFW_JOYSTICK_2	VkZero/include/VkZero/types.hpp	/^#define GLFW_JOYSTICK_2 /;"	d
GLFW_JOYSTICK_2	VkZero/include/types.hpp	/^#define GLFW_JOYSTICK_2 /;"	d
GLFW_JOYSTICK_3	VkZero/include/VkZero/types.hpp	/^#define GLFW_JOYSTICK_3 /;"	d
GLFW_JOYSTICK_3	VkZero/include/types.hpp	/^#define GLFW_JOYSTICK_3 /;"	d
GLFW_JOYSTICK_4	VkZero/include/VkZero/types.hpp	/^#define GLFW_JOYSTICK_4 /;"	d
GLFW_JOYSTICK_4	VkZero/include/types.hpp	/^#define GLFW_JOYSTICK_4 /;"	d
GLFW_JOYSTICK_5	VkZero/include/VkZero/types.hpp	/^#define GLFW_JOYSTICK_5 /;"	d
GLFW_JOYSTICK_5	VkZero/include/types.hpp	/^#define GLFW_JOYSTICK_5 /;"	d
GLFW_JOYSTICK_6	VkZero/include/VkZero/types.hpp	/^#define GLFW_JOYSTICK_6 /;"	d
GLFW_JOYSTICK_6	VkZero/include/types.hpp	/^#define GLFW_JOYSTICK_6 /;"	d
GLFW_JOYSTICK_7	VkZero/include/VkZero/types.hpp	/^#define GLFW_JOYSTICK_7 /;"	d
GLFW_JOYSTICK_7	VkZero/include/types.hpp	/^#define GLFW_JOYSTICK_7 /;"	d
GLFW_JOYSTICK_8	VkZero/include/VkZero/types.hpp	/^#define GLFW_JOYSTICK_8 /;"	d
GLFW_JOYSTICK_8	VkZero/include/types.hpp	/^#define GLFW_JOYSTICK_8 /;"	d
GLFW_JOYSTICK_9	VkZero/include/VkZero/types.hpp	/^#define GLFW_JOYSTICK_9 /;"	d
GLFW_JOYSTICK_9	VkZero/include/types.hpp	/^#define GLFW_JOYSTICK_9 /;"	d
GLFW_JOYSTICK_LAST	VkZero/include/VkZero/types.hpp	/^#define GLFW_JOYSTICK_LAST /;"	d
GLFW_JOYSTICK_LAST	VkZero/include/types.hpp	/^#define GLFW_JOYSTICK_LAST /;"	d
GLFW_KEY_0	VkZero/include/VkZero/types.hpp	/^#define GLFW_KEY_0 /;"	d
GLFW_KEY_0	VkZero/include/types.hpp	/^#define GLFW_KEY_0 /;"	d
GLFW_KEY_1	VkZero/include/VkZero/types.hpp	/^#define GLFW_KEY_1 /;"	d
GLFW_KEY_1	VkZero/include/types.hpp	/^#define GLFW_KEY_1 /;"	d
GLFW_KEY_2	VkZero/include/VkZero/types.hpp	/^#define GLFW_KEY_2 /;"	d
GLFW_KEY_2	VkZero/include/types.hpp	/^#define GLFW_KEY_2 /;"	d
GLFW_KEY_3	VkZero/include/VkZero/types.hpp	/^#define GLFW_KEY_3 /;"	d
GLFW_KEY_3	VkZero/include/types.hpp	/^#define GLFW_KEY_3 /;"	d
GLFW_KEY_4	VkZero/include/VkZero/types.hpp	/^#define GLFW_KEY_4 /;"	d
GLFW_KEY_4	VkZero/include/types.hpp	/^#define GLFW_KEY_4 /;"	d
GLFW_KEY_5	VkZero/include/VkZero/types.hpp	/^#define GLFW_KEY_5 /;"	d
GLFW_KEY_5	VkZero/include/types.hpp	/^#define GLFW_KEY_5 /;"	d
GLFW_KEY_6	VkZero/include/VkZero/types.hpp	/^#define GLFW_KEY_6 /;"	d
GLFW_KEY_6	VkZero/include/types.hpp	/^#define GLFW_KEY_6 /;"	d
GLFW_KEY_7	VkZero/include/VkZero/types.hpp	/^#define GLFW_KEY_7 /;"	d
GLFW_KEY_7	VkZero/include/types.hpp	/^#define GLFW_KEY_7 /;"	d
GLFW_KEY_8	VkZero/include/VkZero/types.hpp	/^#define GLFW_KEY_8 /;"	d
GLFW_KEY_8	VkZero/include/types.hpp	/^#define GLFW_KEY_8 /;"	d
GLFW_KEY_9	VkZero/include/VkZero/types.hpp	/^#define GLFW_KEY_9 /;"	d
GLFW_KEY_9	VkZero/include/types.hpp	/^#define GLFW_KEY_9 /;"	d
GLFW_KEY_A	VkZero/include/VkZero/types.hpp	/^#define GLFW_KEY_A /;"	d
GLFW_KEY_A	VkZero/include/types.hpp	/^#define GLFW_KEY_A /;"	d
GLFW_KEY_APOSTROPHE	VkZero/include/VkZero/types.hpp	/^#define GLFW_KEY_APOSTROPHE /;"	d
GLFW_KEY_APOSTROPHE	VkZero/include/types.hpp	/^#define GLFW_KEY_APOSTROPHE /;"	d
GLFW_KEY_B	VkZero/include/VkZero/types.hpp	/^#define GLFW_KEY_B /;"	d
GLFW_KEY_B	VkZero/include/types.hpp	/^#define GLFW_KEY_B /;"	d
GLFW_KEY_BACKSLASH	VkZero/include/VkZero/types.hpp	/^#define GLFW_KEY_BACKSLASH /;"	d
GLFW_KEY_BACKSLASH	VkZero/include/types.hpp	/^#define GLFW_KEY_BACKSLASH /;"	d
GLFW_KEY_BACKSPACE	VkZero/include/VkZero/types.hpp	/^#define GLFW_KEY_BACKSPACE /;"	d
GLFW_KEY_BACKSPACE	VkZero/include/types.hpp	/^#define GLFW_KEY_BACKSPACE /;"	d
GLFW_KEY_C	VkZero/include/VkZero/types.hpp	/^#define GLFW_KEY_C /;"	d
GLFW_KEY_C	VkZero/include/types.hpp	/^#define GLFW_KEY_C /;"	d
GLFW_KEY_CAPS_LOCK	VkZero/include/VkZero/types.hpp	/^#define GLFW_KEY_CAPS_LOCK /;"	d
GLFW_KEY_CAPS_LOCK	VkZero/include/types.hpp	/^#define GLFW_KEY_CAPS_LOCK /;"	d
GLFW_KEY_COMMA	VkZero/include/VkZero/types.hpp	/^#define GLFW_KEY_COMMA /;"	d
GLFW_KEY_COMMA	VkZero/include/types.hpp	/^#define GLFW_KEY_COMMA /;"	d
GLFW_KEY_D	VkZero/include/VkZero/types.hpp	/^#define GLFW_KEY_D /;"	d
GLFW_KEY_D	VkZero/include/types.hpp	/^#define GLFW_KEY_D /;"	d
GLFW_KEY_DELETE	VkZero/include/VkZero/types.hpp	/^#define GLFW_KEY_DELETE /;"	d
GLFW_KEY_DELETE	VkZero/include/types.hpp	/^#define GLFW_KEY_DELETE /;"	d
GLFW_KEY_DOWN	VkZero/include/VkZero/types.hpp	/^#define GLFW_KEY_DOWN /;"	d
GLFW_KEY_DOWN	VkZero/include/types.hpp	/^#define GLFW_KEY_DOWN /;"	d
GLFW_KEY_E	VkZero/include/VkZero/types.hpp	/^#define GLFW_KEY_E /;"	d
GLFW_KEY_E	VkZero/include/types.hpp	/^#define GLFW_KEY_E /;"	d
GLFW_KEY_END	VkZero/include/VkZero/types.hpp	/^#define GLFW_KEY_END /;"	d
GLFW_KEY_END	VkZero/include/types.hpp	/^#define GLFW_KEY_END /;"	d
GLFW_KEY_ENTER	VkZero/include/VkZero/types.hpp	/^#define GLFW_KEY_ENTER /;"	d
GLFW_KEY_ENTER	VkZero/include/types.hpp	/^#define GLFW_KEY_ENTER /;"	d
GLFW_KEY_EQUAL	VkZero/include/VkZero/types.hpp	/^#define GLFW_KEY_EQUAL /;"	d
GLFW_KEY_EQUAL	VkZero/include/types.hpp	/^#define GLFW_KEY_EQUAL /;"	d
GLFW_KEY_ESCAPE	VkZero/include/VkZero/types.hpp	/^#define GLFW_KEY_ESCAPE /;"	d
GLFW_KEY_ESCAPE	VkZero/include/types.hpp	/^#define GLFW_KEY_ESCAPE /;"	d
GLFW_KEY_F	VkZero/include/VkZero/types.hpp	/^#define GLFW_KEY_F /;"	d
GLFW_KEY_F	VkZero/include/types.hpp	/^#define GLFW_KEY_F /;"	d
GLFW_KEY_F1	VkZero/include/VkZero/types.hpp	/^#define GLFW_KEY_F1 /;"	d
GLFW_KEY_F1	VkZero/include/types.hpp	/^#define GLFW_KEY_F1 /;"	d
GLFW_KEY_F10	VkZero/include/VkZero/types.hpp	/^#define GLFW_KEY_F10 /;"	d
GLFW_KEY_F10	VkZero/include/types.hpp	/^#define GLFW_KEY_F10 /;"	d
GLFW_KEY_F11	VkZero/include/VkZero/types.hpp	/^#define GLFW_KEY_F11 /;"	d
GLFW_KEY_F11	VkZero/include/types.hpp	/^#define GLFW_KEY_F11 /;"	d
GLFW_KEY_F12	VkZero/include/VkZero/types.hpp	/^#define GLFW_KEY_F12 /;"	d
GLFW_KEY_F12	VkZero/include/types.hpp	/^#define GLFW_KEY_F12 /;"	d
GLFW_KEY_F13	VkZero/include/VkZero/types.hpp	/^#define GLFW_KEY_F13 /;"	d
GLFW_KEY_F13	VkZero/include/types.hpp	/^#define GLFW_KEY_F13 /;"	d
GLFW_KEY_F14	VkZero/include/VkZero/types.hpp	/^#define GLFW_KEY_F14 /;"	d
GLFW_KEY_F14	VkZero/include/types.hpp	/^#define GLFW_KEY_F14 /;"	d
GLFW_KEY_F15	VkZero/include/VkZero/types.hpp	/^#define GLFW_KEY_F15 /;"	d
GLFW_KEY_F15	VkZero/include/types.hpp	/^#define GLFW_KEY_F15 /;"	d
GLFW_KEY_F16	VkZero/include/VkZero/types.hpp	/^#define GLFW_KEY_F16 /;"	d
GLFW_KEY_F16	VkZero/include/types.hpp	/^#define GLFW_KEY_F16 /;"	d
GLFW_KEY_F17	VkZero/include/VkZero/types.hpp	/^#define GLFW_KEY_F17 /;"	d
GLFW_KEY_F17	VkZero/include/types.hpp	/^#define GLFW_KEY_F17 /;"	d
GLFW_KEY_F18	VkZero/include/VkZero/types.hpp	/^#define GLFW_KEY_F18 /;"	d
GLFW_KEY_F18	VkZero/include/types.hpp	/^#define GLFW_KEY_F18 /;"	d
GLFW_KEY_F19	VkZero/include/VkZero/types.hpp	/^#define GLFW_KEY_F19 /;"	d
GLFW_KEY_F19	VkZero/include/types.hpp	/^#define GLFW_KEY_F19 /;"	d
GLFW_KEY_F2	VkZero/include/VkZero/types.hpp	/^#define GLFW_KEY_F2 /;"	d
GLFW_KEY_F2	VkZero/include/types.hpp	/^#define GLFW_KEY_F2 /;"	d
GLFW_KEY_F20	VkZero/include/VkZero/types.hpp	/^#define GLFW_KEY_F20 /;"	d
GLFW_KEY_F20	VkZero/include/types.hpp	/^#define GLFW_KEY_F20 /;"	d
GLFW_KEY_F21	VkZero/include/VkZero/types.hpp	/^#define GLFW_KEY_F21 /;"	d
GLFW_KEY_F21	VkZero/include/types.hpp	/^#define GLFW_KEY_F21 /;"	d
GLFW_KEY_F22	VkZero/include/VkZero/types.hpp	/^#define GLFW_KEY_F22 /;"	d
GLFW_KEY_F22	VkZero/include/types.hpp	/^#define GLFW_KEY_F22 /;"	d
GLFW_KEY_F23	VkZero/include/VkZero/types.hpp	/^#define GLFW_KEY_F23 /;"	d
GLFW_KEY_F23	VkZero/include/types.hpp	/^#define GLFW_KEY_F23 /;"	d
GLFW_KEY_F24	VkZero/include/VkZero/types.hpp	/^#define GLFW_KEY_F24 /;"	d
GLFW_KEY_F24	VkZero/include/types.hpp	/^#define GLFW_KEY_F24 /;"	d
GLFW_KEY_F25	VkZero/include/VkZero/types.hpp	/^#define GLFW_KEY_F25 /;"	d
GLFW_KEY_F25	VkZero/include/types.hpp	/^#define GLFW_KEY_F25 /;"	d
GLFW_KEY_F3	VkZero/include/VkZero/types.hpp	/^#define GLFW_KEY_F3 /;"	d
GLFW_KEY_F3	VkZero/include/types.hpp	/^#define GLFW_KEY_F3 /;"	d
GLFW_KEY_F4	VkZero/include/VkZero/types.hpp	/^#define GLFW_KEY_F4 /;"	d
GLFW_KEY_F4	VkZero/include/types.hpp	/^#define GLFW_KEY_F4 /;"	d
GLFW_KEY_F5	VkZero/include/VkZero/types.hpp	/^#define GLFW_KEY_F5 /;"	d
GLFW_KEY_F5	VkZero/include/types.hpp	/^#define GLFW_KEY_F5 /;"	d
GLFW_KEY_F6	VkZero/include/VkZero/types.hpp	/^#define GLFW_KEY_F6 /;"	d
GLFW_KEY_F6	VkZero/include/types.hpp	/^#define GLFW_KEY_F6 /;"	d
GLFW_KEY_F7	VkZero/include/VkZero/types.hpp	/^#define GLFW_KEY_F7 /;"	d
GLFW_KEY_F7	VkZero/include/types.hpp	/^#define GLFW_KEY_F7 /;"	d
GLFW_KEY_F8	VkZero/include/VkZero/types.hpp	/^#define GLFW_KEY_F8 /;"	d
GLFW_KEY_F8	VkZero/include/types.hpp	/^#define GLFW_KEY_F8 /;"	d
GLFW_KEY_F9	VkZero/include/VkZero/types.hpp	/^#define GLFW_KEY_F9 /;"	d
GLFW_KEY_F9	VkZero/include/types.hpp	/^#define GLFW_KEY_F9 /;"	d
GLFW_KEY_G	VkZero/include/VkZero/types.hpp	/^#define GLFW_KEY_G /;"	d
GLFW_KEY_G	VkZero/include/types.hpp	/^#define GLFW_KEY_G /;"	d
GLFW_KEY_GRAVE_ACCENT	VkZero/include/VkZero/types.hpp	/^#define GLFW_KEY_GRAVE_ACCENT /;"	d
GLFW_KEY_GRAVE_ACCENT	VkZero/include/types.hpp	/^#define GLFW_KEY_GRAVE_ACCENT /;"	d
GLFW_KEY_H	VkZero/include/VkZero/types.hpp	/^#define GLFW_KEY_H /;"	d
GLFW_KEY_H	VkZero/include/types.hpp	/^#define GLFW_KEY_H /;"	d
GLFW_KEY_HOME	VkZero/include/VkZero/types.hpp	/^#define GLFW_KEY_HOME /;"	d
GLFW_KEY_HOME	VkZero/include/types.hpp	/^#define GLFW_KEY_HOME /;"	d
GLFW_KEY_I	VkZero/include/VkZero/types.hpp	/^#define GLFW_KEY_I /;"	d
GLFW_KEY_I	VkZero/include/types.hpp	/^#define GLFW_KEY_I /;"	d
GLFW_KEY_INSERT	VkZero/include/VkZero/types.hpp	/^#define GLFW_KEY_INSERT /;"	d
GLFW_KEY_INSERT	VkZero/include/types.hpp	/^#define GLFW_KEY_INSERT /;"	d
GLFW_KEY_J	VkZero/include/VkZero/types.hpp	/^#define GLFW_KEY_J /;"	d
GLFW_KEY_J	VkZero/include/types.hpp	/^#define GLFW_KEY_J /;"	d
GLFW_KEY_K	VkZero/include/VkZero/types.hpp	/^#define GLFW_KEY_K /;"	d
GLFW_KEY_K	VkZero/include/types.hpp	/^#define GLFW_KEY_K /;"	d
GLFW_KEY_KP_0	VkZero/include/VkZero/types.hpp	/^#define GLFW_KEY_KP_0 /;"	d
GLFW_KEY_KP_0	VkZero/include/types.hpp	/^#define GLFW_KEY_KP_0 /;"	d
GLFW_KEY_KP_1	VkZero/include/VkZero/types.hpp	/^#define GLFW_KEY_KP_1 /;"	d
GLFW_KEY_KP_1	VkZero/include/types.hpp	/^#define GLFW_KEY_KP_1 /;"	d
GLFW_KEY_KP_2	VkZero/include/VkZero/types.hpp	/^#define GLFW_KEY_KP_2 /;"	d
GLFW_KEY_KP_2	VkZero/include/types.hpp	/^#define GLFW_KEY_KP_2 /;"	d
GLFW_KEY_KP_3	VkZero/include/VkZero/types.hpp	/^#define GLFW_KEY_KP_3 /;"	d
GLFW_KEY_KP_3	VkZero/include/types.hpp	/^#define GLFW_KEY_KP_3 /;"	d
GLFW_KEY_KP_4	VkZero/include/VkZero/types.hpp	/^#define GLFW_KEY_KP_4 /;"	d
GLFW_KEY_KP_4	VkZero/include/types.hpp	/^#define GLFW_KEY_KP_4 /;"	d
GLFW_KEY_KP_5	VkZero/include/VkZero/types.hpp	/^#define GLFW_KEY_KP_5 /;"	d
GLFW_KEY_KP_5	VkZero/include/types.hpp	/^#define GLFW_KEY_KP_5 /;"	d
GLFW_KEY_KP_6	VkZero/include/VkZero/types.hpp	/^#define GLFW_KEY_KP_6 /;"	d
GLFW_KEY_KP_6	VkZero/include/types.hpp	/^#define GLFW_KEY_KP_6 /;"	d
GLFW_KEY_KP_7	VkZero/include/VkZero/types.hpp	/^#define GLFW_KEY_KP_7 /;"	d
GLFW_KEY_KP_7	VkZero/include/types.hpp	/^#define GLFW_KEY_KP_7 /;"	d
GLFW_KEY_KP_8	VkZero/include/VkZero/types.hpp	/^#define GLFW_KEY_KP_8 /;"	d
GLFW_KEY_KP_8	VkZero/include/types.hpp	/^#define GLFW_KEY_KP_8 /;"	d
GLFW_KEY_KP_9	VkZero/include/VkZero/types.hpp	/^#define GLFW_KEY_KP_9 /;"	d
GLFW_KEY_KP_9	VkZero/include/types.hpp	/^#define GLFW_KEY_KP_9 /;"	d
GLFW_KEY_KP_ADD	VkZero/include/VkZero/types.hpp	/^#define GLFW_KEY_KP_ADD /;"	d
GLFW_KEY_KP_ADD	VkZero/include/types.hpp	/^#define GLFW_KEY_KP_ADD /;"	d
GLFW_KEY_KP_DECIMAL	VkZero/include/VkZero/types.hpp	/^#define GLFW_KEY_KP_DECIMAL /;"	d
GLFW_KEY_KP_DECIMAL	VkZero/include/types.hpp	/^#define GLFW_KEY_KP_DECIMAL /;"	d
GLFW_KEY_KP_DIVIDE	VkZero/include/VkZero/types.hpp	/^#define GLFW_KEY_KP_DIVIDE /;"	d
GLFW_KEY_KP_DIVIDE	VkZero/include/types.hpp	/^#define GLFW_KEY_KP_DIVIDE /;"	d
GLFW_KEY_KP_ENTER	VkZero/include/VkZero/types.hpp	/^#define GLFW_KEY_KP_ENTER /;"	d
GLFW_KEY_KP_ENTER	VkZero/include/types.hpp	/^#define GLFW_KEY_KP_ENTER /;"	d
GLFW_KEY_KP_EQUAL	VkZero/include/VkZero/types.hpp	/^#define GLFW_KEY_KP_EQUAL /;"	d
GLFW_KEY_KP_EQUAL	VkZero/include/types.hpp	/^#define GLFW_KEY_KP_EQUAL /;"	d
GLFW_KEY_KP_MULTIPLY	VkZero/include/VkZero/types.hpp	/^#define GLFW_KEY_KP_MULTIPLY /;"	d
GLFW_KEY_KP_MULTIPLY	VkZero/include/types.hpp	/^#define GLFW_KEY_KP_MULTIPLY /;"	d
GLFW_KEY_KP_SUBTRACT	VkZero/include/VkZero/types.hpp	/^#define GLFW_KEY_KP_SUBTRACT /;"	d
GLFW_KEY_KP_SUBTRACT	VkZero/include/types.hpp	/^#define GLFW_KEY_KP_SUBTRACT /;"	d
GLFW_KEY_L	VkZero/include/VkZero/types.hpp	/^#define GLFW_KEY_L /;"	d
GLFW_KEY_L	VkZero/include/types.hpp	/^#define GLFW_KEY_L /;"	d
GLFW_KEY_LAST	VkZero/include/VkZero/types.hpp	/^#define GLFW_KEY_LAST /;"	d
GLFW_KEY_LAST	VkZero/include/types.hpp	/^#define GLFW_KEY_LAST /;"	d
GLFW_KEY_LEFT	VkZero/include/VkZero/types.hpp	/^#define GLFW_KEY_LEFT /;"	d
GLFW_KEY_LEFT	VkZero/include/types.hpp	/^#define GLFW_KEY_LEFT /;"	d
GLFW_KEY_LEFT_ALT	VkZero/include/VkZero/types.hpp	/^#define GLFW_KEY_LEFT_ALT /;"	d
GLFW_KEY_LEFT_ALT	VkZero/include/types.hpp	/^#define GLFW_KEY_LEFT_ALT /;"	d
GLFW_KEY_LEFT_BRACKET	VkZero/include/VkZero/types.hpp	/^#define GLFW_KEY_LEFT_BRACKET /;"	d
GLFW_KEY_LEFT_BRACKET	VkZero/include/types.hpp	/^#define GLFW_KEY_LEFT_BRACKET /;"	d
GLFW_KEY_LEFT_CONTROL	VkZero/include/VkZero/types.hpp	/^#define GLFW_KEY_LEFT_CONTROL /;"	d
GLFW_KEY_LEFT_CONTROL	VkZero/include/types.hpp	/^#define GLFW_KEY_LEFT_CONTROL /;"	d
GLFW_KEY_LEFT_SHIFT	VkZero/include/VkZero/types.hpp	/^#define GLFW_KEY_LEFT_SHIFT /;"	d
GLFW_KEY_LEFT_SHIFT	VkZero/include/types.hpp	/^#define GLFW_KEY_LEFT_SHIFT /;"	d
GLFW_KEY_LEFT_SUPER	VkZero/include/VkZero/types.hpp	/^#define GLFW_KEY_LEFT_SUPER /;"	d
GLFW_KEY_LEFT_SUPER	VkZero/include/types.hpp	/^#define GLFW_KEY_LEFT_SUPER /;"	d
GLFW_KEY_M	VkZero/include/VkZero/types.hpp	/^#define GLFW_KEY_M /;"	d
GLFW_KEY_M	VkZero/include/types.hpp	/^#define GLFW_KEY_M /;"	d
GLFW_KEY_MENU	VkZero/include/VkZero/types.hpp	/^#define GLFW_KEY_MENU /;"	d
GLFW_KEY_MENU	VkZero/include/types.hpp	/^#define GLFW_KEY_MENU /;"	d
GLFW_KEY_MINUS	VkZero/include/VkZero/types.hpp	/^#define GLFW_KEY_MINUS /;"	d
GLFW_KEY_MINUS	VkZero/include/types.hpp	/^#define GLFW_KEY_MINUS /;"	d
GLFW_KEY_N	VkZero/include/VkZero/types.hpp	/^#define GLFW_KEY_N /;"	d
GLFW_KEY_N	VkZero/include/types.hpp	/^#define GLFW_KEY_N /;"	d
GLFW_KEY_NUM_LOCK	VkZero/include/VkZero/types.hpp	/^#define GLFW_KEY_NUM_LOCK /;"	d
GLFW_KEY_NUM_LOCK	VkZero/include/types.hpp	/^#define GLFW_KEY_NUM_LOCK /;"	d
GLFW_KEY_O	VkZero/include/VkZero/types.hpp	/^#define GLFW_KEY_O /;"	d
GLFW_KEY_O	VkZero/include/types.hpp	/^#define GLFW_KEY_O /;"	d
GLFW_KEY_P	VkZero/include/VkZero/types.hpp	/^#define GLFW_KEY_P /;"	d
GLFW_KEY_P	VkZero/include/types.hpp	/^#define GLFW_KEY_P /;"	d
GLFW_KEY_PAGE_DOWN	VkZero/include/VkZero/types.hpp	/^#define GLFW_KEY_PAGE_DOWN /;"	d
GLFW_KEY_PAGE_DOWN	VkZero/include/types.hpp	/^#define GLFW_KEY_PAGE_DOWN /;"	d
GLFW_KEY_PAGE_UP	VkZero/include/VkZero/types.hpp	/^#define GLFW_KEY_PAGE_UP /;"	d
GLFW_KEY_PAGE_UP	VkZero/include/types.hpp	/^#define GLFW_KEY_PAGE_UP /;"	d
GLFW_KEY_PAUSE	VkZero/include/VkZero/types.hpp	/^#define GLFW_KEY_PAUSE /;"	d
GLFW_KEY_PAUSE	VkZero/include/types.hpp	/^#define GLFW_KEY_PAUSE /;"	d
GLFW_KEY_PERIOD	VkZero/include/VkZero/types.hpp	/^#define GLFW_KEY_PERIOD /;"	d
GLFW_KEY_PERIOD	VkZero/include/types.hpp	/^#define GLFW_KEY_PERIOD /;"	d
GLFW_KEY_PRINT_SCREEN	VkZero/include/VkZero/types.hpp	/^#define GLFW_KEY_PRINT_SCREEN /;"	d
GLFW_KEY_PRINT_SCREEN	VkZero/include/types.hpp	/^#define GLFW_KEY_PRINT_SCREEN /;"	d
GLFW_KEY_Q	VkZero/include/VkZero/types.hpp	/^#define GLFW_KEY_Q /;"	d
GLFW_KEY_Q	VkZero/include/types.hpp	/^#define GLFW_KEY_Q /;"	d
GLFW_KEY_R	VkZero/include/VkZero/types.hpp	/^#define GLFW_KEY_R /;"	d
GLFW_KEY_R	VkZero/include/types.hpp	/^#define GLFW_KEY_R /;"	d
GLFW_KEY_RIGHT	VkZero/include/VkZero/types.hpp	/^#define GLFW_KEY_RIGHT /;"	d
GLFW_KEY_RIGHT	VkZero/include/types.hpp	/^#define GLFW_KEY_RIGHT /;"	d
GLFW_KEY_RIGHT_ALT	VkZero/include/VkZero/types.hpp	/^#define GLFW_KEY_RIGHT_ALT /;"	d
GLFW_KEY_RIGHT_ALT	VkZero/include/types.hpp	/^#define GLFW_KEY_RIGHT_ALT /;"	d
GLFW_KEY_RIGHT_BRACKET	VkZero/include/VkZero/types.hpp	/^#define GLFW_KEY_RIGHT_BRACKET /;"	d
GLFW_KEY_RIGHT_BRACKET	VkZero/include/types.hpp	/^#define GLFW_KEY_RIGHT_BRACKET /;"	d
GLFW_KEY_RIGHT_CONTROL	VkZero/include/VkZero/types.hpp	/^#define GLFW_KEY_RIGHT_CONTROL /;"	d
GLFW_KEY_RIGHT_CONTROL	VkZero/include/types.hpp	/^#define GLFW_KEY_RIGHT_CONTROL /;"	d
GLFW_KEY_RIGHT_SHIFT	VkZero/include/VkZero/types.hpp	/^#define GLFW_KEY_RIGHT_SHIFT /;"	d
GLFW_KEY_RIGHT_SHIFT	VkZero/include/types.hpp	/^#define GLFW_KEY_RIGHT_SHIFT /;"	d
GLFW_KEY_RIGHT_SUPER	VkZero/include/VkZero/types.hpp	/^#define GLFW_KEY_RIGHT_SUPER /;"	d
GLFW_KEY_RIGHT_SUPER	VkZero/include/types.hpp	/^#define GLFW_KEY_RIGHT_SUPER /;"	d
GLFW_KEY_S	VkZero/include/VkZero/types.hpp	/^#define GLFW_KEY_S /;"	d
GLFW_KEY_S	VkZero/include/types.hpp	/^#define GLFW_KEY_S /;"	d
GLFW_KEY_SCROLL_LOCK	VkZero/include/VkZero/types.hpp	/^#define GLFW_KEY_SCROLL_LOCK /;"	d
GLFW_KEY_SCROLL_LOCK	VkZero/include/types.hpp	/^#define GLFW_KEY_SCROLL_LOCK /;"	d
GLFW_KEY_SEMICOLON	VkZero/include/VkZero/types.hpp	/^#define GLFW_KEY_SEMICOLON /;"	d
GLFW_KEY_SEMICOLON	VkZero/include/types.hpp	/^#define GLFW_KEY_SEMICOLON /;"	d
GLFW_KEY_SLASH	VkZero/include/VkZero/types.hpp	/^#define GLFW_KEY_SLASH /;"	d
GLFW_KEY_SLASH	VkZero/include/types.hpp	/^#define GLFW_KEY_SLASH /;"	d
GLFW_KEY_SPACE	VkZero/include/VkZero/types.hpp	/^#define GLFW_KEY_SPACE /;"	d
GLFW_KEY_SPACE	VkZero/include/types.hpp	/^#define GLFW_KEY_SPACE /;"	d
GLFW_KEY_T	VkZero/include/VkZero/types.hpp	/^#define GLFW_KEY_T /;"	d
GLFW_KEY_T	VkZero/include/types.hpp	/^#define GLFW_KEY_T /;"	d
GLFW_KEY_TAB	VkZero/include/VkZero/types.hpp	/^#define GLFW_KEY_TAB /;"	d
GLFW_KEY_TAB	VkZero/include/types.hpp	/^#define GLFW_KEY_TAB /;"	d
GLFW_KEY_U	VkZero/include/VkZero/types.hpp	/^#define GLFW_KEY_U /;"	d
GLFW_KEY_U	VkZero/include/types.hpp	/^#define GLFW_KEY_U /;"	d
GLFW_KEY_UP	VkZero/include/VkZero/types.hpp	/^#define GLFW_KEY_UP /;"	d
GLFW_KEY_UP	VkZero/include/types.hpp	/^#define GLFW_KEY_UP /;"	d
GLFW_KEY_V	VkZero/include/VkZero/types.hpp	/^#define GLFW_KEY_V /;"	d
GLFW_KEY_V	VkZero/include/types.hpp	/^#define GLFW_KEY_V /;"	d
GLFW_KEY_W	VkZero/include/VkZero/types.hpp	/^#define GLFW_KEY_W /;"	d
GLFW_KEY_W	VkZero/include/types.hpp	/^#define GLFW_KEY_W /;"	d
GLFW_KEY_WORLD_1	VkZero/include/VkZero/types.hpp	/^#define GLFW_KEY_WORLD_1 /;"	d
GLFW_KEY_WORLD_1	VkZero/include/types.hpp	/^#define GLFW_KEY_WORLD_1 /;"	d
GLFW_KEY_WORLD_2	VkZero/include/VkZero/types.hpp	/^#define GLFW_KEY_WORLD_2 /;"	d
GLFW_KEY_WORLD_2	VkZero/include/types.hpp	/^#define GLFW_KEY_WORLD_2 /;"	d
GLFW_KEY_X	VkZero/include/VkZero/types.hpp	/^#define GLFW_KEY_X /;"	d
GLFW_KEY_X	VkZero/include/types.hpp	/^#define GLFW_KEY_X /;"	d
GLFW_KEY_Y	VkZero/include/VkZero/types.hpp	/^#define GLFW_KEY_Y /;"	d
GLFW_KEY_Y	VkZero/include/types.hpp	/^#define GLFW_KEY_Y /;"	d
GLFW_KEY_Z	VkZero/include/VkZero/types.hpp	/^#define GLFW_KEY_Z /;"	d
GLFW_KEY_Z	VkZero/include/types.hpp	/^#define GLFW_KEY_Z /;"	d
GLFW_MOD_ALT	VkZero/include/VkZero/types.hpp	/^#define GLFW_MOD_ALT /;"	d
GLFW_MOD_ALT	VkZero/include/types.hpp	/^#define GLFW_MOD_ALT /;"	d
GLFW_MOD_CAPS_LOCK	VkZero/include/VkZero/types.hpp	/^#define GLFW_MOD_CAPS_LOCK /;"	d
GLFW_MOD_CAPS_LOCK	VkZero/include/types.hpp	/^#define GLFW_MOD_CAPS_LOCK /;"	d
GLFW_MOD_CONTROL	VkZero/include/VkZero/types.hpp	/^#define GLFW_MOD_CONTROL /;"	d
GLFW_MOD_CONTROL	VkZero/include/types.hpp	/^#define GLFW_MOD_CONTROL /;"	d
GLFW_MOD_NUM_LOCK	VkZero/include/VkZero/types.hpp	/^#define GLFW_MOD_NUM_LOCK /;"	d
GLFW_MOD_NUM_LOCK	VkZero/include/types.hpp	/^#define GLFW_MOD_NUM_LOCK /;"	d
GLFW_MOD_SHIFT	VkZero/include/VkZero/types.hpp	/^#define GLFW_MOD_SHIFT /;"	d
GLFW_MOD_SHIFT	VkZero/include/types.hpp	/^#define GLFW_MOD_SHIFT /;"	d
GLFW_MOD_SUPER	VkZero/include/VkZero/types.hpp	/^#define GLFW_MOD_SUPER /;"	d
GLFW_MOD_SUPER	VkZero/include/types.hpp	/^#define GLFW_MOD_SUPER /;"	d
GLFW_MOUSE_BUTTON_1	VkZero/include/VkZero/types.hpp	/^#define GLFW_MOUSE_BUTTON_1 /;"	d
GLFW_MOUSE_BUTTON_1	VkZero/include/types.hpp	/^#define GLFW_MOUSE_BUTTON_1 /;"	d
GLFW_MOUSE_BUTTON_2	VkZero/include/VkZero/types.hpp	/^#define GLFW_MOUSE_BUTTON_2 /;"	d
GLFW_MOUSE_BUTTON_2	VkZero/include/types.hpp	/^#define GLFW_MOUSE_BUTTON_2 /;"	d
GLFW_MOUSE_BUTTON_3	VkZero/include/VkZero/types.hpp	/^#define GLFW_MOUSE_BUTTON_3 /;"	d
GLFW_MOUSE_BUTTON_3	VkZero/include/types.hpp	/^#define GLFW_MOUSE_BUTTON_3 /;"	d
GLFW_MOUSE_BUTTON_4	VkZero/include/VkZero/types.hpp	/^#define GLFW_MOUSE_BUTTON_4 /;"	d
GLFW_MOUSE_BUTTON_4	VkZero/include/types.hpp	/^#define GLFW_MOUSE_BUTTON_4 /;"	d
GLFW_MOUSE_BUTTON_5	VkZero/include/VkZero/types.hpp	/^#define GLFW_MOUSE_BUTTON_5 /;"	d
GLFW_MOUSE_BUTTON_5	VkZero/include/types.hpp	/^#define GLFW_MOUSE_BUTTON_5 /;"	d
GLFW_MOUSE_BUTTON_6	VkZero/include/VkZero/types.hpp	/^#define GLFW_MOUSE_BUTTON_6 /;"	d
GLFW_MOUSE_BUTTON_6	VkZero/include/types.hpp	/^#define GLFW_MOUSE_BUTTON_6 /;"	d
GLFW_MOUSE_BUTTON_7	VkZero/include/VkZero/types.hpp	/^#define GLFW_MOUSE_BUTTON_7 /;"	d
GLFW_MOUSE_BUTTON_7	VkZero/include/types.hpp	/^#define GLFW_MOUSE_BUTTON_7 /;"	d
GLFW_MOUSE_BUTTON_8	VkZero/include/VkZero/types.hpp	/^#define GLFW_MOUSE_BUTTON_8 /;"	d
GLFW_MOUSE_BUTTON_8	VkZero/include/types.hpp	/^#define GLFW_MOUSE_BUTTON_8 /;"	d
GLFW_MOUSE_BUTTON_LAST	VkZero/include/VkZero/types.hpp	/^#define GLFW_MOUSE_BUTTON_LAST /;"	d
GLFW_MOUSE_BUTTON_LAST	VkZero/include/types.hpp	/^#define GLFW_MOUSE_BUTTON_LAST /;"	d
GLFW_MOUSE_BUTTON_LEFT	VkZero/include/VkZero/types.hpp	/^#define GLFW_MOUSE_BUTTON_LEFT /;"	d
GLFW_MOUSE_BUTTON_LEFT	VkZero/include/types.hpp	/^#define GLFW_MOUSE_BUTTON_LEFT /;"	d
GLFW_MOUSE_BUTTON_MIDDLE	VkZero/include/VkZero/types.hpp	/^#define GLFW_MOUSE_BUTTON_MIDDLE /;"	d
GLFW_MOUSE_BUTTON_MIDDLE	VkZero/include/types.hpp	/^#define GLFW_MOUSE_BUTTON_MIDDLE /;"	d
GLFW_MOUSE_BUTTON_RIGHT	VkZero/include/VkZero/types.hpp	/^#define GLFW_MOUSE_BUTTON_RIGHT /;"	d
GLFW_MOUSE_BUTTON_RIGHT	VkZero/include/types.hpp	/^#define GLFW_MOUSE_BUTTON_RIGHT /;"	d
GenFractalFBm	include/FastNoiseLite.hpp	/^  float GenFractalFBm(FNfloat x, FNfloat y, FNfloat z) const {$/;"	f	class:FastNoiseLite	typeref:typename:float
GenFractalFBm	include/FastNoiseLite.hpp	/^  template <typename FNfloat> float GenFractalFBm(FNfloat x, FNfloat y) const {$/;"	f	class:FastNoiseLite	typeref:typename:float
GenFractalPingPong	include/FastNoiseLite.hpp	/^  float GenFractalPingPong(FNfloat x, FNfloat y) const {$/;"	f	class:FastNoiseLite	typeref:typename:float
GenFractalPingPong	include/FastNoiseLite.hpp	/^  float GenFractalPingPong(FNfloat x, FNfloat y, FNfloat z) const {$/;"	f	class:FastNoiseLite	typeref:typename:float
GenFractalRidged	include/FastNoiseLite.hpp	/^  float GenFractalRidged(FNfloat x, FNfloat y) const {$/;"	f	class:FastNoiseLite	typeref:typename:float
GenFractalRidged	include/FastNoiseLite.hpp	/^  float GenFractalRidged(FNfloat x, FNfloat y, FNfloat z) const {$/;"	f	class:FastNoiseLite	typeref:typename:float
GenNoiseSingle	include/FastNoiseLite.hpp	/^  float GenNoiseSingle(int seed, FNfloat x, FNfloat y) const {$/;"	f	class:FastNoiseLite	typeref:typename:float
GenNoiseSingle	include/FastNoiseLite.hpp	/^  float GenNoiseSingle(int seed, FNfloat x, FNfloat y, FNfloat z) const {$/;"	f	class:FastNoiseLite	typeref:typename:float
General	VkZero/include/VkZero/types.hpp	/^        General = 1,$/;"	e	enum:VkZero::ImageLayout
General	VkZero/include/types.hpp	/^        General = 1,$/;"	e	enum:VkZero::ImageLayout
GetAttachments	VkZero/include/VkZero/shader_group.hpp	/^struct GetAttachments<std::tuple<Attachments...>>{$/;"	s	namespace:VkZero
GetAttachments	VkZero/include/shader_group.hpp	/^struct GetAttachments<std::tuple<Attachments...>>{$/;"	s	namespace:VkZero
GetNoise	include/FastNoiseLite.hpp	/^  float GetNoise(FNfloat x, FNfloat y, FNfloat z) const {$/;"	f	class:FastNoiseLite	typeref:typename:float
GetNoise	include/FastNoiseLite.hpp	/^  template <typename FNfloat> float GetNoise(FNfloat x, FNfloat y) const {$/;"	f	class:FastNoiseLite	typeref:typename:float
GlobalShaderLibrary	include/shaders.hpp	/^using GlobalShaderLibrary = VkZero::ShaderLibrary<$/;"	t	typeref:typename:VkZero::ShaderLibrary<main_vert,main_frag,main_rmiss,main_rgen>
GradCoord	include/FastNoiseLite.hpp	/^  float GradCoord(int seed, int xPrimed, int yPrimed, float xd,$/;"	f	class:FastNoiseLite	typeref:typename:float
GradCoord	include/FastNoiseLite.hpp	/^  float GradCoord(int seed, int xPrimed, int yPrimed, int zPrimed, float xd,$/;"	f	class:FastNoiseLite	typeref:typename:float
GradCoordDual	include/FastNoiseLite.hpp	/^  void GradCoordDual(int seed, int xPrimed, int yPrimed, float xd, float yd,$/;"	f	class:FastNoiseLite	typeref:typename:void
GradCoordDual	include/FastNoiseLite.hpp	/^  void GradCoordDual(int seed, int xPrimed, int yPrimed, int zPrimed, float xd,$/;"	f	class:FastNoiseLite	typeref:typename:void
GradCoordOut	include/FastNoiseLite.hpp	/^  void GradCoordOut(int seed, int xPrimed, int yPrimed, float &xo,$/;"	f	class:FastNoiseLite	typeref:typename:void
GradCoordOut	include/FastNoiseLite.hpp	/^  void GradCoordOut(int seed, int xPrimed, int yPrimed, int zPrimed, float &xo,$/;"	f	class:FastNoiseLite	typeref:typename:void
Gradients2D	include/FastNoiseLite.hpp	/^    static const T Gradients2D[];$/;"	m	struct:FastNoiseLite::Lookup	typeref:typename:const T[]
Gradients2D	include/FastNoiseLite.hpp	/^const T FastNoiseLite::Lookup<T>::Gradients2D[] = {$/;"	m	class:FastNoiseLite::Lookup<T>	typeref:typename:const T[]
Gradients3D	include/FastNoiseLite.hpp	/^    static const T Gradients3D[];$/;"	m	struct:FastNoiseLite::Lookup	typeref:typename:const T[]
Gradients3D	include/FastNoiseLite.hpp	/^const T FastNoiseLite::Lookup<T>::Gradients3D[] = {$/;"	m	class:FastNoiseLite::Lookup<T>	typeref:typename:const T[]
GraphicsPipeline	VkZero/include/VkZero/graphics_pipeline.hpp	/^  GraphicsPipeline(ShaderGroup &shaderGroup,$/;"	f	class:VkZero::GraphicsPipeline
GraphicsPipeline	VkZero/include/VkZero/graphics_pipeline.hpp	/^class GraphicsPipeline : public GraphicsPipelineBase {$/;"	c	namespace:VkZero
GraphicsPipeline	VkZero/include/graphics_pipeline.hpp	/^  GraphicsPipeline(ShaderGroup &shaderGroup,$/;"	f	class:VkZero::GraphicsPipeline
GraphicsPipeline	VkZero/include/graphics_pipeline.hpp	/^class GraphicsPipeline : public GraphicsPipelineBase {$/;"	c	namespace:VkZero
GraphicsPipelineBase	VkZero/include/VkZero/graphics_pipeline.hpp	/^struct GraphicsPipelineBase {$/;"	s	namespace:VkZero
GraphicsPipelineBase	VkZero/include/graphics_pipeline.hpp	/^struct GraphicsPipelineBase {$/;"	s	namespace:VkZero
GraphicsPipelineBase	VkZero/src/graphics_pipeline.cpp	/^GraphicsPipelineBase::GraphicsPipelineBase(ShaderGroupImpl *shaderGroup,$/;"	f	class:GraphicsPipelineBase
GraphicsPipelineImpl_T	VkZero/include/VkZero/Internal/graphics_pipeline_internal.hpp	/^struct GraphicsPipelineImpl_T {$/;"	s	namespace:VkZero
GraphicsPipelineImpl_T	VkZero/src/graphics_pipeline.cpp	/^GraphicsPipelineImpl_T::GraphicsPipelineImpl_T(ShaderGroupImpl *shaderGroup,$/;"	f	class:GraphicsPipelineImpl_T
GraphicsRenderpass	VkZero/include/VkZero/render_pass.hpp	/^  GraphicsRenderpass(uint32_t width, uint32_t height, Resources &resource,$/;"	f	class:VkZero::GraphicsRenderpass
GraphicsRenderpass	VkZero/include/VkZero/render_pass.hpp	/^class GraphicsRenderpass : public GraphicsRenderpassBase {$/;"	c	namespace:VkZero
GraphicsRenderpass	VkZero/include/render_pass.hpp	/^  GraphicsRenderpass(uint32_t width, uint32_t height, Resources &resource,$/;"	f	class:VkZero::GraphicsRenderpass
GraphicsRenderpass	VkZero/include/render_pass.hpp	/^class GraphicsRenderpass : public GraphicsRenderpassBase {$/;"	c	namespace:VkZero
GraphicsRenderpassBase	VkZero/include/VkZero/render_pass.hpp	/^struct GraphicsRenderpassBase {$/;"	s	namespace:VkZero
GraphicsRenderpassBase	VkZero/include/render_pass.hpp	/^struct GraphicsRenderpassBase {$/;"	s	namespace:VkZero
GraphicsRenderpassBase	VkZero/src/graphics_renderpass.cpp	/^GraphicsRenderpassBase::GraphicsRenderpassBase($/;"	f	class:GraphicsRenderpassBase
GraphicsRenderpassImpl_T	VkZero/include/VkZero/Internal/graphics_renderpass_internal.hpp	/^struct GraphicsRenderpassImpl_T : public RenderpassImpl_T {$/;"	s	namespace:VkZero
GraphicsRenderpassImpl_T	VkZero/src/graphics_renderpass.cpp	/^GraphicsRenderpassImpl_T::GraphicsRenderpassImpl_T($/;"	f	class:GraphicsRenderpassImpl_T
Hash	include/FastNoiseLite.hpp	/^  static int Hash(int seed, int xPrimed, int yPrimed) {$/;"	f	class:FastNoiseLite	typeref:typename:int
Hash	include/FastNoiseLite.hpp	/^  static int Hash(int seed, int xPrimed, int yPrimed, int zPrimed) {$/;"	f	class:FastNoiseLite	typeref:typename:int
Image	VkZero/include/VkZero/Internal/image_internal.hpp	/^  Image(VkImage *vk_images, VkImageView *imageViews, size_t imageCount) {$/;"	f	class:VkZero::Image
Image	VkZero/include/VkZero/Internal/image_internal.hpp	/^  Image(uint32_t width, uint32_t height, uint32_t depth, Format format,$/;"	f	class:VkZero::Image
Image	VkZero/include/VkZero/Internal/image_internal.hpp	/^class Image {$/;"	c	namespace:VkZero
ImageData_T	VkZero/include/VkZero/Internal/image_internal.hpp	/^struct ImageData_T {$/;"	s	namespace:VkZero
ImageLayout	VkZero/include/VkZero/types.hpp	/^    enum class ImageLayout : uint32_t {$/;"	g	namespace:VkZero	typeref:typename:uint32_t
ImageLayout	VkZero/include/types.hpp	/^    enum class ImageLayout : uint32_t {$/;"	g	namespace:VkZero	typeref:typename:uint32_t
InlineUniformBlock	VkZero/include/VkZero/types.hpp	/^        InlineUniformBlock = 1000138000,$/;"	e	enum:VkZero::DescriptorType
InlineUniformBlock	VkZero/include/types.hpp	/^        InlineUniformBlock = 1000138000,$/;"	e	enum:VkZero::DescriptorType
InlineUniformBlockEXT	VkZero/include/VkZero/types.hpp	/^        InlineUniformBlockEXT = InlineUniformBlock,$/;"	e	enum:VkZero::DescriptorType
InlineUniformBlockEXT	VkZero/include/types.hpp	/^        InlineUniformBlockEXT = InlineUniformBlock,$/;"	e	enum:VkZero::DescriptorType
InputAttachment	VkZero/include/VkZero/render_pass.hpp	/^  InputAttachment()$/;"	f	struct:VkZero::InputAttachment
InputAttachment	VkZero/include/VkZero/render_pass.hpp	/^struct InputAttachment : public AttachmentBase {$/;"	s	namespace:VkZero
InputAttachment	VkZero/include/VkZero/types.hpp	/^        InputAttachment = 10,$/;"	e	enum:VkZero::DescriptorType
InputAttachment	VkZero/include/render_pass.hpp	/^  InputAttachment()$/;"	f	struct:VkZero::InputAttachment
InputAttachment	VkZero/include/render_pass.hpp	/^struct InputAttachment : public AttachmentBase {$/;"	s	namespace:VkZero
InputAttachment	VkZero/include/types.hpp	/^        InputAttachment = 10,$/;"	e	enum:VkZero::DescriptorType
InterpHermite	include/FastNoiseLite.hpp	/^  static float InterpHermite(float t) { return t * t * (3 - 2 * t); }$/;"	f	class:FastNoiseLite	typeref:typename:float
InterpQuintic	include/FastNoiseLite.hpp	/^  static float InterpQuintic(float t) {$/;"	f	class:FastNoiseLite	typeref:typename:float
Lerp	include/FastNoiseLite.hpp	/^  static float Lerp(float a, float b, float t) { return a + t * (b - a); }$/;"	f	class:FastNoiseLite	typeref:typename:float
License	README.md	/^## License$/;"	s	chapter:VoxelEngine
Lookup	include/FastNoiseLite.hpp	/^  template <typename T> struct Lookup {$/;"	s	class:FastNoiseLite
MAT_AIR	include/VoxelWorld.hpp	/^#define MAT_AIR /;"	d
MAT_FLOWER	include/VoxelWorld.hpp	/^#define MAT_FLOWER /;"	d
MAT_GRASS	include/VoxelWorld.hpp	/^#define MAT_GRASS /;"	d
MAT_HAS_COLLISION	include/VoxelWorld.hpp	/^#define MAT_HAS_COLLISION(/;"	d
MAT_IS_STONE	include/VoxelWorld.hpp	/^#define MAT_IS_STONE(/;"	d
MAT_PLANT_CORE	include/VoxelWorld.hpp	/^#define MAT_PLANT_CORE /;"	d
MAT_STONE	include/VoxelWorld.hpp	/^#define MAT_STONE /;"	d
MAT_STONE2	include/VoxelWorld.hpp	/^#define MAT_STONE2 /;"	d
MAT_STONE3	include/VoxelWorld.hpp	/^#define MAT_STONE3 /;"	d
MAT_WATER	include/VoxelWorld.hpp	/^#define MAT_WATER /;"	d
MAX_DESCRIPTOR_COUNT	VkZero/src/descriptor_pool.cpp	/^#define MAX_DESCRIPTOR_COUNT /;"	d	file:
MAX_FRAMEBUFFER_COUNT	VkZero/include/VkZero/info.hpp	/^#define MAX_FRAMEBUFFER_COUNT /;"	d
MAX_FRAMEBUFFER_COUNT	VkZero/include/info.hpp	/^#define MAX_FRAMEBUFFER_COUNT /;"	d
MAX_FRAMES_IN_FLIGHT	VkZero/include/VkZero/info.hpp	/^#define MAX_FRAMES_IN_FLIGHT /;"	d
MAX_FRAMES_IN_FLIGHT	VkZero/include/info.hpp	/^#define MAX_FRAMES_IN_FLIGHT /;"	d
MAX_POOL_SETS	VkZero/src/descriptor_pool.cpp	/^#define MAX_POOL_SETS /;"	d	file:
MultiImage	VkZero/include/VkZero/image.hpp	/^  MultiImage(struct MultiImageImpl_T *impl)$/;"	f	class:VkZero::MultiImage
MultiImage	VkZero/include/VkZero/image.hpp	/^  MultiImage(uint32_t width, uint32_t height, uint32_t depth, Format format,$/;"	f	class:VkZero::MultiImage
MultiImage	VkZero/include/VkZero/image.hpp	/^template <int MaxImageCount> class MultiImage : public MultiImageBase {$/;"	c	namespace:VkZero
MultiImage	VkZero/include/image.hpp	/^  MultiImage(struct MultiImageImpl_T *impl)$/;"	f	class:VkZero::MultiImage
MultiImage	VkZero/include/image.hpp	/^  MultiImage(uint32_t width, uint32_t height, uint32_t depth, Format format,$/;"	f	class:VkZero::MultiImage
MultiImage	VkZero/include/image.hpp	/^template <int MaxImageCount> class MultiImage : public MultiImageBase {$/;"	c	namespace:VkZero
MultiImageBase	VkZero/include/VkZero/image.hpp	/^struct MultiImageBase {$/;"	s	namespace:VkZero
MultiImageBase	VkZero/include/image.hpp	/^struct MultiImageBase {$/;"	s	namespace:VkZero
MultiImageBase	VkZero/src/image.cpp	/^MultiImageBase::MultiImageBase(struct MultiImageImpl_T *impl) : impl(impl) {}$/;"	f	class:MultiImageBase
MultiImageBase	VkZero/src/image.cpp	/^MultiImageBase::MultiImageBase(uint32_t width, uint32_t height, uint32_t depth, Format format, V/;"	f	class:MultiImageBase
MultiImageImpl_T	VkZero/include/VkZero/Internal/image_internal.hpp	/^struct MultiImageImpl_T : public BindResource, Image$/;"	s	namespace:VkZero
MultiImageImpl_T	VkZero/src/image.cpp	/^MultiImageImpl_T::MultiImageImpl_T(VkImage* vk_images, VkImageView* imageViews, size_t imageCoun/;"	f	class:MultiImageImpl_T
MultiImageImpl_T	VkZero/src/image.cpp	/^MultiImageImpl_T::MultiImageImpl_T(uint32_t width, uint32_t height, uint32_t depth, Format forma/;"	f	class:MultiImageImpl_T
MultiStagedImage	VkZero/include/VkZero/image.hpp	/^  MultiStagedImage(uint32_t width, uint32_t height, uint32_t depth,$/;"	f	class:VkZero::MultiStagedImage
MultiStagedImage	VkZero/include/VkZero/image.hpp	/^class MultiStagedImage : public MultiStagedImageBase {$/;"	c	namespace:VkZero
MultiStagedImage	VkZero/include/image.hpp	/^  MultiStagedImage(uint32_t width, uint32_t height, uint32_t depth,$/;"	f	class:VkZero::MultiStagedImage
MultiStagedImage	VkZero/include/image.hpp	/^class MultiStagedImage : public MultiStagedImageBase {$/;"	c	namespace:VkZero
MultiStagedImageBase	VkZero/include/VkZero/image.hpp	/^struct MultiStagedImageBase {$/;"	s	namespace:VkZero
MultiStagedImageBase	VkZero/include/image.hpp	/^struct MultiStagedImageBase {$/;"	s	namespace:VkZero
MultiStagedImageBase	VkZero/src/image.cpp	/^MultiStagedImageBase::MultiStagedImageBase(uint32_t width, uint32_t height, uint32_t depth, Form/;"	f	class:MultiStagedImageBase
MultiStagedImageImpl_T	VkZero/include/VkZero/Internal/image_internal.hpp	/^struct MultiStagedImageImpl_T : public BindResource, Image$/;"	s	namespace:VkZero
MultiStagedImageImpl_T	VkZero/src/image.cpp	/^  MultiStagedImageImpl_T::MultiStagedImageImpl_T(uint32_t width, uint32_t height, uint32_t depth/;"	f	class:MultiStagedImageImpl_T
MutableEXT	VkZero/include/VkZero/types.hpp	/^        MutableEXT = 1000351000,$/;"	e	enum:VkZero::DescriptorType
MutableEXT	VkZero/include/types.hpp	/^        MutableEXT = 1000351000,$/;"	e	enum:VkZero::DescriptorType
MutableValve	VkZero/include/VkZero/types.hpp	/^        MutableValve = MutableEXT$/;"	e	enum:VkZero::DescriptorType
MutableValve	VkZero/include/types.hpp	/^        MutableValve = MutableEXT$/;"	e	enum:VkZero::DescriptorType
NO_FUNCTION	VkZero/include/VkZero/render_pass.hpp	/^  static void NO_FUNCTION(void* commandBuffer, uint32_t currentFrame) {}$/;"	f	class:VkZero::RaytracingRenderPass	typeref:typename:void
NO_FUNCTION	VkZero/include/render_pass.hpp	/^  static void NO_FUNCTION(void* commandBuffer, uint32_t currentFrame) {}$/;"	f	class:VkZero::RaytracingRenderPass	typeref:typename:void
NoiseType	include/FastNoiseLite.hpp	/^  enum NoiseType {$/;"	g	class:FastNoiseLite
NoiseType_Cellular	include/FastNoiseLite.hpp	/^    NoiseType_Cellular,$/;"	e	enum:FastNoiseLite::NoiseType
NoiseType_OpenSimplex2	include/FastNoiseLite.hpp	/^    NoiseType_OpenSimplex2,$/;"	e	enum:FastNoiseLite::NoiseType
NoiseType_OpenSimplex2S	include/FastNoiseLite.hpp	/^    NoiseType_OpenSimplex2S,$/;"	e	enum:FastNoiseLite::NoiseType
NoiseType_Perlin	include/FastNoiseLite.hpp	/^    NoiseType_Perlin,$/;"	e	enum:FastNoiseLite::NoiseType
NoiseType_Value	include/FastNoiseLite.hpp	/^    NoiseType_Value$/;"	e	enum:FastNoiseLite::NoiseType
NoiseType_ValueCubic	include/FastNoiseLite.hpp	/^    NoiseType_ValueCubic,$/;"	e	enum:FastNoiseLite::NoiseType
Options	VkZero/include/VkZero/shader_bindings.hpp	/^  using Options = PushConstantType;$/;"	t	struct:VkZero::ShaderPushConstant	typeref:typename:PushConstantType
Options	VkZero/include/VkZero/shader_bindings.hpp	/^  using Options = std::tuple<Attachments...>;$/;"	t	struct:VkZero::ShaderAttachments	typeref:typename:std::tuple<Attachments...>
Options	VkZero/include/VkZero/shader_bindings.hpp	/^  using Options = std::tuple<Bindings...>;$/;"	t	struct:VkZero::ShaderBindings	typeref:typename:std::tuple<Bindings...>
Options	VkZero/include/shader_bindings.hpp	/^  using Options = PushConstantType;$/;"	t	struct:VkZero::ShaderPushConstant	typeref:typename:PushConstantType
Options	VkZero/include/shader_bindings.hpp	/^  using Options = std::tuple<Attachments...>;$/;"	t	struct:VkZero::ShaderAttachments	typeref:typename:std::tuple<Attachments...>
Options	VkZero/include/shader_bindings.hpp	/^  using Options = std::tuple<Bindings...>;$/;"	t	struct:VkZero::ShaderBindings	typeref:typename:std::tuple<Bindings...>
PVRTC12BppSrgbBlockImg	VkZero/include/VkZero/types.hpp	/^        PVRTC12BppSrgbBlockImg = 1000054004,$/;"	e	enum:VkZero::Format
PVRTC12BppSrgbBlockImg	VkZero/include/types.hpp	/^        PVRTC12BppSrgbBlockImg = 1000054004,$/;"	e	enum:VkZero::Format
PVRTC12BppUnormBlockImg	VkZero/include/VkZero/types.hpp	/^        PVRTC12BppUnormBlockImg = 1000054000,$/;"	e	enum:VkZero::Format
PVRTC12BppUnormBlockImg	VkZero/include/types.hpp	/^        PVRTC12BppUnormBlockImg = 1000054000,$/;"	e	enum:VkZero::Format
PVRTC14BppSrgbBlockImg	VkZero/include/VkZero/types.hpp	/^        PVRTC14BppSrgbBlockImg = 1000054005,$/;"	e	enum:VkZero::Format
PVRTC14BppSrgbBlockImg	VkZero/include/types.hpp	/^        PVRTC14BppSrgbBlockImg = 1000054005,$/;"	e	enum:VkZero::Format
PVRTC14BppUnormBlockImg	VkZero/include/VkZero/types.hpp	/^        PVRTC14BppUnormBlockImg = 1000054001,$/;"	e	enum:VkZero::Format
PVRTC14BppUnormBlockImg	VkZero/include/types.hpp	/^        PVRTC14BppUnormBlockImg = 1000054001,$/;"	e	enum:VkZero::Format
PVRTC22BppSrgbBlockImg	VkZero/include/VkZero/types.hpp	/^        PVRTC22BppSrgbBlockImg = 1000054006,$/;"	e	enum:VkZero::Format
PVRTC22BppSrgbBlockImg	VkZero/include/types.hpp	/^        PVRTC22BppSrgbBlockImg = 1000054006,$/;"	e	enum:VkZero::Format
PVRTC22BppUnormBlockImg	VkZero/include/VkZero/types.hpp	/^        PVRTC22BppUnormBlockImg = 1000054002,$/;"	e	enum:VkZero::Format
PVRTC22BppUnormBlockImg	VkZero/include/types.hpp	/^        PVRTC22BppUnormBlockImg = 1000054002,$/;"	e	enum:VkZero::Format
PVRTC24BppSrgbBlockImg	VkZero/include/VkZero/types.hpp	/^        PVRTC24BppSrgbBlockImg = 1000054007,$/;"	e	enum:VkZero::Format
PVRTC24BppSrgbBlockImg	VkZero/include/types.hpp	/^        PVRTC24BppSrgbBlockImg = 1000054007,$/;"	e	enum:VkZero::Format
PVRTC24BppUnormBlockImg	VkZero/include/VkZero/types.hpp	/^        PVRTC24BppUnormBlockImg = 1000054003,$/;"	e	enum:VkZero::Format
PVRTC24BppUnormBlockImg	VkZero/include/types.hpp	/^        PVRTC24BppUnormBlockImg = 1000054003,$/;"	e	enum:VkZero::Format
PartitionedAccelerationStructureNV	VkZero/include/VkZero/types.hpp	/^        PartitionedAccelerationStructureNV = 1000570000,$/;"	e	enum:VkZero::DescriptorType
PartitionedAccelerationStructureNV	VkZero/include/types.hpp	/^        PartitionedAccelerationStructureNV = 1000570000,$/;"	e	enum:VkZero::DescriptorType
PingPong	include/FastNoiseLite.hpp	/^  static float PingPong(float t) {$/;"	f	class:FastNoiseLite	typeref:typename:float
Pipeline	include/VkZeroObjects.hpp	/^  using Pipeline = VkZero::GraphicsPipeline<PipelineShaderGroup, PipelineShaderResources>;$/;"	t	class:VkZeroObjects	typeref:typename:VkZero::GraphicsPipeline<PipelineShaderGroup,PipelineShaderResources>
PipelineDetails	VkZero/include/VkZero/graphics_pipeline.hpp	/^namespace PipelineDetails {$/;"	n	namespace:VkZero
PipelineDetails	VkZero/include/graphics_pipeline.hpp	/^namespace PipelineDetails {$/;"	n	namespace:VkZero
PipelineRenderPass	include/VkZeroObjects.hpp	/^  using PipelineRenderPass = VkZero::GraphicsRenderpass<PipelineRenderPassResources, Pipeline>;$/;"	t	class:VkZeroObjects	typeref:typename:VkZero::GraphicsRenderpass<PipelineRenderPassResources,Pipeline>
PipelineRenderPassResources	include/VkZeroObjects.hpp	/^  using PipelineRenderPassResources = VkZero::RenderPassResourceSet<VkZero::RenderPassResource<"/;"	t	class:VkZeroObjects	typeref:typename:VkZero::RenderPassResourceSet<VkZero::RenderPassResource<"output">>
PipelineShaderGroup	include/VkZeroObjects.hpp	/^  using PipelineShaderGroup = VkZero::ShaderGroup<PipelineShaderPushConstant, main_vert, main_fr/;"	t	class:VkZeroObjects	typeref:typename:VkZero::ShaderGroup<PipelineShaderPushConstant,main_vert,main_frag>
PipelineShaderPushConstant	include/VkZeroObjects.hpp	/^  using PipelineShaderPushConstant = VkZero::ShaderPushConstants<>;$/;"	t	class:VkZeroObjects	typeref:typename:VkZero::ShaderPushConstants<>
PipelineShaderResources	include/VkZeroObjects.hpp	/^  using PipelineShaderResources = VkZero::ShaderResourceSet<VkZero::ResourceBinding<VkZero::Swap/;"	t	class:VkZeroObjects	typeref:typename:VkZero::ShaderResourceSet<VkZero::ResourceBinding<VkZero::SwapImage,VkZero::DescriptorType::CombinedImageSampler,VkZero::SHADER_FRAGMENT,0,1>>
Preinitialized	VkZero/include/VkZero/types.hpp	/^        Preinitialized = 8,$/;"	e	enum:VkZero::ImageLayout
Preinitialized	VkZero/include/types.hpp	/^        Preinitialized = 8,$/;"	e	enum:VkZero::ImageLayout
PresentSrc	VkZero/include/VkZero/types.hpp	/^        PresentSrc = 1000001002,$/;"	e	enum:VkZero::ImageLayout
PresentSrc	VkZero/include/types.hpp	/^        PresentSrc = 1000001002,$/;"	e	enum:VkZero::ImageLayout
PreserveAttachment	VkZero/include/VkZero/render_pass.hpp	/^  PreserveAttachment() : AttachmentBase(name.value) {}$/;"	f	struct:VkZero::PreserveAttachment
PreserveAttachment	VkZero/include/VkZero/render_pass.hpp	/^template <FixedString Name> struct PreserveAttachment : public AttachmentBase {$/;"	s	namespace:VkZero
PreserveAttachment	VkZero/include/render_pass.hpp	/^  PreserveAttachment() : AttachmentBase(name.value) {}$/;"	f	struct:VkZero::PreserveAttachment
PreserveAttachment	VkZero/include/render_pass.hpp	/^template <FixedString Name> struct PreserveAttachment : public AttachmentBase {$/;"	s	namespace:VkZero
PrimeX	include/FastNoiseLite.hpp	/^  static const int PrimeX = 501125321;$/;"	m	class:FastNoiseLite	typeref:typename:const int
PrimeY	include/FastNoiseLite.hpp	/^  static const int PrimeY = 1136930381;$/;"	m	class:FastNoiseLite	typeref:typename:const int
PrimeZ	include/FastNoiseLite.hpp	/^  static const int PrimeZ = 1720413743;$/;"	m	class:FastNoiseLite	typeref:typename:const int
Project Structure	README.md	/^## Project Structure$/;"	s	chapter:VoxelEngine
PushConstant	VkZero/include/VkZero/shader_group.hpp	/^template <typename T, int ShaderStages> struct PushConstant {$/;"	s	namespace:VkZero
PushConstant	VkZero/include/shader_group.hpp	/^template <typename T, int ShaderStages> struct PushConstant {$/;"	s	namespace:VkZero
PushConstantData	VkZero/include/VkZero/render_pass.hpp	/^  PushConstantData() : PushConstantDataBase((sizeof(Structures) + ...)) {}$/;"	f	struct:VkZero::PushConstantData
PushConstantData	VkZero/include/VkZero/render_pass.hpp	/^template <typename... Structures> struct PushConstantData : public PushConstantDataBase {$/;"	s	namespace:VkZero
PushConstantData	VkZero/include/render_pass.hpp	/^  PushConstantData() : PushConstantDataBase((sizeof(Structures) + ...)) {}$/;"	f	struct:VkZero::PushConstantData
PushConstantData	VkZero/include/render_pass.hpp	/^template <typename... Structures> struct PushConstantData : public PushConstantDataBase {$/;"	s	namespace:VkZero
PushConstantDataBase	VkZero/include/VkZero/render_pass.hpp	/^struct PushConstantDataBase {$/;"	s	namespace:VkZero
PushConstantDataBase	VkZero/include/render_pass.hpp	/^struct PushConstantDataBase {$/;"	s	namespace:VkZero
PushConstantDataBase	VkZero/src/graphics_renderpass.cpp	/^PushConstantDataBase::PushConstantDataBase(size_t size) {$/;"	f	class:PushConstantDataBase
PushConstantDataImpl_T	VkZero/include/VkZero/Internal/graphics_renderpass_internal.hpp	/^  PushConstantDataImpl_T(size_t size)$/;"	f	struct:VkZero::PushConstantDataImpl_T
PushConstantDataImpl_T	VkZero/include/VkZero/Internal/graphics_renderpass_internal.hpp	/^struct PushConstantDataImpl_T {$/;"	s	namespace:VkZero
PushConstantType	VkZero/include/VkZero/shader.hpp	/^        using PushConstantType = ShaderDetails::push_constant_extractor<std::tuple<ShaderOptions/;"	t	class:VkZero::Shader	typeref:typename:ShaderDetails::push_constant_extractor<std::tuple<ShaderOptions...>>::type::Options
PushConstantType	VkZero/include/shader.hpp	/^        using PushConstantType = ShaderDetails::push_constant_extractor<std::tuple<ShaderOptions/;"	t	class:VkZero::Shader	typeref:typename:ShaderDetails::push_constant_extractor<std::tuple<ShaderOptions...>>::type::Options
QueueFamilyIndices	VkZero/include/VkZero/Internal/core_internal.hpp	/^  struct QueueFamilyIndices {$/;"	s	namespace:VkZero
R10X6G10X6B10X6A10X6Unorm4Pack16	VkZero/include/VkZero/types.hpp	/^        R10X6G10X6B10X6A10X6Unorm4Pack16 = 1000156009,$/;"	e	enum:VkZero::Format
R10X6G10X6B10X6A10X6Unorm4Pack16	VkZero/include/types.hpp	/^        R10X6G10X6B10X6A10X6Unorm4Pack16 = 1000156009,$/;"	e	enum:VkZero::Format
R10X6G10X6Unorm2Pack16	VkZero/include/VkZero/types.hpp	/^        R10X6G10X6Unorm2Pack16 = 1000156008,$/;"	e	enum:VkZero::Format
R10X6G10X6Unorm2Pack16	VkZero/include/types.hpp	/^        R10X6G10X6Unorm2Pack16 = 1000156008,$/;"	e	enum:VkZero::Format
R10X6UnormPack16	VkZero/include/VkZero/types.hpp	/^        R10X6UnormPack16 = 1000156007,$/;"	e	enum:VkZero::Format
R10X6UnormPack16	VkZero/include/types.hpp	/^        R10X6UnormPack16 = 1000156007,$/;"	e	enum:VkZero::Format
R12X4G12X4B12X4A12X4Unorm4Pack16	VkZero/include/VkZero/types.hpp	/^        R12X4G12X4B12X4A12X4Unorm4Pack16 = 1000156019,$/;"	e	enum:VkZero::Format
R12X4G12X4B12X4A12X4Unorm4Pack16	VkZero/include/types.hpp	/^        R12X4G12X4B12X4A12X4Unorm4Pack16 = 1000156019,$/;"	e	enum:VkZero::Format
R12X4G12X4Unorm2Pack16	VkZero/include/VkZero/types.hpp	/^        R12X4G12X4Unorm2Pack16 = 1000156018,$/;"	e	enum:VkZero::Format
R12X4G12X4Unorm2Pack16	VkZero/include/types.hpp	/^        R12X4G12X4Unorm2Pack16 = 1000156018,$/;"	e	enum:VkZero::Format
R12X4UnormPack16	VkZero/include/VkZero/types.hpp	/^        R12X4UnormPack16 = 1000156017,$/;"	e	enum:VkZero::Format
R12X4UnormPack16	VkZero/include/types.hpp	/^        R12X4UnormPack16 = 1000156017,$/;"	e	enum:VkZero::Format
R16G16B16A16Sfloat	VkZero/include/VkZero/types.hpp	/^        R16G16B16A16Sfloat = 97,$/;"	e	enum:VkZero::Format
R16G16B16A16Sfloat	VkZero/include/types.hpp	/^        R16G16B16A16Sfloat = 97,$/;"	e	enum:VkZero::Format
R16G16B16A16Sint	VkZero/include/VkZero/types.hpp	/^        R16G16B16A16Sint = 96,$/;"	e	enum:VkZero::Format
R16G16B16A16Sint	VkZero/include/types.hpp	/^        R16G16B16A16Sint = 96,$/;"	e	enum:VkZero::Format
R16G16B16A16Snorm	VkZero/include/VkZero/types.hpp	/^        R16G16B16A16Snorm = 92,$/;"	e	enum:VkZero::Format
R16G16B16A16Snorm	VkZero/include/types.hpp	/^        R16G16B16A16Snorm = 92,$/;"	e	enum:VkZero::Format
R16G16B16A16Sscaled	VkZero/include/VkZero/types.hpp	/^        R16G16B16A16Sscaled = 94,$/;"	e	enum:VkZero::Format
R16G16B16A16Sscaled	VkZero/include/types.hpp	/^        R16G16B16A16Sscaled = 94,$/;"	e	enum:VkZero::Format
R16G16B16A16Uint	VkZero/include/VkZero/types.hpp	/^        R16G16B16A16Uint = 95,$/;"	e	enum:VkZero::Format
R16G16B16A16Uint	VkZero/include/types.hpp	/^        R16G16B16A16Uint = 95,$/;"	e	enum:VkZero::Format
R16G16B16A16Unorm	VkZero/include/VkZero/types.hpp	/^        R16G16B16A16Unorm = 91,$/;"	e	enum:VkZero::Format
R16G16B16A16Unorm	VkZero/include/types.hpp	/^        R16G16B16A16Unorm = 91,$/;"	e	enum:VkZero::Format
R16G16B16A16Uscaled	VkZero/include/VkZero/types.hpp	/^        R16G16B16A16Uscaled = 93,$/;"	e	enum:VkZero::Format
R16G16B16A16Uscaled	VkZero/include/types.hpp	/^        R16G16B16A16Uscaled = 93,$/;"	e	enum:VkZero::Format
R16G16B16Sfloat	VkZero/include/VkZero/types.hpp	/^        R16G16B16Sfloat = 90,$/;"	e	enum:VkZero::Format
R16G16B16Sfloat	VkZero/include/types.hpp	/^        R16G16B16Sfloat = 90,$/;"	e	enum:VkZero::Format
R16G16B16Sint	VkZero/include/VkZero/types.hpp	/^        R16G16B16Sint = 89,$/;"	e	enum:VkZero::Format
R16G16B16Sint	VkZero/include/types.hpp	/^        R16G16B16Sint = 89,$/;"	e	enum:VkZero::Format
R16G16B16Snorm	VkZero/include/VkZero/types.hpp	/^        R16G16B16Snorm = 85,$/;"	e	enum:VkZero::Format
R16G16B16Snorm	VkZero/include/types.hpp	/^        R16G16B16Snorm = 85,$/;"	e	enum:VkZero::Format
R16G16B16Sscaled	VkZero/include/VkZero/types.hpp	/^        R16G16B16Sscaled = 87,$/;"	e	enum:VkZero::Format
R16G16B16Sscaled	VkZero/include/types.hpp	/^        R16G16B16Sscaled = 87,$/;"	e	enum:VkZero::Format
R16G16B16Uint	VkZero/include/VkZero/types.hpp	/^        R16G16B16Uint = 88,$/;"	e	enum:VkZero::Format
R16G16B16Uint	VkZero/include/types.hpp	/^        R16G16B16Uint = 88,$/;"	e	enum:VkZero::Format
R16G16B16Unorm	VkZero/include/VkZero/types.hpp	/^        R16G16B16Unorm = 84,$/;"	e	enum:VkZero::Format
R16G16B16Unorm	VkZero/include/types.hpp	/^        R16G16B16Unorm = 84,$/;"	e	enum:VkZero::Format
R16G16B16Uscaled	VkZero/include/VkZero/types.hpp	/^        R16G16B16Uscaled = 86,$/;"	e	enum:VkZero::Format
R16G16B16Uscaled	VkZero/include/types.hpp	/^        R16G16B16Uscaled = 86,$/;"	e	enum:VkZero::Format
R16G16Sfixed5NV	VkZero/include/VkZero/types.hpp	/^        R16G16Sfixed5NV = 1000464000$/;"	e	enum:VkZero::Format
R16G16Sfixed5NV	VkZero/include/types.hpp	/^        R16G16Sfixed5NV = 1000464000$/;"	e	enum:VkZero::Format
R16G16Sfloat	VkZero/include/VkZero/types.hpp	/^        R16G16Sfloat = 83,$/;"	e	enum:VkZero::Format
R16G16Sfloat	VkZero/include/types.hpp	/^        R16G16Sfloat = 83,$/;"	e	enum:VkZero::Format
R16G16Sint	VkZero/include/VkZero/types.hpp	/^        R16G16Sint = 82,$/;"	e	enum:VkZero::Format
R16G16Sint	VkZero/include/types.hpp	/^        R16G16Sint = 82,$/;"	e	enum:VkZero::Format
R16G16Snorm	VkZero/include/VkZero/types.hpp	/^        R16G16Snorm = 78,$/;"	e	enum:VkZero::Format
R16G16Snorm	VkZero/include/types.hpp	/^        R16G16Snorm = 78,$/;"	e	enum:VkZero::Format
R16G16Sscaled	VkZero/include/VkZero/types.hpp	/^        R16G16Sscaled = 80,$/;"	e	enum:VkZero::Format
R16G16Sscaled	VkZero/include/types.hpp	/^        R16G16Sscaled = 80,$/;"	e	enum:VkZero::Format
R16G16Uint	VkZero/include/VkZero/types.hpp	/^        R16G16Uint = 81,$/;"	e	enum:VkZero::Format
R16G16Uint	VkZero/include/types.hpp	/^        R16G16Uint = 81,$/;"	e	enum:VkZero::Format
R16G16Unorm	VkZero/include/VkZero/types.hpp	/^        R16G16Unorm = 77,$/;"	e	enum:VkZero::Format
R16G16Unorm	VkZero/include/types.hpp	/^        R16G16Unorm = 77,$/;"	e	enum:VkZero::Format
R16G16Uscaled	VkZero/include/VkZero/types.hpp	/^        R16G16Uscaled = 79,$/;"	e	enum:VkZero::Format
R16G16Uscaled	VkZero/include/types.hpp	/^        R16G16Uscaled = 79,$/;"	e	enum:VkZero::Format
R16Sfloat	VkZero/include/VkZero/types.hpp	/^        R16Sfloat = 76,$/;"	e	enum:VkZero::Format
R16Sfloat	VkZero/include/types.hpp	/^        R16Sfloat = 76,$/;"	e	enum:VkZero::Format
R16Sint	VkZero/include/VkZero/types.hpp	/^        R16Sint = 75,$/;"	e	enum:VkZero::Format
R16Sint	VkZero/include/types.hpp	/^        R16Sint = 75,$/;"	e	enum:VkZero::Format
R16Snorm	VkZero/include/VkZero/types.hpp	/^        R16Snorm = 71,$/;"	e	enum:VkZero::Format
R16Snorm	VkZero/include/types.hpp	/^        R16Snorm = 71,$/;"	e	enum:VkZero::Format
R16Sscaled	VkZero/include/VkZero/types.hpp	/^        R16Sscaled = 73,$/;"	e	enum:VkZero::Format
R16Sscaled	VkZero/include/types.hpp	/^        R16Sscaled = 73,$/;"	e	enum:VkZero::Format
R16Uint	VkZero/include/VkZero/types.hpp	/^        R16Uint = 74,$/;"	e	enum:VkZero::Format
R16Uint	VkZero/include/types.hpp	/^        R16Uint = 74,$/;"	e	enum:VkZero::Format
R16Unorm	VkZero/include/VkZero/types.hpp	/^        R16Unorm = 70,$/;"	e	enum:VkZero::Format
R16Unorm	VkZero/include/types.hpp	/^        R16Unorm = 70,$/;"	e	enum:VkZero::Format
R16Uscaled	VkZero/include/VkZero/types.hpp	/^        R16Uscaled = 72,$/;"	e	enum:VkZero::Format
R16Uscaled	VkZero/include/types.hpp	/^        R16Uscaled = 72,$/;"	e	enum:VkZero::Format
R32G32B32A32Sfloat	VkZero/include/VkZero/types.hpp	/^        R32G32B32A32Sfloat = 109,$/;"	e	enum:VkZero::Format
R32G32B32A32Sfloat	VkZero/include/types.hpp	/^        R32G32B32A32Sfloat = 109,$/;"	e	enum:VkZero::Format
R32G32B32A32Sint	VkZero/include/VkZero/types.hpp	/^        R32G32B32A32Sint = 108,$/;"	e	enum:VkZero::Format
R32G32B32A32Sint	VkZero/include/types.hpp	/^        R32G32B32A32Sint = 108,$/;"	e	enum:VkZero::Format
R32G32B32A32Uint	VkZero/include/VkZero/types.hpp	/^        R32G32B32A32Uint = 107,$/;"	e	enum:VkZero::Format
R32G32B32A32Uint	VkZero/include/types.hpp	/^        R32G32B32A32Uint = 107,$/;"	e	enum:VkZero::Format
R32G32B32Sfloat	VkZero/include/VkZero/types.hpp	/^        R32G32B32Sfloat = 106,$/;"	e	enum:VkZero::Format
R32G32B32Sfloat	VkZero/include/types.hpp	/^        R32G32B32Sfloat = 106,$/;"	e	enum:VkZero::Format
R32G32B32Sint	VkZero/include/VkZero/types.hpp	/^        R32G32B32Sint = 105,$/;"	e	enum:VkZero::Format
R32G32B32Sint	VkZero/include/types.hpp	/^        R32G32B32Sint = 105,$/;"	e	enum:VkZero::Format
R32G32B32Uint	VkZero/include/VkZero/types.hpp	/^        R32G32B32Uint = 104,$/;"	e	enum:VkZero::Format
R32G32B32Uint	VkZero/include/types.hpp	/^        R32G32B32Uint = 104,$/;"	e	enum:VkZero::Format
R32G32Sfloat	VkZero/include/VkZero/types.hpp	/^        R32G32Sfloat = 103,$/;"	e	enum:VkZero::Format
R32G32Sfloat	VkZero/include/types.hpp	/^        R32G32Sfloat = 103,$/;"	e	enum:VkZero::Format
R32G32Sint	VkZero/include/VkZero/types.hpp	/^        R32G32Sint = 102,$/;"	e	enum:VkZero::Format
R32G32Sint	VkZero/include/types.hpp	/^        R32G32Sint = 102,$/;"	e	enum:VkZero::Format
R32G32Uint	VkZero/include/VkZero/types.hpp	/^        R32G32Uint = 101,$/;"	e	enum:VkZero::Format
R32G32Uint	VkZero/include/types.hpp	/^        R32G32Uint = 101,$/;"	e	enum:VkZero::Format
R32Sfloat	VkZero/include/VkZero/types.hpp	/^        R32Sfloat = 100,$/;"	e	enum:VkZero::Format
R32Sfloat	VkZero/include/types.hpp	/^        R32Sfloat = 100,$/;"	e	enum:VkZero::Format
R32Sint	VkZero/include/VkZero/types.hpp	/^        R32Sint = 99,$/;"	e	enum:VkZero::Format
R32Sint	VkZero/include/types.hpp	/^        R32Sint = 99,$/;"	e	enum:VkZero::Format
R32Uint	VkZero/include/VkZero/types.hpp	/^        R32Uint = 98,$/;"	e	enum:VkZero::Format
R32Uint	VkZero/include/types.hpp	/^        R32Uint = 98,$/;"	e	enum:VkZero::Format
R4G4B4A4UnormPack16	VkZero/include/VkZero/types.hpp	/^        R4G4B4A4UnormPack16 = 2,$/;"	e	enum:VkZero::Format
R4G4B4A4UnormPack16	VkZero/include/types.hpp	/^        R4G4B4A4UnormPack16 = 2,$/;"	e	enum:VkZero::Format
R4G4UnormPack8	VkZero/include/VkZero/types.hpp	/^        R4G4UnormPack8 = 1,$/;"	e	enum:VkZero::Format
R4G4UnormPack8	VkZero/include/types.hpp	/^        R4G4UnormPack8 = 1,$/;"	e	enum:VkZero::Format
R5G5B5A1UnormPack16	VkZero/include/VkZero/types.hpp	/^        R5G5B5A1UnormPack16 = 6,$/;"	e	enum:VkZero::Format
R5G5B5A1UnormPack16	VkZero/include/types.hpp	/^        R5G5B5A1UnormPack16 = 6,$/;"	e	enum:VkZero::Format
R5G6B5UnormPack16	VkZero/include/VkZero/types.hpp	/^        R5G6B5UnormPack16 = 4,$/;"	e	enum:VkZero::Format
R5G6B5UnormPack16	VkZero/include/types.hpp	/^        R5G6B5UnormPack16 = 4,$/;"	e	enum:VkZero::Format
R64G64B64A64Sfloat	VkZero/include/VkZero/types.hpp	/^        R64G64B64A64Sfloat = 121,$/;"	e	enum:VkZero::Format
R64G64B64A64Sfloat	VkZero/include/types.hpp	/^        R64G64B64A64Sfloat = 121,$/;"	e	enum:VkZero::Format
R64G64B64A64Sint	VkZero/include/VkZero/types.hpp	/^        R64G64B64A64Sint = 120,$/;"	e	enum:VkZero::Format
R64G64B64A64Sint	VkZero/include/types.hpp	/^        R64G64B64A64Sint = 120,$/;"	e	enum:VkZero::Format
R64G64B64A64Uint	VkZero/include/VkZero/types.hpp	/^        R64G64B64A64Uint = 119,$/;"	e	enum:VkZero::Format
R64G64B64A64Uint	VkZero/include/types.hpp	/^        R64G64B64A64Uint = 119,$/;"	e	enum:VkZero::Format
R64G64B64Sfloat	VkZero/include/VkZero/types.hpp	/^        R64G64B64Sfloat = 118,$/;"	e	enum:VkZero::Format
R64G64B64Sfloat	VkZero/include/types.hpp	/^        R64G64B64Sfloat = 118,$/;"	e	enum:VkZero::Format
R64G64B64Sint	VkZero/include/VkZero/types.hpp	/^        R64G64B64Sint = 117,$/;"	e	enum:VkZero::Format
R64G64B64Sint	VkZero/include/types.hpp	/^        R64G64B64Sint = 117,$/;"	e	enum:VkZero::Format
R64G64B64Uint	VkZero/include/VkZero/types.hpp	/^        R64G64B64Uint = 116,$/;"	e	enum:VkZero::Format
R64G64B64Uint	VkZero/include/types.hpp	/^        R64G64B64Uint = 116,$/;"	e	enum:VkZero::Format
R64G64Sfloat	VkZero/include/VkZero/types.hpp	/^        R64G64Sfloat = 115,$/;"	e	enum:VkZero::Format
R64G64Sfloat	VkZero/include/types.hpp	/^        R64G64Sfloat = 115,$/;"	e	enum:VkZero::Format
R64G64Sint	VkZero/include/VkZero/types.hpp	/^        R64G64Sint = 114,$/;"	e	enum:VkZero::Format
R64G64Sint	VkZero/include/types.hpp	/^        R64G64Sint = 114,$/;"	e	enum:VkZero::Format
R64G64Uint	VkZero/include/VkZero/types.hpp	/^        R64G64Uint = 113,$/;"	e	enum:VkZero::Format
R64G64Uint	VkZero/include/types.hpp	/^        R64G64Uint = 113,$/;"	e	enum:VkZero::Format
R64Sfloat	VkZero/include/VkZero/types.hpp	/^        R64Sfloat = 112,$/;"	e	enum:VkZero::Format
R64Sfloat	VkZero/include/types.hpp	/^        R64Sfloat = 112,$/;"	e	enum:VkZero::Format
R64Sint	VkZero/include/VkZero/types.hpp	/^        R64Sint = 111,$/;"	e	enum:VkZero::Format
R64Sint	VkZero/include/types.hpp	/^        R64Sint = 111,$/;"	e	enum:VkZero::Format
R64Uint	VkZero/include/VkZero/types.hpp	/^        R64Uint = 110,$/;"	e	enum:VkZero::Format
R64Uint	VkZero/include/types.hpp	/^        R64Uint = 110,$/;"	e	enum:VkZero::Format
R8G8B8A8Sint	VkZero/include/VkZero/types.hpp	/^        R8G8B8A8Sint = 42,$/;"	e	enum:VkZero::Format
R8G8B8A8Sint	VkZero/include/types.hpp	/^        R8G8B8A8Sint = 42,$/;"	e	enum:VkZero::Format
R8G8B8A8Snorm	VkZero/include/VkZero/types.hpp	/^        R8G8B8A8Snorm = 38,$/;"	e	enum:VkZero::Format
R8G8B8A8Snorm	VkZero/include/types.hpp	/^        R8G8B8A8Snorm = 38,$/;"	e	enum:VkZero::Format
R8G8B8A8Srgb	VkZero/include/VkZero/types.hpp	/^        R8G8B8A8Srgb = 43,$/;"	e	enum:VkZero::Format
R8G8B8A8Srgb	VkZero/include/types.hpp	/^        R8G8B8A8Srgb = 43,$/;"	e	enum:VkZero::Format
R8G8B8A8Sscaled	VkZero/include/VkZero/types.hpp	/^        R8G8B8A8Sscaled = 40,$/;"	e	enum:VkZero::Format
R8G8B8A8Sscaled	VkZero/include/types.hpp	/^        R8G8B8A8Sscaled = 40,$/;"	e	enum:VkZero::Format
R8G8B8A8Uint	VkZero/include/VkZero/types.hpp	/^        R8G8B8A8Uint = 41,$/;"	e	enum:VkZero::Format
R8G8B8A8Uint	VkZero/include/types.hpp	/^        R8G8B8A8Uint = 41,$/;"	e	enum:VkZero::Format
R8G8B8A8Unorm	VkZero/include/VkZero/types.hpp	/^        R8G8B8A8Unorm = 37,$/;"	e	enum:VkZero::Format
R8G8B8A8Unorm	VkZero/include/types.hpp	/^        R8G8B8A8Unorm = 37,$/;"	e	enum:VkZero::Format
R8G8B8A8Uscaled	VkZero/include/VkZero/types.hpp	/^        R8G8B8A8Uscaled = 39,$/;"	e	enum:VkZero::Format
R8G8B8A8Uscaled	VkZero/include/types.hpp	/^        R8G8B8A8Uscaled = 39,$/;"	e	enum:VkZero::Format
R8G8B8Sint	VkZero/include/VkZero/types.hpp	/^        R8G8B8Sint = 28,$/;"	e	enum:VkZero::Format
R8G8B8Sint	VkZero/include/types.hpp	/^        R8G8B8Sint = 28,$/;"	e	enum:VkZero::Format
R8G8B8Snorm	VkZero/include/VkZero/types.hpp	/^        R8G8B8Snorm = 24,$/;"	e	enum:VkZero::Format
R8G8B8Snorm	VkZero/include/types.hpp	/^        R8G8B8Snorm = 24,$/;"	e	enum:VkZero::Format
R8G8B8Srgb	VkZero/include/VkZero/types.hpp	/^        R8G8B8Srgb = 29,$/;"	e	enum:VkZero::Format
R8G8B8Srgb	VkZero/include/types.hpp	/^        R8G8B8Srgb = 29,$/;"	e	enum:VkZero::Format
R8G8B8Sscaled	VkZero/include/VkZero/types.hpp	/^        R8G8B8Sscaled = 26,$/;"	e	enum:VkZero::Format
R8G8B8Sscaled	VkZero/include/types.hpp	/^        R8G8B8Sscaled = 26,$/;"	e	enum:VkZero::Format
R8G8B8Uint	VkZero/include/VkZero/types.hpp	/^        R8G8B8Uint = 27,$/;"	e	enum:VkZero::Format
R8G8B8Uint	VkZero/include/types.hpp	/^        R8G8B8Uint = 27,$/;"	e	enum:VkZero::Format
R8G8B8Unorm	VkZero/include/VkZero/types.hpp	/^        R8G8B8Unorm = 23,$/;"	e	enum:VkZero::Format
R8G8B8Unorm	VkZero/include/types.hpp	/^        R8G8B8Unorm = 23,$/;"	e	enum:VkZero::Format
R8G8B8Uscaled	VkZero/include/VkZero/types.hpp	/^        R8G8B8Uscaled = 25,$/;"	e	enum:VkZero::Format
R8G8B8Uscaled	VkZero/include/types.hpp	/^        R8G8B8Uscaled = 25,$/;"	e	enum:VkZero::Format
R8G8Sint	VkZero/include/VkZero/types.hpp	/^        R8G8Sint = 21,$/;"	e	enum:VkZero::Format
R8G8Sint	VkZero/include/types.hpp	/^        R8G8Sint = 21,$/;"	e	enum:VkZero::Format
R8G8Snorm	VkZero/include/VkZero/types.hpp	/^        R8G8Snorm = 17,$/;"	e	enum:VkZero::Format
R8G8Snorm	VkZero/include/types.hpp	/^        R8G8Snorm = 17,$/;"	e	enum:VkZero::Format
R8G8Srgb	VkZero/include/VkZero/types.hpp	/^        R8G8Srgb = 22,$/;"	e	enum:VkZero::Format
R8G8Srgb	VkZero/include/types.hpp	/^        R8G8Srgb = 22,$/;"	e	enum:VkZero::Format
R8G8Sscaled	VkZero/include/VkZero/types.hpp	/^        R8G8Sscaled = 19,$/;"	e	enum:VkZero::Format
R8G8Sscaled	VkZero/include/types.hpp	/^        R8G8Sscaled = 19,$/;"	e	enum:VkZero::Format
R8G8Uint	VkZero/include/VkZero/types.hpp	/^        R8G8Uint = 20,$/;"	e	enum:VkZero::Format
R8G8Uint	VkZero/include/types.hpp	/^        R8G8Uint = 20,$/;"	e	enum:VkZero::Format
R8G8Unorm	VkZero/include/VkZero/types.hpp	/^        R8G8Unorm = 16,$/;"	e	enum:VkZero::Format
R8G8Unorm	VkZero/include/types.hpp	/^        R8G8Unorm = 16,$/;"	e	enum:VkZero::Format
R8G8Uscaled	VkZero/include/VkZero/types.hpp	/^        R8G8Uscaled = 18,$/;"	e	enum:VkZero::Format
R8G8Uscaled	VkZero/include/types.hpp	/^        R8G8Uscaled = 18,$/;"	e	enum:VkZero::Format
R8Sint	VkZero/include/VkZero/types.hpp	/^        R8Sint = 14,$/;"	e	enum:VkZero::Format
R8Sint	VkZero/include/types.hpp	/^        R8Sint = 14,$/;"	e	enum:VkZero::Format
R8Snorm	VkZero/include/VkZero/types.hpp	/^        R8Snorm = 10,$/;"	e	enum:VkZero::Format
R8Snorm	VkZero/include/types.hpp	/^        R8Snorm = 10,$/;"	e	enum:VkZero::Format
R8Srgb	VkZero/include/VkZero/types.hpp	/^        R8Srgb = 15,$/;"	e	enum:VkZero::Format
R8Srgb	VkZero/include/types.hpp	/^        R8Srgb = 15,$/;"	e	enum:VkZero::Format
R8Sscaled	VkZero/include/VkZero/types.hpp	/^        R8Sscaled = 12,$/;"	e	enum:VkZero::Format
R8Sscaled	VkZero/include/types.hpp	/^        R8Sscaled = 12,$/;"	e	enum:VkZero::Format
R8Uint	VkZero/include/VkZero/types.hpp	/^        R8Uint = 13,$/;"	e	enum:VkZero::Format
R8Uint	VkZero/include/types.hpp	/^        R8Uint = 13,$/;"	e	enum:VkZero::Format
R8Unorm	VkZero/include/VkZero/types.hpp	/^        R8Unorm = 9,$/;"	e	enum:VkZero::Format
R8Unorm	VkZero/include/types.hpp	/^        R8Unorm = 9,$/;"	e	enum:VkZero::Format
R8Uscaled	VkZero/include/VkZero/types.hpp	/^        R8Uscaled = 11,$/;"	e	enum:VkZero::Format
R8Uscaled	VkZero/include/types.hpp	/^        R8Uscaled = 11,$/;"	e	enum:VkZero::Format
RAYTRACE_HEIGHT	VkZero/include/VkZero/render_pass.hpp	/^#define RAYTRACE_HEIGHT /;"	d
RAYTRACE_HEIGHT	VkZero/include/render_pass.hpp	/^#define RAYTRACE_HEIGHT /;"	d
RAYTRACE_HEIGHT	include/VkZeroObjects.hpp	/^#define RAYTRACE_HEIGHT /;"	d
RAYTRACE_HEIGHT	src/VkZeroObjects.cpp	/^#define RAYTRACE_HEIGHT /;"	d	file:
RAYTRACE_WIDTH	VkZero/include/VkZero/render_pass.hpp	/^#define RAYTRACE_WIDTH /;"	d
RAYTRACE_WIDTH	VkZero/include/render_pass.hpp	/^#define RAYTRACE_WIDTH /;"	d
RAYTRACE_WIDTH	include/VkZeroObjects.hpp	/^#define RAYTRACE_WIDTH /;"	d
RAYTRACE_WIDTH	src/VkZeroObjects.cpp	/^#define RAYTRACE_WIDTH /;"	d	file:
RandVecs2D	include/FastNoiseLite.hpp	/^    static const T RandVecs2D[];$/;"	m	struct:FastNoiseLite::Lookup	typeref:typename:const T[]
RandVecs2D	include/FastNoiseLite.hpp	/^const T FastNoiseLite::Lookup<T>::RandVecs2D[] = {$/;"	m	class:FastNoiseLite::Lookup<T>	typeref:typename:const T[]
RandVecs3D	include/FastNoiseLite.hpp	/^    static const T RandVecs3D[];$/;"	m	struct:FastNoiseLite::Lookup	typeref:typename:const T[]
RandVecs3D	include/FastNoiseLite.hpp	/^const T FastNoiseLite::Lookup<T>::RandVecs3D[] = {$/;"	m	class:FastNoiseLite::Lookup<T>	typeref:typename:const T[]
RaytracingPipeline	VkZero/include/VkZero/raytracing_pipeline.hpp	/^  RaytracingPipeline(uint32_t width, uint32_t height, ShaderGroup &shaderGroup,$/;"	f	class:VkZero::RaytracingPipeline
RaytracingPipeline	VkZero/include/VkZero/raytracing_pipeline.hpp	/^class RaytracingPipeline : public RaytracingPipelineBase {$/;"	c	namespace:VkZero
RaytracingPipeline	VkZero/include/raytracing_pipeline.hpp	/^  RaytracingPipeline(uint32_t width, uint32_t height, ShaderGroup &shaderGroup,$/;"	f	class:VkZero::RaytracingPipeline
RaytracingPipeline	VkZero/include/raytracing_pipeline.hpp	/^class RaytracingPipeline : public RaytracingPipelineBase {$/;"	c	namespace:VkZero
RaytracingPipeline	include/VkZeroObjects.hpp	/^  using RaytracingPipeline = VkZero::RaytracingPipeline<RaytracingShaderGroup, RaytracingResourc/;"	t	class:VkZeroObjects	typeref:typename:VkZero::RaytracingPipeline<RaytracingShaderGroup,RaytracingResourceSet>
RaytracingPipelineBase	VkZero/include/VkZero/raytracing_pipeline.hpp	/^struct RaytracingPipelineBase {$/;"	s	namespace:VkZero
RaytracingPipelineBase	VkZero/include/raytracing_pipeline.hpp	/^struct RaytracingPipelineBase {$/;"	s	namespace:VkZero
RaytracingPipelineBase	VkZero/src/raytracing_pipeline.cpp	/^RaytracingPipelineBase::RaytracingPipelineBase(uint32_t width, uint32_t height,$/;"	f	class:RaytracingPipelineBase
RaytracingPipelineImpl_T	VkZero/include/VkZero/Internal/raytracing_pipeline_internal.hpp	/^struct RaytracingPipelineImpl_T {$/;"	s	namespace:VkZero
RaytracingPipelineImpl_T	VkZero/src/raytracing_pipeline.cpp	/^RaytracingPipelineImpl_T::RaytracingPipelineImpl_T(uint32_t width, uint32_t height,$/;"	f	class:RaytracingPipelineImpl_T
RaytracingPushConstant	include/shaders.hpp	/^struct RaytracingPushConstant {$/;"	s
RaytracingPushConstantData	include/VkZeroObjects.hpp	/^  using RaytracingPushConstantData = VkZero::PushConstantData<RaytracingPushConstant>;$/;"	t	class:VkZeroObjects	typeref:typename:VkZero::PushConstantData<RaytracingPushConstant>
RaytracingPushConstants	include/VkZeroObjects.hpp	/^  using RaytracingPushConstants = VkZero::ShaderPushConstants<VkZero::PushConstant<RaytracingPus/;"	t	class:VkZeroObjects	typeref:typename:VkZero::ShaderPushConstants<VkZero::PushConstant<RaytracingPushConstant,VkZero::SHADER_RGEN>>
RaytracingRenderPass	VkZero/include/VkZero/render_pass.hpp	/^  RaytracingRenderPass(std::function<void(void*, uint32_t)> before, RaytracingPipelines... pipel/;"	f	class:VkZero::RaytracingRenderPass
RaytracingRenderPass	VkZero/include/VkZero/render_pass.hpp	/^class RaytracingRenderPass : public RaytracingRenderpassBase {$/;"	c	namespace:VkZero
RaytracingRenderPass	VkZero/include/render_pass.hpp	/^  RaytracingRenderPass(std::function<void(void*, uint32_t)> before, RaytracingPipelines... pipel/;"	f	class:VkZero::RaytracingRenderPass
RaytracingRenderPass	VkZero/include/render_pass.hpp	/^class RaytracingRenderPass : public RaytracingRenderpassBase {$/;"	c	namespace:VkZero
RaytracingRenderPassPipeline	VkZero/include/VkZero/render_pass.hpp	/^  RaytracingRenderPassPipeline(Pipeline &pipeline, PushConstant &pushConstants)$/;"	f	struct:VkZero::RaytracingRenderPassPipeline
RaytracingRenderPassPipeline	VkZero/include/VkZero/render_pass.hpp	/^struct RaytracingRenderPassPipeline {$/;"	s	namespace:VkZero
RaytracingRenderPassPipeline	VkZero/include/render_pass.hpp	/^  RaytracingRenderPassPipeline(Pipeline &pipeline, PushConstant &pushConstants)$/;"	f	struct:VkZero::RaytracingRenderPassPipeline
RaytracingRenderPassPipeline	VkZero/include/render_pass.hpp	/^struct RaytracingRenderPassPipeline {$/;"	s	namespace:VkZero
RaytracingRenderPass_t	include/VkZeroObjects.hpp	/^  using RaytracingRenderPass_t = VkZero::RaytracingRenderPass<VkZero::RaytracingRenderPassPipeli/;"	t	class:VkZeroObjects	typeref:typename:VkZero::RaytracingRenderPass<VkZero::RaytracingRenderPassPipeline<RaytracingPushConstantData,RaytracingPipeline>>
RaytracingRenderpassBase	VkZero/include/VkZero/render_pass.hpp	/^struct RaytracingRenderpassBase {$/;"	s	namespace:VkZero
RaytracingRenderpassBase	VkZero/include/render_pass.hpp	/^struct RaytracingRenderpassBase {$/;"	s	namespace:VkZero
RaytracingRenderpassBase	VkZero/src/raytracing_renderpass.cpp	/^RaytracingRenderpassBase::RaytracingRenderpassBase($/;"	f	class:RaytracingRenderpassBase
RaytracingRenderpassImpl_T	VkZero/include/VkZero/Internal/raytracing_renderpass_internal.hpp	/^struct RaytracingRenderpassImpl_T : public RenderpassImpl_T{$/;"	s	namespace:VkZero
RaytracingRenderpassImpl_T	VkZero/src/raytracing_renderpass.cpp	/^RaytracingRenderpassImpl_T::RaytracingRenderpassImpl_T($/;"	f	class:RaytracingRenderpassImpl_T
RaytracingResourceSet	include/VkZeroObjects.hpp	/^  using RaytracingResourceSet = VkZero::ShaderResourceSet<$/;"	t	class:VkZeroObjects
RaytracingShaderGroup	include/VkZeroObjects.hpp	/^  using RaytracingShaderGroup = VkZero::ShaderGroup<RaytracingPushConstants, main_rmiss, main_rg/;"	t	class:VkZeroObjects	typeref:typename:VkZero::ShaderGroup<RaytracingPushConstants,main_rmiss,main_rgen>
ReadOnlyOptimal	VkZero/include/VkZero/types.hpp	/^        ReadOnlyOptimal = 1000314000,$/;"	e	enum:VkZero::ImageLayout
ReadOnlyOptimal	VkZero/include/types.hpp	/^        ReadOnlyOptimal = 1000314000,$/;"	e	enum:VkZero::ImageLayout
RenderPassDetails	VkZero/include/VkZero/render_pass.hpp	/^namespace RenderPassDetails {$/;"	n	namespace:VkZero
RenderPassDetails	VkZero/include/render_pass.hpp	/^namespace RenderPassDetails {$/;"	n	namespace:VkZero
RenderPassResource	VkZero/include/VkZero/render_pass.hpp	/^  RenderPassResource(AttachmentImage *image)$/;"	f	class:VkZero::RenderPassResource
RenderPassResource	VkZero/include/VkZero/render_pass.hpp	/^class RenderPassResource : public RenderPassResourceBase {$/;"	c	namespace:VkZero
RenderPassResource	VkZero/include/render_pass.hpp	/^  RenderPassResource(AttachmentImage *image)$/;"	f	class:VkZero::RenderPassResource
RenderPassResource	VkZero/include/render_pass.hpp	/^class RenderPassResource : public RenderPassResourceBase {$/;"	c	namespace:VkZero
RenderPassResourceBase	VkZero/include/VkZero/render_pass.hpp	/^struct RenderPassResourceBase {$/;"	s	namespace:VkZero
RenderPassResourceBase	VkZero/include/render_pass.hpp	/^struct RenderPassResourceBase {$/;"	s	namespace:VkZero
RenderPassResourceBase	VkZero/src/graphics_renderpass.cpp	/^RenderPassResourceBase::RenderPassResourceBase(const char *name,$/;"	f	class:RenderPassResourceBase
RenderPassResourceImpl_T	VkZero/include/VkZero/Internal/graphics_renderpass_internal.hpp	/^  RenderPassResourceImpl_T(const char *name, AttachmentImage *image)$/;"	f	struct:VkZero::RenderPassResourceImpl_T
RenderPassResourceImpl_T	VkZero/include/VkZero/Internal/graphics_renderpass_internal.hpp	/^struct RenderPassResourceImpl_T {$/;"	s	namespace:VkZero
RenderPassResourceSet	VkZero/include/VkZero/render_pass.hpp	/^  RenderPassResourceSet(Resources... resources)$/;"	f	class:VkZero::RenderPassResourceSet
RenderPassResourceSet	VkZero/include/VkZero/render_pass.hpp	/^class RenderPassResourceSet : public RenderPassResourceSetBase {$/;"	c	namespace:VkZero
RenderPassResourceSet	VkZero/include/render_pass.hpp	/^  RenderPassResourceSet(Resources... resources)$/;"	f	class:VkZero::RenderPassResourceSet
RenderPassResourceSet	VkZero/include/render_pass.hpp	/^class RenderPassResourceSet : public RenderPassResourceSetBase {$/;"	c	namespace:VkZero
RenderPassResourceSetBase	VkZero/include/VkZero/render_pass.hpp	/^struct RenderPassResourceSetBase {$/;"	s	namespace:VkZero
RenderPassResourceSetBase	VkZero/include/render_pass.hpp	/^struct RenderPassResourceSetBase {$/;"	s	namespace:VkZero
RenderPassResourceSetBase	VkZero/src/graphics_renderpass.cpp	/^RenderPassResourceSetBase::RenderPassResourceSetBase($/;"	f	class:RenderPassResourceSetBase
RenderPassResourceSetDetails	VkZero/include/VkZero/render_pass.hpp	/^namespace RenderPassResourceSetDetails {$/;"	n	namespace:VkZero
RenderPassResourceSetDetails	VkZero/include/render_pass.hpp	/^namespace RenderPassResourceSetDetails {$/;"	n	namespace:VkZero
RenderPassResourceSetImpl_T	VkZero/include/VkZero/Internal/graphics_renderpass_internal.hpp	/^  RenderPassResourceSetImpl_T($/;"	f	struct:VkZero::RenderPassResourceSetImpl_T
RenderPassResourceSetImpl_T	VkZero/include/VkZero/Internal/graphics_renderpass_internal.hpp	/^struct RenderPassResourceSetImpl_T {$/;"	s	namespace:VkZero
RenderingLocalRead	VkZero/include/VkZero/types.hpp	/^        RenderingLocalRead = 1000232000,$/;"	e	enum:VkZero::ImageLayout
RenderingLocalRead	VkZero/include/types.hpp	/^        RenderingLocalRead = 1000232000,$/;"	e	enum:VkZero::ImageLayout
RenderpassImpl_T	VkZero/include/VkZero/Internal/renderpass_internal.hpp	/^struct RenderpassImpl_T$/;"	s	namespace:VkZero
ResourceBinding	VkZero/include/VkZero/binding.hpp	/^  ResourceBinding(Resource *info)$/;"	f	struct:VkZero::ResourceBinding
ResourceBinding	VkZero/include/VkZero/binding.hpp	/^struct ResourceBinding : public ResourceBindingBase {$/;"	s	namespace:VkZero
ResourceBinding	VkZero/include/binding.hpp	/^  ResourceBinding(Resource *info)$/;"	f	struct:VkZero::ResourceBinding
ResourceBinding	VkZero/include/binding.hpp	/^struct ResourceBinding : public ResourceBindingBase {$/;"	s	namespace:VkZero
ResourceBindingBase	VkZero/include/VkZero/binding.hpp	/^struct ResourceBindingBase {$/;"	s	namespace:VkZero
ResourceBindingBase	VkZero/include/binding.hpp	/^struct ResourceBindingBase {$/;"	s	namespace:VkZero
ResourceBindingBase	VkZero/src/binding.cpp	/^ResourceBindingBase::ResourceBindingBase(std::vector<BindResource *> resources,$/;"	f	class:ResourceBindingBase
ResourceBindingImpl_T	VkZero/include/VkZero/Internal/binding_internal.hpp	/^struct ResourceBindingImpl_T {$/;"	s	namespace:VkZero
ResourceBindingImpl_T	VkZero/src/binding.cpp	/^ResourceBindingImpl_T::ResourceBindingImpl_T(std::vector<BindResource*> resources,$/;"	f	class:ResourceBindingImpl_T
ResourceManager	VkZero/include/VkZero/Internal/resource_manager_internal.hpp	/^  class ResourceManager {$/;"	c	namespace:VkZero
RotationType3D	include/FastNoiseLite.hpp	/^  enum RotationType3D {$/;"	g	class:FastNoiseLite
RotationType3D_ImproveXYPlanes	include/FastNoiseLite.hpp	/^    RotationType3D_ImproveXYPlanes,$/;"	e	enum:FastNoiseLite::RotationType3D
RotationType3D_ImproveXZPlanes	include/FastNoiseLite.hpp	/^    RotationType3D_ImproveXZPlanes$/;"	e	enum:FastNoiseLite::RotationType3D
RotationType3D_None	include/FastNoiseLite.hpp	/^    RotationType3D_None,$/;"	e	enum:FastNoiseLite::RotationType3D
Running	README.md	/^## Running$/;"	s	chapter:VoxelEngine
S8Uint	VkZero/include/VkZero/types.hpp	/^        S8Uint = 127,$/;"	e	enum:VkZero::Format
S8Uint	VkZero/include/types.hpp	/^        S8Uint = 127,$/;"	e	enum:VkZero::Format
SHADER_FRAGMENT	VkZero/include/VkZero/shader_types.hpp	/^        SHADER_FRAGMENT = 0x00000010,$/;"	e	enum:VkZero::ShaderType
SHADER_FRAGMENT	VkZero/include/shader_types.hpp	/^        SHADER_FRAGMENT = 0x00000010,$/;"	e	enum:VkZero::ShaderType
SHADER_GEOMETRY	VkZero/include/VkZero/shader_types.hpp	/^        SHADER_GEOMETRY = 0x00000008,$/;"	e	enum:VkZero::ShaderType
SHADER_GEOMETRY	VkZero/include/shader_types.hpp	/^        SHADER_GEOMETRY = 0x00000008,$/;"	e	enum:VkZero::ShaderType
SHADER_RGEN	VkZero/include/VkZero/shader_types.hpp	/^        SHADER_RGEN = 0x00000100,$/;"	e	enum:VkZero::ShaderType
SHADER_RGEN	VkZero/include/shader_types.hpp	/^        SHADER_RGEN = 0x00000100,$/;"	e	enum:VkZero::ShaderType
SHADER_RMISS	VkZero/include/VkZero/shader_types.hpp	/^        SHADER_RMISS = 0x00000800,$/;"	e	enum:VkZero::ShaderType
SHADER_RMISS	VkZero/include/shader_types.hpp	/^        SHADER_RMISS = 0x00000800,$/;"	e	enum:VkZero::ShaderType
SHADER_VERTEX	VkZero/include/VkZero/shader_types.hpp	/^        SHADER_VERTEX = 0x00000001,$/;"	e	enum:VkZero::ShaderType
SHADER_VERTEX	VkZero/include/shader_types.hpp	/^        SHADER_VERTEX = 0x00000001,$/;"	e	enum:VkZero::ShaderType
SampleWeightImageQCOM	VkZero/include/VkZero/types.hpp	/^        SampleWeightImageQCOM = 1000440000,$/;"	e	enum:VkZero::DescriptorType
SampleWeightImageQCOM	VkZero/include/types.hpp	/^        SampleWeightImageQCOM = 1000440000,$/;"	e	enum:VkZero::DescriptorType
SampledImage	VkZero/include/VkZero/types.hpp	/^        SampledImage = 2,$/;"	e	enum:VkZero::DescriptorType
SampledImage	VkZero/include/types.hpp	/^        SampledImage = 2,$/;"	e	enum:VkZero::DescriptorType
Sampler	VkZero/include/VkZero/types.hpp	/^        Sampler = 0,$/;"	e	enum:VkZero::DescriptorType
Sampler	VkZero/include/types.hpp	/^        Sampler = 0,$/;"	e	enum:VkZero::DescriptorType
SetCellularDistanceFunction	include/FastNoiseLite.hpp	/^  void SetCellularDistanceFunction($/;"	f	class:FastNoiseLite	typeref:typename:void
SetCellularJitter	include/FastNoiseLite.hpp	/^  void SetCellularJitter(float cellularJitter) {$/;"	f	class:FastNoiseLite	typeref:typename:void
SetCellularReturnType	include/FastNoiseLite.hpp	/^  void SetCellularReturnType(CellularReturnType cellularReturnType) {$/;"	f	class:FastNoiseLite	typeref:typename:void
SetDomainWarpAmp	include/FastNoiseLite.hpp	/^  void SetDomainWarpAmp(float domainWarpAmp) { mDomainWarpAmp = domainWarpAmp; }$/;"	f	class:FastNoiseLite	typeref:typename:void
SetDomainWarpType	include/FastNoiseLite.hpp	/^  void SetDomainWarpType(DomainWarpType domainWarpType) {$/;"	f	class:FastNoiseLite	typeref:typename:void
SetFractalGain	include/FastNoiseLite.hpp	/^  void SetFractalGain(float gain) {$/;"	f	class:FastNoiseLite	typeref:typename:void
SetFractalLacunarity	include/FastNoiseLite.hpp	/^  void SetFractalLacunarity(float lacunarity) { mLacunarity = lacunarity; }$/;"	f	class:FastNoiseLite	typeref:typename:void
SetFractalOctaves	include/FastNoiseLite.hpp	/^  void SetFractalOctaves(int octaves) {$/;"	f	class:FastNoiseLite	typeref:typename:void
SetFractalPingPongStrength	include/FastNoiseLite.hpp	/^  void SetFractalPingPongStrength(float pingPongStrength) {$/;"	f	class:FastNoiseLite	typeref:typename:void
SetFractalType	include/FastNoiseLite.hpp	/^  void SetFractalType(FractalType fractalType) { mFractalType = fractalType; }$/;"	f	class:FastNoiseLite	typeref:typename:void
SetFractalWeightedStrength	include/FastNoiseLite.hpp	/^  void SetFractalWeightedStrength(float weightedStrength) {$/;"	f	class:FastNoiseLite	typeref:typename:void
SetFrequency	include/FastNoiseLite.hpp	/^  void SetFrequency(float frequency) { mFrequency = frequency; }$/;"	f	class:FastNoiseLite	typeref:typename:void
SetNoiseType	include/FastNoiseLite.hpp	/^  void SetNoiseType(NoiseType noiseType) {$/;"	f	class:FastNoiseLite	typeref:typename:void
SetRotationType3D	include/FastNoiseLite.hpp	/^  void SetRotationType3D(RotationType3D rotationType3D) {$/;"	f	class:FastNoiseLite	typeref:typename:void
SetSeed	include/FastNoiseLite.hpp	/^  void SetSeed(int seed) { mSeed = seed; }$/;"	f	class:FastNoiseLite	typeref:typename:void
Shader	VkZero/include/VkZero/shader.hpp	/^        Shader() : ShaderBase(std::string{path.value}, (uint32_t)Type) {}$/;"	f	class:VkZero::Shader
Shader	VkZero/include/VkZero/shader.hpp	/^    class Shader : public ShaderBase{$/;"	c	namespace:VkZero
Shader	VkZero/include/shader.hpp	/^        Shader() : ShaderBase(std::string{path.value}, (uint32_t)Type) {}$/;"	f	class:VkZero::Shader
Shader	VkZero/include/shader.hpp	/^    class Shader : public ShaderBase{$/;"	c	namespace:VkZero
ShaderAttachments	VkZero/include/VkZero/shader_bindings.hpp	/^template <typename... Attachments> struct ShaderAttachments {$/;"	s	namespace:VkZero
ShaderAttachments	VkZero/include/shader_bindings.hpp	/^template <typename... Attachments> struct ShaderAttachments {$/;"	s	namespace:VkZero
ShaderBase	VkZero/include/VkZero/shader.hpp	/^    class ShaderBase$/;"	c	namespace:VkZero
ShaderBase	VkZero/include/shader.hpp	/^    class ShaderBase$/;"	c	namespace:VkZero
ShaderBase	VkZero/src/shader.cpp	/^ShaderBase::ShaderBase(std::string path, uint32_t type)$/;"	f	class:ShaderBase
ShaderBinding	VkZero/include/VkZero/binding.hpp	/^struct ShaderBinding {$/;"	s	namespace:VkZero
ShaderBinding	VkZero/include/binding.hpp	/^struct ShaderBinding {$/;"	s	namespace:VkZero
ShaderBindings	VkZero/include/VkZero/shader_bindings.hpp	/^template <typename... Bindings> struct ShaderBindings {$/;"	s	namespace:VkZero
ShaderBindings	VkZero/include/shader_bindings.hpp	/^template <typename... Bindings> struct ShaderBindings {$/;"	s	namespace:VkZero
ShaderDetails	VkZero/include/VkZero/shader.hpp	/^    namespace ShaderDetails$/;"	n	namespace:VkZero
ShaderDetails	VkZero/include/shader.hpp	/^    namespace ShaderDetails$/;"	n	namespace:VkZero
ShaderGroup	VkZero/include/VkZero/shader_group.hpp	/^    ShaderGroup(ShaderPushConstants &pushConstants, Shaders &...shaders)$/;"	f	class:VkZero::ShaderGroup
ShaderGroup	VkZero/include/VkZero/shader_group.hpp	/^  class ShaderGroup : public ShaderGroupBase {$/;"	c	namespace:VkZero
ShaderGroup	VkZero/include/shader_group.hpp	/^    ShaderGroup(ShaderPushConstants &pushConstants, Shaders &...shaders)$/;"	f	class:VkZero::ShaderGroup
ShaderGroup	VkZero/include/shader_group.hpp	/^  class ShaderGroup : public ShaderGroupBase {$/;"	c	namespace:VkZero
ShaderGroupBase	VkZero/include/VkZero/shader_group.hpp	/^struct ShaderGroupBase$/;"	s	namespace:VkZero
ShaderGroupBase	VkZero/include/shader_group.hpp	/^struct ShaderGroupBase$/;"	s	namespace:VkZero
ShaderGroupBase	VkZero/src/shader_group.cpp	/^ShaderGroupBase::ShaderGroupBase($/;"	f	class:ShaderGroupBase
ShaderGroupDetails	VkZero/include/VkZero/shader_group.hpp	/^namespace ShaderGroupDetails {$/;"	n	namespace:VkZero
ShaderGroupDetails	VkZero/include/shader_group.hpp	/^namespace ShaderGroupDetails {$/;"	n	namespace:VkZero
ShaderGroupImpl	VkZero/include/VkZero/Internal/shader_group_internal.hpp	/^struct ShaderGroupImpl {$/;"	s	namespace:VkZero
ShaderGroupImpl	VkZero/src/shader_group.cpp	/^ShaderGroupImpl::ShaderGroupImpl(std::vector<ShaderImpl_T *> shaders,$/;"	f	class:ShaderGroupImpl
ShaderImpl_T	VkZero/include/VkZero/Internal/shader_internal.hpp	/^    struct ShaderImpl_T$/;"	s	namespace:VkZero
ShaderImpl_T	VkZero/src/shader.cpp	/^ShaderImpl_T::ShaderImpl_T(std::string path, VkShaderStageFlagBits type)$/;"	f	class:ShaderImpl_T
ShaderLibrary	VkZero/include/VkZero/shader_library.hpp	/^        ShaderLibrary() : ShaderLibraryBase([](){$/;"	f	class:VkZero::ShaderLibrary
ShaderLibrary	VkZero/include/VkZero/shader_library.hpp	/^    class ShaderLibrary : public ShaderLibraryBase {$/;"	c	namespace:VkZero
ShaderLibrary	VkZero/include/shader_library.hpp	/^        ShaderLibrary() : ShaderLibraryBase([](){$/;"	f	class:VkZero::ShaderLibrary
ShaderLibrary	VkZero/include/shader_library.hpp	/^    class ShaderLibrary : public ShaderLibraryBase {$/;"	c	namespace:VkZero
ShaderLibraryBase	VkZero/include/VkZero/shader_library.hpp	/^    struct ShaderLibraryBase$/;"	s	namespace:VkZero
ShaderLibraryBase	VkZero/include/shader_library.hpp	/^    struct ShaderLibraryBase$/;"	s	namespace:VkZero
ShaderLibraryBase	VkZero/src/shader_library.cpp	/^ShaderLibraryBase::ShaderLibraryBase(std::vector<DescriptorType> types)$/;"	f	class:ShaderLibraryBase
ShaderPushConstant	VkZero/include/VkZero/shader_bindings.hpp	/^template <typename PushConstantType> struct ShaderPushConstant {$/;"	s	namespace:VkZero
ShaderPushConstant	VkZero/include/shader_bindings.hpp	/^template <typename PushConstantType> struct ShaderPushConstant {$/;"	s	namespace:VkZero
ShaderPushConstantData	VkZero/include/VkZero/shader_group.hpp	/^  ShaderPushConstantData(uint32_t size, uint32_t stages) : structureSize(size), shaderStages(sta/;"	f	struct:VkZero::ShaderPushConstantData
ShaderPushConstantData	VkZero/include/VkZero/shader_group.hpp	/^struct ShaderPushConstantData {$/;"	s	namespace:VkZero
ShaderPushConstantData	VkZero/include/shader_group.hpp	/^  ShaderPushConstantData(uint32_t size, uint32_t stages) : structureSize(size), shaderStages(sta/;"	f	struct:VkZero::ShaderPushConstantData
ShaderPushConstantData	VkZero/include/shader_group.hpp	/^struct ShaderPushConstantData {$/;"	s	namespace:VkZero
ShaderPushConstants	VkZero/include/VkZero/shader_group.hpp	/^  ShaderPushConstants()$/;"	f	class:VkZero::ShaderPushConstants
ShaderPushConstants	VkZero/include/VkZero/shader_group.hpp	/^class ShaderPushConstants : public ShaderPushConstantsBase {$/;"	c	namespace:VkZero
ShaderPushConstants	VkZero/include/shader_group.hpp	/^  ShaderPushConstants()$/;"	f	class:VkZero::ShaderPushConstants
ShaderPushConstants	VkZero/include/shader_group.hpp	/^class ShaderPushConstants : public ShaderPushConstantsBase {$/;"	c	namespace:VkZero
ShaderPushConstantsBase	VkZero/include/VkZero/shader_group.hpp	/^struct ShaderPushConstantsBase {$/;"	s	namespace:VkZero
ShaderPushConstantsBase	VkZero/include/shader_group.hpp	/^struct ShaderPushConstantsBase {$/;"	s	namespace:VkZero
ShaderPushConstantsBase	VkZero/src/shader_group.cpp	/^ShaderPushConstantsBase::ShaderPushConstantsBase($/;"	f	class:ShaderPushConstantsBase
ShaderPushConstantsImpl_T	VkZero/include/VkZero/Internal/shader_group_internal.hpp	/^struct ShaderPushConstantsImpl_T$/;"	s	namespace:VkZero
ShaderPushConstantsImpl_T	VkZero/src/shader_group.cpp	/^ShaderPushConstantsImpl_T::ShaderPushConstantsImpl_T($/;"	f	class:ShaderPushConstantsImpl_T
ShaderReadOnlyOptimal	VkZero/include/VkZero/types.hpp	/^        ShaderReadOnlyOptimal = 5,$/;"	e	enum:VkZero::ImageLayout
ShaderReadOnlyOptimal	VkZero/include/types.hpp	/^        ShaderReadOnlyOptimal = 5,$/;"	e	enum:VkZero::ImageLayout
ShaderResourceSet	VkZero/include/VkZero/shader_resource_set.hpp	/^  ShaderResourceSet(Bindings &&...bindings)$/;"	f	class:VkZero::ShaderResourceSet
ShaderResourceSet	VkZero/include/VkZero/shader_resource_set.hpp	/^class ShaderResourceSet : public ShaderResourceSetBase {$/;"	c	namespace:VkZero
ShaderResourceSet	VkZero/include/shader_resource_set.hpp	/^  ShaderResourceSet(Bindings &&...bindings)$/;"	f	class:VkZero::ShaderResourceSet
ShaderResourceSet	VkZero/include/shader_resource_set.hpp	/^class ShaderResourceSet : public ShaderResourceSetBase {$/;"	c	namespace:VkZero
ShaderResourceSetBase	VkZero/include/VkZero/shader_resource_set.hpp	/^struct ShaderResourceSetBase {$/;"	s	namespace:VkZero
ShaderResourceSetBase	VkZero/include/shader_resource_set.hpp	/^struct ShaderResourceSetBase {$/;"	s	namespace:VkZero
ShaderResourceSetBase	VkZero/src/shader_resource_set.cpp	/^ShaderResourceSetBase::ShaderResourceSetBase(std::vector<ResourceBindingImpl_T *> bindings) {$/;"	f	class:ShaderResourceSetBase
ShaderResourceSetDetails	VkZero/include/VkZero/shader_resource_set.hpp	/^namespace ShaderResourceSetDetails {$/;"	n	namespace:VkZero
ShaderResourceSetDetails	VkZero/include/shader_resource_set.hpp	/^namespace ShaderResourceSetDetails {$/;"	n	namespace:VkZero
ShaderResourceSetImpl_T	VkZero/include/VkZero/Internal/shader_resource_set_internal.hpp	/^struct ShaderResourceSetImpl_T {$/;"	s	namespace:VkZero
ShaderResourceSetImpl_T	VkZero/src/shader_resource_set.cpp	/^ShaderResourceSetImpl_T::ShaderResourceSetImpl_T($/;"	f	class:ShaderResourceSetImpl_T
ShaderType	VkZero/include/VkZero/shader_types.hpp	/^    enum ShaderType$/;"	g	namespace:VkZero
ShaderType	VkZero/include/shader_types.hpp	/^    enum ShaderType$/;"	g	namespace:VkZero
SharedImage	VkZero/include/VkZero/image.hpp	/^using SharedImage = class MultiImage<1>;$/;"	t	namespace:VkZero	typeref:class:MultiImage<1>
SharedImage	VkZero/include/image.hpp	/^using SharedImage = class MultiImage<1>;$/;"	t	namespace:VkZero	typeref:class:MultiImage<1>
SharedPresent	VkZero/include/VkZero/types.hpp	/^        SharedPresent = 1000111000,$/;"	e	enum:VkZero::ImageLayout
SharedPresent	VkZero/include/types.hpp	/^        SharedPresent = 1000111000,$/;"	e	enum:VkZero::ImageLayout
SingleCellular	include/FastNoiseLite.hpp	/^  float SingleCellular(int seed, FNfloat x, FNfloat y) const {$/;"	f	class:FastNoiseLite	typeref:typename:float
SingleCellular	include/FastNoiseLite.hpp	/^  float SingleCellular(int seed, FNfloat x, FNfloat y, FNfloat z) const {$/;"	f	class:FastNoiseLite	typeref:typename:float
SingleDomainWarpBasicGrid	include/FastNoiseLite.hpp	/^  void SingleDomainWarpBasicGrid(int seed, float warpAmp, float frequency,$/;"	f	class:FastNoiseLite	typeref:typename:void
SingleDomainWarpOpenSimplex2Gradient	include/FastNoiseLite.hpp	/^  void SingleDomainWarpOpenSimplex2Gradient(int seed, float warpAmp,$/;"	f	class:FastNoiseLite	typeref:typename:void
SingleDomainWarpSimplexGradient	include/FastNoiseLite.hpp	/^  void SingleDomainWarpSimplexGradient(int seed, float warpAmp, float frequency,$/;"	f	class:FastNoiseLite	typeref:typename:void
SingleOpenSimplex2	include/FastNoiseLite.hpp	/^  float SingleOpenSimplex2(int seed, FNfloat x, FNfloat y, FNfloat z) const {$/;"	f	class:FastNoiseLite	typeref:typename:float
SingleOpenSimplex2S	include/FastNoiseLite.hpp	/^  float SingleOpenSimplex2S(int seed, FNfloat x, FNfloat y) const {$/;"	f	class:FastNoiseLite	typeref:typename:float
SingleOpenSimplex2S	include/FastNoiseLite.hpp	/^  float SingleOpenSimplex2S(int seed, FNfloat x, FNfloat y, FNfloat z) const {$/;"	f	class:FastNoiseLite	typeref:typename:float
SinglePerlin	include/FastNoiseLite.hpp	/^  float SinglePerlin(int seed, FNfloat x, FNfloat y) const {$/;"	f	class:FastNoiseLite	typeref:typename:float
SinglePerlin	include/FastNoiseLite.hpp	/^  float SinglePerlin(int seed, FNfloat x, FNfloat y, FNfloat z) const {$/;"	f	class:FastNoiseLite	typeref:typename:float
SingleSimplex	include/FastNoiseLite.hpp	/^  float SingleSimplex(int seed, FNfloat x, FNfloat y) const {$/;"	f	class:FastNoiseLite	typeref:typename:float
SingleValue	include/FastNoiseLite.hpp	/^  float SingleValue(int seed, FNfloat x, FNfloat y) const {$/;"	f	class:FastNoiseLite	typeref:typename:float
SingleValue	include/FastNoiseLite.hpp	/^  float SingleValue(int seed, FNfloat x, FNfloat y, FNfloat z) const {$/;"	f	class:FastNoiseLite	typeref:typename:float
SingleValueCubic	include/FastNoiseLite.hpp	/^  float SingleValueCubic(int seed, FNfloat x, FNfloat y) const {$/;"	f	class:FastNoiseLite	typeref:typename:float
SingleValueCubic	include/FastNoiseLite.hpp	/^  float SingleValueCubic(int seed, FNfloat x, FNfloat y, FNfloat z) const {$/;"	f	class:FastNoiseLite	typeref:typename:float
StagedAttachmentImage	VkZero/include/VkZero/image.hpp	/^using StagedAttachmentImage = class MultiStagedImage<3>;$/;"	t	namespace:VkZero	typeref:class:MultiStagedImage<3>
StagedAttachmentImage	VkZero/include/image.hpp	/^using StagedAttachmentImage = class MultiStagedImage<3>;$/;"	t	namespace:VkZero	typeref:class:MultiStagedImage<3>
StagedSharedImage	VkZero/include/VkZero/image.hpp	/^using StagedSharedImage = class MultiStagedImage<1>;$/;"	t	namespace:VkZero	typeref:class:MultiStagedImage<1>
StagedSharedImage	VkZero/include/image.hpp	/^using StagedSharedImage = class MultiStagedImage<1>;$/;"	t	namespace:VkZero	typeref:class:MultiStagedImage<1>
StagedSwapImage	VkZero/include/VkZero/image.hpp	/^using StagedSwapImage = class MultiStagedImage<2>;$/;"	t	namespace:VkZero	typeref:class:MultiStagedImage<2>
StagedSwapImage	VkZero/include/image.hpp	/^using StagedSwapImage = class MultiStagedImage<2>;$/;"	t	namespace:VkZero	typeref:class:MultiStagedImage<2>
StagingData_T	VkZero/include/VkZero/Internal/image_internal.hpp	/^struct StagingData_T {$/;"	s	namespace:VkZero
StencilAttachmentOptimal	VkZero/include/VkZero/types.hpp	/^        StencilAttachmentOptimal = 1000241002,$/;"	e	enum:VkZero::ImageLayout
StencilAttachmentOptimal	VkZero/include/types.hpp	/^        StencilAttachmentOptimal = 1000241002,$/;"	e	enum:VkZero::ImageLayout
StencilReadOnlyOptimal	VkZero/include/VkZero/types.hpp	/^        StencilReadOnlyOptimal = 1000241003,$/;"	e	enum:VkZero::ImageLayout
StencilReadOnlyOptimal	VkZero/include/types.hpp	/^        StencilReadOnlyOptimal = 1000241003,$/;"	e	enum:VkZero::ImageLayout
StorageBuffer	VkZero/include/VkZero/types.hpp	/^        StorageBuffer = 7,$/;"	e	enum:VkZero::DescriptorType
StorageBuffer	VkZero/include/types.hpp	/^        StorageBuffer = 7,$/;"	e	enum:VkZero::DescriptorType
StorageBufferDynamic	VkZero/include/VkZero/types.hpp	/^        StorageBufferDynamic = 9,$/;"	e	enum:VkZero::DescriptorType
StorageBufferDynamic	VkZero/include/types.hpp	/^        StorageBufferDynamic = 9,$/;"	e	enum:VkZero::DescriptorType
StorageImage	VkZero/include/VkZero/types.hpp	/^        StorageImage = 3,$/;"	e	enum:VkZero::DescriptorType
StorageImage	VkZero/include/types.hpp	/^        StorageImage = 3,$/;"	e	enum:VkZero::DescriptorType
StorageTexelBuffer	VkZero/include/VkZero/types.hpp	/^        StorageTexelBuffer = 5,$/;"	e	enum:VkZero::DescriptorType
StorageTexelBuffer	VkZero/include/types.hpp	/^        StorageTexelBuffer = 5,$/;"	e	enum:VkZero::DescriptorType
Structure	VkZero/include/VkZero/shader_group.hpp	/^  using Structure = T;$/;"	t	struct:VkZero::PushConstant	typeref:typename:T
Structure	VkZero/include/shader_group.hpp	/^  using Structure = T;$/;"	t	struct:VkZero::PushConstant	typeref:typename:T
SwapChainSupportDetails	VkZero/include/VkZero/Internal/window_internal.hpp	/^  struct SwapChainSupportDetails {$/;"	s	struct:VkZero::WindowImpl_T
SwapImage	VkZero/include/VkZero/image.hpp	/^using SwapImage = class MultiImage<2>;$/;"	t	namespace:VkZero	typeref:class:MultiImage<2>
SwapImage	VkZero/include/image.hpp	/^using SwapImage = class MultiImage<2>;$/;"	t	namespace:VkZero	typeref:class:MultiImage<2>
TERRAIN_AREA	src/VoxelWorld.cpp	/^#define TERRAIN_AREA /;"	d	file:
TERRAIN_SCALE	src/VoxelWorld.cpp	/^#define TERRAIN_SCALE /;"	d	file:
Tail	VkZero/include/VkZero/shader_library.hpp	/^        using Tail = typename unique_types<std::tuple<Rest...>>::type;$/;"	t	struct:VkZero::unique_types	typeref:typename:unique_types<std::tuple<Rest...>>::type
Tail	VkZero/include/shader_library.hpp	/^        using Tail = typename unique_types<std::tuple<Rest...>>::type;$/;"	t	struct:VkZero::unique_types	typeref:typename:unique_types<std::tuple<Rest...>>::type
TensorARM	VkZero/include/VkZero/types.hpp	/^        TensorARM = 1000460000,$/;"	e	enum:VkZero::DescriptorType
TensorARM	VkZero/include/types.hpp	/^        TensorARM = 1000460000,$/;"	e	enum:VkZero::DescriptorType
TransferDstOptimal	VkZero/include/VkZero/types.hpp	/^        TransferDstOptimal = 7,$/;"	e	enum:VkZero::ImageLayout
TransferDstOptimal	VkZero/include/types.hpp	/^        TransferDstOptimal = 7,$/;"	e	enum:VkZero::ImageLayout
TransferSrcOptimal	VkZero/include/VkZero/types.hpp	/^        TransferSrcOptimal = 6,$/;"	e	enum:VkZero::ImageLayout
TransferSrcOptimal	VkZero/include/types.hpp	/^        TransferSrcOptimal = 6,$/;"	e	enum:VkZero::ImageLayout
TransformDomainWarpCoordinate	include/FastNoiseLite.hpp	/^  void TransformDomainWarpCoordinate(FNfloat &x, FNfloat &y) const {$/;"	f	class:FastNoiseLite	typeref:typename:void
TransformDomainWarpCoordinate	include/FastNoiseLite.hpp	/^  void TransformDomainWarpCoordinate(FNfloat &x, FNfloat &y, FNfloat &z) const {$/;"	f	class:FastNoiseLite	typeref:typename:void
TransformNoiseCoordinate	include/FastNoiseLite.hpp	/^  void TransformNoiseCoordinate(FNfloat &x, FNfloat &y) const {$/;"	f	class:FastNoiseLite	typeref:typename:void
TransformNoiseCoordinate	include/FastNoiseLite.hpp	/^  void TransformNoiseCoordinate(FNfloat &x, FNfloat &y, FNfloat &z) const {$/;"	f	class:FastNoiseLite	typeref:typename:void
TransformType3D	include/FastNoiseLite.hpp	/^  enum TransformType3D {$/;"	g	class:FastNoiseLite
TransformType3D_DefaultOpenSimplex2	include/FastNoiseLite.hpp	/^    TransformType3D_DefaultOpenSimplex2$/;"	e	enum:FastNoiseLite::TransformType3D
TransformType3D_ImproveXYPlanes	include/FastNoiseLite.hpp	/^    TransformType3D_ImproveXYPlanes,$/;"	e	enum:FastNoiseLite::TransformType3D
TransformType3D_ImproveXZPlanes	include/FastNoiseLite.hpp	/^    TransformType3D_ImproveXZPlanes,$/;"	e	enum:FastNoiseLite::TransformType3D
TransformType3D_None	include/FastNoiseLite.hpp	/^    TransformType3D_None,$/;"	e	enum:FastNoiseLite::TransformType3D
TransformUBO	include/Camera.hpp	/^struct TransformUBO {$/;"	s
Undefined	VkZero/include/VkZero/types.hpp	/^        Undefined = 0,$/;"	e	enum:VkZero::Format
Undefined	VkZero/include/VkZero/types.hpp	/^        Undefined = 0,$/;"	e	enum:VkZero::ImageLayout
Undefined	VkZero/include/types.hpp	/^        Undefined = 0,$/;"	e	enum:VkZero::Format
Undefined	VkZero/include/types.hpp	/^        Undefined = 0,$/;"	e	enum:VkZero::ImageLayout
UniformBuffer	VkZero/include/VkZero/types.hpp	/^        UniformBuffer = 6,$/;"	e	enum:VkZero::DescriptorType
UniformBuffer	VkZero/include/VkZero/uniform_buffer.hpp	/^  UniformBuffer(Structure &ubo) : UniformBufferBase(&ubo, sizeof(Structure)) {}$/;"	f	class:VkZero::UniformBuffer
UniformBuffer	VkZero/include/VkZero/uniform_buffer.hpp	/^class UniformBuffer : public UniformBufferBase {$/;"	c	namespace:VkZero
UniformBuffer	VkZero/include/types.hpp	/^        UniformBuffer = 6,$/;"	e	enum:VkZero::DescriptorType
UniformBuffer	VkZero/include/uniform_buffer.hpp	/^  UniformBuffer(Structure &ubo) : UniformBufferBase(&ubo, sizeof(Structure)) {}$/;"	f	class:VkZero::UniformBuffer
UniformBuffer	VkZero/include/uniform_buffer.hpp	/^class UniformBuffer : public UniformBufferBase {$/;"	c	namespace:VkZero
UniformBufferBase	VkZero/include/VkZero/uniform_buffer.hpp	/^struct UniformBufferBase$/;"	s	namespace:VkZero
UniformBufferBase	VkZero/include/uniform_buffer.hpp	/^struct UniformBufferBase$/;"	s	namespace:VkZero
UniformBufferBase	VkZero/src/uniform_buffer.cpp	/^UniformBufferBase::UniformBufferBase(void* ubo, size_t size)$/;"	f	class:UniformBufferBase
UniformBufferDynamic	VkZero/include/VkZero/types.hpp	/^        UniformBufferDynamic = 8,$/;"	e	enum:VkZero::DescriptorType
UniformBufferDynamic	VkZero/include/types.hpp	/^        UniformBufferDynamic = 8,$/;"	e	enum:VkZero::DescriptorType
UniformBufferImpl_T	VkZero/include/VkZero/Internal/uniform_buffer_internal.hpp	/^struct UniformBufferImpl_T : public BindResource$/;"	s	namespace:VkZero
UniformBufferImpl_T	VkZero/src/uniform_buffer.cpp	/^UniformBufferImpl_T::UniformBufferImpl_T(void* ubo, size_t size) : size(size), ubo(ubo)$/;"	f	class:UniformBufferImpl_T
UniformTexelBuffer	VkZero/include/VkZero/types.hpp	/^        UniformTexelBuffer = 4,$/;"	e	enum:VkZero::DescriptorType
UniformTexelBuffer	VkZero/include/types.hpp	/^        UniformTexelBuffer = 4,$/;"	e	enum:VkZero::DescriptorType
UpdateTransformType3D	include/FastNoiseLite.hpp	/^  void UpdateTransformType3D() {$/;"	f	class:FastNoiseLite	typeref:typename:void
UpdateWarpTransformType3D	include/FastNoiseLite.hpp	/^  void UpdateWarpTransformType3D() {$/;"	f	class:FastNoiseLite	typeref:typename:void
ValCoord	include/FastNoiseLite.hpp	/^  static float ValCoord(int seed, int xPrimed, int yPrimed) {$/;"	f	class:FastNoiseLite	typeref:typename:float
ValCoord	include/FastNoiseLite.hpp	/^  static float ValCoord(int seed, int xPrimed, int yPrimed, int zPrimed) {$/;"	f	class:FastNoiseLite	typeref:typename:float
VideoDecodeDpb	VkZero/include/VkZero/types.hpp	/^        VideoDecodeDpb = 1000024002,$/;"	e	enum:VkZero::ImageLayout
VideoDecodeDpb	VkZero/include/types.hpp	/^        VideoDecodeDpb = 1000024002,$/;"	e	enum:VkZero::ImageLayout
VideoDecodeDst	VkZero/include/VkZero/types.hpp	/^        VideoDecodeDst = 1000024000,$/;"	e	enum:VkZero::ImageLayout
VideoDecodeDst	VkZero/include/types.hpp	/^        VideoDecodeDst = 1000024000,$/;"	e	enum:VkZero::ImageLayout
VideoDecodeSrc	VkZero/include/VkZero/types.hpp	/^        VideoDecodeSrc = 1000024001,$/;"	e	enum:VkZero::ImageLayout
VideoDecodeSrc	VkZero/include/types.hpp	/^        VideoDecodeSrc = 1000024001,$/;"	e	enum:VkZero::ImageLayout
VideoEncodeDpb	VkZero/include/VkZero/types.hpp	/^        VideoEncodeDpb = 1000299002,$/;"	e	enum:VkZero::ImageLayout
VideoEncodeDpb	VkZero/include/types.hpp	/^        VideoEncodeDpb = 1000299002,$/;"	e	enum:VkZero::ImageLayout
VideoEncodeDst	VkZero/include/VkZero/types.hpp	/^        VideoEncodeDst = 1000299000,$/;"	e	enum:VkZero::ImageLayout
VideoEncodeDst	VkZero/include/types.hpp	/^        VideoEncodeDst = 1000299000,$/;"	e	enum:VkZero::ImageLayout
VideoEncodeQuantizationMap	VkZero/include/VkZero/types.hpp	/^        VideoEncodeQuantizationMap = 1000553000$/;"	e	enum:VkZero::ImageLayout
VideoEncodeQuantizationMap	VkZero/include/types.hpp	/^        VideoEncodeQuantizationMap = 1000553000$/;"	e	enum:VkZero::ImageLayout
VideoEncodeSrc	VkZero/include/VkZero/types.hpp	/^        VideoEncodeSrc = 1000299001,$/;"	e	enum:VkZero::ImageLayout
VideoEncodeSrc	VkZero/include/types.hpp	/^        VideoEncodeSrc = 1000299001,$/;"	e	enum:VkZero::ImageLayout
VkZero	VkZero/include/VkZero/Internal/bind_resource_internal.hpp	/^namespace VkZero$/;"	n
VkZero	VkZero/include/VkZero/Internal/binding_internal.hpp	/^namespace VkZero {$/;"	n
VkZero	VkZero/include/VkZero/Internal/core_internal.hpp	/^namespace VkZero$/;"	n
VkZero	VkZero/include/VkZero/Internal/descriptor_pool_internal.hpp	/^namespace VkZero$/;"	n
VkZero	VkZero/include/VkZero/Internal/frame_internal.hpp	/^namespace VkZero$/;"	n
VkZero	VkZero/include/VkZero/Internal/graphics_pipeline_internal.hpp	/^namespace VkZero$/;"	n
VkZero	VkZero/include/VkZero/Internal/graphics_renderpass_internal.hpp	/^namespace VkZero {$/;"	n
VkZero	VkZero/include/VkZero/Internal/image_internal.hpp	/^namespace VkZero$/;"	n
VkZero	VkZero/include/VkZero/Internal/raytracing_pipeline_internal.hpp	/^namespace VkZero {$/;"	n
VkZero	VkZero/include/VkZero/Internal/raytracing_renderpass_internal.hpp	/^namespace VkZero {$/;"	n
VkZero	VkZero/include/VkZero/Internal/renderpass_internal.hpp	/^namespace VkZero {$/;"	n
VkZero	VkZero/include/VkZero/Internal/resource_manager_internal.hpp	/^namespace VkZero$/;"	n
VkZero	VkZero/include/VkZero/Internal/shader_group_internal.hpp	/^namespace VkZero {$/;"	n
VkZero	VkZero/include/VkZero/Internal/shader_internal.hpp	/^namespace VkZero$/;"	n
VkZero	VkZero/include/VkZero/Internal/shader_resource_set_internal.hpp	/^namespace VkZero {$/;"	n
VkZero	VkZero/include/VkZero/Internal/uniform_buffer_internal.hpp	/^namespace VkZero$/;"	n
VkZero	VkZero/include/VkZero/Internal/window_internal.hpp	/^namespace VkZero {$/;"	n
VkZero	VkZero/include/VkZero/binding.hpp	/^namespace VkZero {$/;"	n
VkZero	VkZero/include/VkZero/fixed_string.hpp	/^namespace VkZero {$/;"	n
VkZero	VkZero/include/VkZero/frame.hpp	/^namespace VkZero {$/;"	n
VkZero	VkZero/include/VkZero/graphics_pipeline.hpp	/^namespace VkZero {$/;"	n
VkZero	VkZero/include/VkZero/image.hpp	/^namespace VkZero {$/;"	n
VkZero	VkZero/include/VkZero/raytracing_pipeline.hpp	/^namespace VkZero {$/;"	n
VkZero	VkZero/include/VkZero/render_pass.hpp	/^namespace VkZero {$/;"	n
VkZero	VkZero/include/VkZero/shader.hpp	/^namespace VkZero$/;"	n
VkZero	VkZero/include/VkZero/shader_bindings.hpp	/^namespace VkZero {$/;"	n
VkZero	VkZero/include/VkZero/shader_group.hpp	/^namespace VkZero {$/;"	n
VkZero	VkZero/include/VkZero/shader_library.hpp	/^namespace VkZero$/;"	n
VkZero	VkZero/include/VkZero/shader_resource_set.hpp	/^namespace VkZero {$/;"	n
VkZero	VkZero/include/VkZero/shader_types.hpp	/^namespace VkZero$/;"	n
VkZero	VkZero/include/VkZero/types.hpp	/^namespace VkZero$/;"	n
VkZero	VkZero/include/VkZero/uniform_buffer.hpp	/^namespace VkZero$/;"	n
VkZero	VkZero/include/VkZero/vk_zero.hpp	/^namespace VkZero$/;"	n
VkZero	VkZero/include/VkZero/window.hpp	/^namespace VkZero$/;"	n
VkZero	VkZero/include/binding.hpp	/^namespace VkZero {$/;"	n
VkZero	VkZero/include/fixed_string.hpp	/^namespace VkZero {$/;"	n
VkZero	VkZero/include/frame.hpp	/^namespace VkZero {$/;"	n
VkZero	VkZero/include/graphics_pipeline.hpp	/^namespace VkZero {$/;"	n
VkZero	VkZero/include/image.hpp	/^namespace VkZero {$/;"	n
VkZero	VkZero/include/raytracing_pipeline.hpp	/^namespace VkZero {$/;"	n
VkZero	VkZero/include/render_pass.hpp	/^namespace VkZero {$/;"	n
VkZero	VkZero/include/shader.hpp	/^namespace VkZero$/;"	n
VkZero	VkZero/include/shader_bindings.hpp	/^namespace VkZero {$/;"	n
VkZero	VkZero/include/shader_group.hpp	/^namespace VkZero {$/;"	n
VkZero	VkZero/include/shader_library.hpp	/^namespace VkZero$/;"	n
VkZero	VkZero/include/shader_resource_set.hpp	/^namespace VkZero {$/;"	n
VkZero	VkZero/include/shader_types.hpp	/^namespace VkZero$/;"	n
VkZero	VkZero/include/types.hpp	/^namespace VkZero$/;"	n
VkZero	VkZero/include/uniform_buffer.hpp	/^namespace VkZero$/;"	n
VkZero	VkZero/include/vk_zero.hpp	/^namespace VkZero$/;"	n
VkZero	VkZero/include/window.hpp	/^namespace VkZero$/;"	n
VkZero	VkZero/src/vk_zero.cpp	/^namespace VkZero$/;"	n	file:
VkZero	include/Camera.hpp	/^namespace VkZero$/;"	n
VkZero	include/VkZeroObjects.hpp	/^namespace VkZero{$/;"	n
VkZeroCoreImpl_T	VkZero/include/VkZero/Internal/core_internal.hpp	/^  struct VkZeroCoreImpl_T$/;"	s	namespace:VkZero
VkZeroCoreImpl_T	VkZero/src/core.cpp	/^VkZeroCoreImpl_T::VkZeroCoreImpl_T() $/;"	f	class:VkZeroCoreImpl_T
VkZeroInit	VkZero/src/vk_zero.cpp	/^  void VkZeroInit()$/;"	f	namespace:VkZero	typeref:typename:void
VkZeroObjects	include/VkZeroObjects.hpp	/^class VkZeroObjects {$/;"	c
VkZeroObjects	src/VkZeroObjects.cpp	/^VkZeroObjects::VkZeroObjects($/;"	f	class:VkZeroObjects
VoxelChunk	include/VoxelWorld.hpp	/^  struct VoxelChunk {$/;"	s	class:VoxelWorld
VoxelEngine	README.md	/^# VoxelEngine$/;"	c
VoxelWorld	include/VoxelWorld.hpp	/^class VoxelWorld {$/;"	c
VoxelWorld	src/VoxelWorld.cpp	/^VoxelWorld::VoxelWorld()$/;"	f	class:VoxelWorld
Window	VkZero/include/VkZero/window.hpp	/^  class Window {$/;"	c	namespace:VkZero
Window	VkZero/include/window.hpp	/^  class Window {$/;"	c	namespace:VkZero
Window	VkZero/src/window.cpp	/^Window::Window(int width, int height, const char *title)$/;"	f	class:Window
WindowImpl	VkZero/include/VkZero/window.hpp	/^  using WindowImpl = struct WindowImpl_T*;$/;"	t	namespace:VkZero	typeref:struct:WindowImpl_T *
WindowImpl	VkZero/include/window.hpp	/^  using WindowImpl = struct WindowImpl_T*;$/;"	t	namespace:VkZero	typeref:struct:WindowImpl_T *
WindowImpl_T	VkZero/include/VkZero/Internal/window_internal.hpp	/^struct WindowImpl_T {$/;"	s	namespace:VkZero
WindowImpl_T	VkZero/src/window.cpp	/^WindowImpl_T::WindowImpl_T(int width, int height, const char *title) :$/;"	f	class:WindowImpl_T
Write	VkZero/include/VkZero/Internal/image_internal.hpp	/^  void Write(VkCommandBuffer commandBuffer, uint32_t index, char *data)$/;"	f	class:VkZero::Image	typeref:typename:void
Write	VkZero/include/VkZero/Internal/image_internal.hpp	/^  void Write(uint32_t index, char *data)$/;"	f	class:VkZero::Image	typeref:typename:void
WriteDescriptor	VkZero/include/VkZero/Internal/image_internal.hpp	/^  void WriteDescriptor(VkDevice device, VkDescriptorSet descriptorSet,$/;"	f	class:VkZero::Image	typeref:typename:void
X8D24UnormPack32	VkZero/include/VkZero/types.hpp	/^        X8D24UnormPack32 = 125,$/;"	e	enum:VkZero::Format
X8D24UnormPack32	VkZero/include/types.hpp	/^        X8D24UnormPack32 = 125,$/;"	e	enum:VkZero::Format
__anon009f33a00102	VkZero/src/shader_group.cpp	/^    m_shaders([&]() {$/;"	f	file:
__anon012cde190102	VkZero/include/binding.hpp	/^            [&]() {$/;"	f	struct:VkZero::ResourceBinding	file:
__anon0f1a59490102	VkZero/include/shader_library.hpp	/^        static constexpr bool matches = []() {$/;"	f	struct:VkZero::shader_index	file:
__anon0f1a59490202	VkZero/include/shader_library.hpp	/^        ShaderLibrary() : ShaderLibraryBase([](){$/;"	f	class:VkZero::ShaderLibrary	file:
__anon518d7da30102	src/VoxelWorld.cpp	/^    workers.emplace_back([this] { chunkWorker(); });$/;"	f	function:VoxelWorld::startWorkers	file:
__anon518d7da30202	src/VoxelWorld.cpp	/^              [this](uint16_t a, uint16_t b) { return chunkSort(a, b); });$/;"	f	function:VoxelWorld::sortChunks	file:
__anon518d7da30302	src/VoxelWorld.cpp	/^      queueCond.wait(lock, [&] { return chunkQueue[0] != 0 || stopThreads; });$/;"	f	function:VoxelWorld::chunkWorker	file:
__anon5da84a950102	VkZero/src/window.cpp	/^  window([&](){$/;"	f	file:
__anon5da84a950202	VkZero/src/window.cpp	/^  surface([&](){$/;"	f	file:
__anon5da84a950302	VkZero/src/window.cpp	/^  swapChain([&](){$/;"	f	file:
__anon5da84a950402	VkZero/src/window.cpp	/^  swapchainImages([&](){$/;"	f	file:
__anon6bd514d20102	src/main.cpp	/^  VkZeroObjects objects{world, camera, window, [&](void* commandBuffer, uint32_t currentFrame){$/;"	f	function:main	file:
__anon7898d7790102	VkZero/include/VkZero/shader_library.hpp	/^        static constexpr bool matches = []() {$/;"	f	struct:VkZero::shader_index	file:
__anon7898d7790202	VkZero/include/VkZero/shader_library.hpp	/^        ShaderLibrary() : ShaderLibraryBase([](){$/;"	f	class:VkZero::ShaderLibrary	file:
__anon82b4ef460102	VkZero/src/shader_resource_set.cpp	/^    : descriptorSetLayout([&]() {$/;"	f	file:
__anon82b4ef460202	VkZero/src/shader_resource_set.cpp	/^      descriptorSets([&]() {$/;"	f	file:
__anon9e31f3260102	VkZero/src/raytracing_pipeline.cpp	/^    : resources(resources), m_shaderGroup(shaderGroup), width(width), height(height), pipelineLa/;"	f	file:
__anona64332f60108	src/Camera.cpp	/^  struct {$/;"	s	function:Camera::update	file:
__anonb551f2490102	VkZero/include/VkZero/binding.hpp	/^            [&]() {$/;"	f	struct:VkZero::ResourceBinding	file:
__anone66c69430102	VkZero/src/graphics_pipeline.cpp	/^      : m_shaderGroup(shaderGroup), resources(resources), pipelineLayout([&]() {$/;"	f	file:
activeChunks	include/VoxelWorld.hpp	/^  std::unordered_set<uint16_t> activeChunks;$/;"	m	class:VoxelWorld	typeref:typename:std::unordered_set<uint16_t>
after	VkZero/include/VkZero/Internal/raytracing_renderpass_internal.hpp	/^  std::function<void(VkCommandBuffer, uint32_t)> after;$/;"	m	struct:VkZero::RaytracingRenderpassImpl_T	typeref:typename:std::function<void (VkCommandBuffer,uint32_t)>
all	Makefile	/^all:$/;"	t
all	VkZero/Makefile	/^all:$/;"	t
allAttachments	VkZero/include/VkZero/render_pass.hpp	/^  using allAttachments =$/;"	t	class:VkZero::GraphicsRenderpass	typeref:typename:RenderPassDetails::get_all_attachments<std::tuple<Pipelines...>>::value
allAttachments	VkZero/include/render_pass.hpp	/^  using allAttachments =$/;"	t	class:VkZero::GraphicsRenderpass	typeref:typename:RenderPassDetails::get_all_attachments<std::tuple<Pipelines...>>::value
all_bindings_tuple	VkZero/include/VkZero/shader_group.hpp	/^  using all_bindings_tuple = decltype(std::tuple_cat($/;"	t	struct:VkZero::ShaderGroupDetails::shader_binding_validator
all_bindings_tuple	VkZero/include/shader_group.hpp	/^  using all_bindings_tuple = decltype(std::tuple_cat($/;"	t	struct:VkZero::ShaderGroupDetails::shader_binding_validator
arguments	compile_commands.json	/^    "arguments": [$/;"	a	object:0
arguments	compile_commands.json	/^    "arguments": [$/;"	a	object:1
arguments	compile_commands.json	/^    "arguments": [$/;"	a	object:2
arguments	compile_commands.json	/^    "arguments": [$/;"	a	object:3
arguments	compile_commands.json	/^    "arguments": [$/;"	a	object:4
assign_global_locations	VkZero/include/VkZero/render_pass.hpp	/^struct assign_global_locations<std::tuple<First, Rest...>, Start> {$/;"	s	namespace:VkZero::RenderPassDetails
assign_global_locations	VkZero/include/render_pass.hpp	/^struct assign_global_locations<std::tuple<First, Rest...>, Start> {$/;"	s	namespace:VkZero::RenderPassDetails
attachment_collector	VkZero/include/VkZero/shader_group.hpp	/^struct attachment_collector<std::tuple<First, Rest...>> {$/;"	s	namespace:VkZero::ShaderGroupDetails
attachment_collector	VkZero/include/shader_group.hpp	/^struct attachment_collector<std::tuple<First, Rest...>> {$/;"	s	namespace:VkZero::ShaderGroupDetails
attachments	VkZero/include/VkZero/Internal/shader_group_internal.hpp	/^    std::vector<AttachmentImpl_T*> attachments;$/;"	m	struct:VkZero::ShaderGroupImpl	typeref:typename:std::vector<AttachmentImpl_T * >
attachments_extractor	VkZero/include/VkZero/shader.hpp	/^        struct attachments_extractor<std::tuple<First, Rest...>> {$/;"	s	namespace:VkZero::ShaderDetails
attachments_extractor	VkZero/include/shader.hpp	/^        struct attachments_extractor<std::tuple<First, Rest...>> {$/;"	s	namespace:VkZero::ShaderDetails
before	VkZero/include/VkZero/Internal/raytracing_renderpass_internal.hpp	/^  std::function<void(VkCommandBuffer, uint32_t)> before;$/;"	m	struct:VkZero::RaytracingRenderpassImpl_T	typeref:typename:std::function<void (VkCommandBuffer,uint32_t)>
beginSingleTimeCommands	VkZero/src/resource_manager.cpp	/^VkCommandBuffer ResourceManager::beginSingleTimeCommands() {$/;"	f	class:ResourceManager	typeref:typename:VkCommandBuffer
bindResources	VkZero/src/graphics_pipeline.cpp	/^  void GraphicsPipelineImpl_T::bindResources(VkCommandBuffer commandBuffer, int currentFrame) {$/;"	f	class:GraphicsPipelineImpl_T	typeref:typename:void
bindResources	VkZero/src/raytracing_pipeline.cpp	/^void RaytracingPipelineImpl_T::bindResources(VkCommandBuffer commandBuffer,$/;"	f	class:RaytracingPipelineImpl_T	typeref:typename:void
binding	VkZero/include/VkZero/Internal/binding_internal.hpp	/^  uint32_t binding;$/;"	m	struct:VkZero::ResourceBindingImpl_T	typeref:typename:uint32_t
binding	VkZero/src/binding.cpp	/^  uint32_t binding;$/;"	v	typeref:typename:uint32_t
binding_compatibility_checker	VkZero/include/VkZero/shader_group.hpp	/^  template <typename A, typename B> struct binding_compatibility_checker {$/;"	s	struct:VkZero::ShaderGroupDetails::shader_binding_validator
binding_compatibility_checker	VkZero/include/shader_group.hpp	/^  template <typename A, typename B> struct binding_compatibility_checker {$/;"	s	struct:VkZero::ShaderGroupDetails::shader_binding_validator
bindings	VkZero/include/VkZero/Internal/shader_resource_set_internal.hpp	/^  std::vector<ResourceBindingBase *> bindings;$/;"	m	struct:VkZero::ShaderResourceSetImpl_T	typeref:typename:std::vector<ResourceBindingBase * >
bindings_extractor	VkZero/include/VkZero/shader.hpp	/^        struct bindings_extractor<std::tuple<First, Rest...>> {$/;"	s	namespace:VkZero::ShaderDetails
bindings_extractor	VkZero/include/shader.hpp	/^        struct bindings_extractor<std::tuple<First, Rest...>> {$/;"	s	namespace:VkZero::ShaderDetails
buffer	VkZero/include/VkZero/Internal/image_internal.hpp	/^  VkBuffer buffer;$/;"	m	struct:VkZero::StagingData_T	typeref:typename:VkBuffer
build	VkZero/src/descriptor_pool.cpp	/^void DescriptorPool::build(std::vector<DescriptorType> types)$/;"	f	class:DescriptorPool	typeref:typename:void
callableRegion	VkZero/include/VkZero/Internal/raytracing_pipeline_internal.hpp	/^  VkStridedDeviceAddressRegionKHR callableRegion;$/;"	m	struct:VkZero::RaytracingPipelineImpl_T	typeref:typename:VkStridedDeviceAddressRegionKHR
cameraPosition	include/Camera.hpp	/^  glm::vec3 cameraPosition =$/;"	m	class:Camera	typeref:typename:glm::vec3
cameraTargetPoint	include/Camera.hpp	/^  glm::vec3 cameraTargetPoint = glm::vec3(1.0f, 0.0f, 0.0f);$/;"	m	class:Camera	typeref:typename:glm::vec3
cameraVelocity	include/Camera.hpp	/^  glm::vec3 cameraVelocity = glm::vec3(0.0f, 0.0f, 0.0f);$/;"	m	class:Camera	typeref:typename:glm::vec3
capabilities	VkZero/include/VkZero/Internal/window_internal.hpp	/^    VkSurfaceCapabilitiesKHR capabilities;$/;"	m	struct:VkZero::WindowImpl_T::SwapChainSupportDetails	typeref:typename:VkSurfaceCapabilitiesKHR
changeLayout	VkZero/include/VkZero/Internal/image_internal.hpp	/^  void changeLayout(VkCommandBuffer commandBuffer, size_t index,$/;"	f	class:VkZero::Image	typeref:typename:void
changeLayout	VkZero/include/VkZero/Internal/image_internal.hpp	/^  void changeLayout(size_t index, VkImageLayout newLayout, int mipLevels)$/;"	f	class:VkZero::Image	typeref:typename:void
changeLayout	VkZero/src/image.cpp	/^      void MultiStagedImageImpl_T::changeLayout(ImageLayout newLayout, uint32_t index) {$/;"	f	class:MultiStagedImageImpl_T	typeref:typename:void
changeLayout	VkZero/src/image.cpp	/^  void MultiStagedImageImpl_T::changeLayout(VkCommandBuffer commandBuffer, ImageLayout newLayout/;"	f	class:MultiStagedImageImpl_T	typeref:typename:void
changeLayout	VkZero/src/image.cpp	/^void MultiImageBase::changeLayout(ImageLayout newLayout, uint32_t index) {$/;"	f	class:MultiImageBase	typeref:typename:void
changeLayout	VkZero/src/image.cpp	/^void MultiImageBase::changeLayout(void* commandBuffer, ImageLayout newLayout,$/;"	f	class:MultiImageBase	typeref:typename:void
changeLayout	VkZero/src/image.cpp	/^void MultiImageImpl_T::changeLayout(ImageLayout newLayout, uint32_t index) {$/;"	f	class:MultiImageImpl_T	typeref:typename:void
changeLayout	VkZero/src/image.cpp	/^void MultiImageImpl_T::changeLayout(VkCommandBuffer commandBuffer, ImageLayout newLayout,$/;"	f	class:MultiImageImpl_T	typeref:typename:void
changeLayout	VkZero/src/image.cpp	/^void MultiStagedImageBase::changeLayout(ImageLayout newLayout, uint32_t index) {$/;"	f	class:MultiStagedImageBase	typeref:typename:void
changeLayout	VkZero/src/image.cpp	/^void MultiStagedImageBase::changeLayout(void* commandBuffer, ImageLayout newLayout,$/;"	f	class:MultiStagedImageBase	typeref:typename:void
checkDeviceExtensionSupport	VkZero/src/core.cpp	/^bool VkZeroCoreImpl_T::checkDeviceExtensionSupport(VkPhysicalDevice device) {$/;"	f	class:VkZeroCoreImpl_T	typeref:typename:bool
checkValidationLayerSupport	VkZero/src/core.cpp	/^bool VkZeroCoreImpl_T::checkValidationLayerSupport() {$/;"	f	class:VkZeroCoreImpl_T	typeref:typename:bool
chooseDevice	VkZero/src/core.cpp	/^void VkZeroCoreImpl_T::chooseDevice(WindowImpl_T* window)$/;"	f	class:VkZeroCoreImpl_T	typeref:typename:void
chooseSwapExtent	VkZero/src/window.cpp	/^VkExtent2D WindowImpl_T::chooseSwapExtent(const VkSurfaceCapabilitiesKHR &capabilities) {$/;"	f	class:WindowImpl_T	typeref:typename:VkExtent2D
chooseSwapPresentMode	VkZero/src/window.cpp	/^VkPresentModeKHR WindowImpl_T::chooseSwapPresentMode($/;"	f	class:WindowImpl_T	typeref:typename:VkPresentModeKHR
chooseSwapSurfaceFormat	VkZero/src/window.cpp	/^VkSurfaceFormatKHR WindowImpl_T::chooseSwapSurfaceFormat($/;"	f	class:WindowImpl_T	typeref:typename:VkSurfaceFormatKHR
chunkPosition	include/Camera.hpp	/^  glm::ivec3 chunkPosition = glm::ivec3(0, 0, 0);$/;"	m	class:Camera	typeref:typename:glm::ivec3
chunkPosition	include/VoxelWorld.hpp	/^  glm::ivec3 chunkPosition;$/;"	m	class:VoxelWorld	typeref:typename:glm::ivec3
chunkQueue	include/VoxelWorld.hpp	/^  std::vector<uint16_t> chunkQueue;$/;"	m	class:VoxelWorld	typeref:typename:std::vector<uint16_t>
chunkSort	src/VoxelWorld.cpp	/^bool VoxelWorld::chunkSort(uint16_t a, uint16_t b) {$/;"	f	class:VoxelWorld	typeref:typename:bool
chunkUpdateQueue	include/VoxelWorld.hpp	/^  std::vector<uint16_t> chunkUpdateQueue;$/;"	m	class:VoxelWorld	typeref:typename:std::vector<uint16_t>
chunkWorker	src/VoxelWorld.cpp	/^void VoxelWorld::chunkWorker() {$/;"	f	class:VoxelWorld	typeref:typename:void
clean	Makefile	/^clean:$/;"	t
cleanupSwapChain	VkZero/src/window.cpp	/^void WindowImpl_T::cleanupSwapChain() {$/;"	f	class:WindowImpl_T	typeref:typename:void
commandBuffers	VkZero/include/VkZero/Internal/frame_internal.hpp	/^  std::vector<VkCommandBuffer> commandBuffers[MAX_FRAMES_IN_FLIGHT];$/;"	m	struct:VkZero::FrameImpl_T	typeref:typename:std::vector<VkCommandBuffer>[]
commandPool	VkZero/include/VkZero/Internal/core_internal.hpp	/^    VkCommandPool commandPool = 0;$/;"	m	struct:VkZero::VkZeroCoreImpl_T	typeref:typename:VkCommandPool
commandPool	VkZero/include/VkZero/Internal/frame_internal.hpp	/^  VkCommandPool commandPool;$/;"	m	struct:VkZero::FrameImpl_T	typeref:typename:VkCommandPool
commonAttachments	VkZero/include/VkZero/render_pass.hpp	/^  using commonAttachments =$/;"	t	class:VkZero::GraphicsRenderpass	typeref:typename:RenderPassDetails::get_common_attachments<allAttachments>::value
commonAttachments	VkZero/include/render_pass.hpp	/^  using commonAttachments =$/;"	t	class:VkZero::GraphicsRenderpass	typeref:typename:RenderPassDetails::get_common_attachments<allAttachments>::value
contains	VkZero/include/VkZero/shader_library.hpp	/^    struct contains<T, std::tuple<U, Rest...>> $/;"	s	namespace:VkZero
contains	VkZero/include/shader_library.hpp	/^    struct contains<T, std::tuple<U, Rest...>> $/;"	s	namespace:VkZero
contains_attachment	VkZero/include/VkZero/render_pass.hpp	/^struct contains_attachment<T, std::tuple<First, Rest...>>$/;"	s	namespace:VkZero::RenderPassDetails
contains_attachment	VkZero/include/render_pass.hpp	/^struct contains_attachment<T, std::tuple<First, Rest...>>$/;"	s	namespace:VkZero::RenderPassDetails
createInstance	VkZero/src/core.cpp	/^void VkZeroCoreImpl_T::createInstance() {$/;"	f	class:VkZeroCoreImpl_T	typeref:typename:void
createLogicalDevice	VkZero/src/core.cpp	/^void VkZeroCoreImpl_T::createLogicalDevice(WindowImpl_T* window) {$/;"	f	class:VkZeroCoreImpl_T	typeref:typename:void
createRenderPass	VkZero/src/graphics_renderpass.cpp	/^void GraphicsRenderpassImpl_T::createRenderPass($/;"	f	class:GraphicsRenderpassImpl_T	typeref:typename:void
createShaderModule	VkZero/src/shader.cpp	/^VkShaderModule ShaderImpl_T::createShaderModule(VkDevice device,$/;"	f	class:ShaderImpl_T	typeref:typename:VkShaderModule
createSwapChain	VkZero/src/window.cpp	/^void WindowImpl_T::createSwapChain(VkSwapchainKHR& swapChain) {$/;"	f	class:WindowImpl_T	typeref:typename:void
createSwapchainImages	VkZero/src/window.cpp	/^AttachmentImage WindowImpl_T::createSwapchainImages() {$/;"	f	class:WindowImpl_T	typeref:typename:AttachmentImage
create_init_list	VkZero/include/VkZero/binding.hpp	/^  static constexpr auto create_init_list(Resource *info,$/;"	f	struct:VkZero::ResourceBinding	typeref:typename:auto
create_init_list	VkZero/include/binding.hpp	/^  static constexpr auto create_init_list(Resource *info,$/;"	f	struct:VkZero::ResourceBinding	typeref:typename:auto
create_pipeline	VkZero/src/graphics_pipeline.cpp	/^  void GraphicsPipelineImpl_T::create_pipeline(VkDevice device, VkRenderPass renderPass) {$/;"	f	class:GraphicsPipelineImpl_T	typeref:typename:void
cross_set_binding_validity_checker	VkZero/include/VkZero/graphics_pipeline.hpp	/^constexpr bool cross_set_binding_validity_checker() {$/;"	f	namespace:VkZero::PipelineDetails	typeref:typename:bool
cross_set_binding_validity_checker	VkZero/include/graphics_pipeline.hpp	/^constexpr bool cross_set_binding_validity_checker() {$/;"	f	namespace:VkZero::PipelineDetails	typeref:typename:bool
currentFrame	VkZero/include/VkZero/Internal/frame_internal.hpp	/^  int currentFrame = 0;$/;"	m	struct:VkZero::FrameImpl_T	typeref:typename:int
current_binding	VkZero/include/VkZero/binding.hpp	/^    static constexpr int current_binding = First::get_binding();$/;"	m	struct:VkZero::CombinedBindings::filter_duplicates	typeref:typename:int
data	VkZero/include/VkZero/Internal/graphics_renderpass_internal.hpp	/^  char* data;$/;"	m	struct:VkZero::PushConstantDataImpl_T	typeref:typename:char *
data	include/VoxelWorld.hpp	/^    u_int8_t *data;$/;"	m	struct:VoxelWorld::VoxelChunk	typeref:typename:u_int8_t *
debugCallback	VkZero/src/core.cpp	/^debugCallback(VkDebugUtilsMessageSeverityFlagBitsEXT messageSeverity,$/;"	f	typeref:typename:VKAPI_ATTR VkBool32 VKAPI_CALL	file:
debugMessenger	VkZero/include/VkZero/Internal/core_internal.hpp	/^    VkDebugUtilsMessengerEXT debugMessenger;$/;"	m	struct:VkZero::VkZeroCoreImpl_T	typeref:typename:VkDebugUtilsMessengerEXT
deltaTime	VkZero/include/VkZero/Internal/window_internal.hpp	/^  double deltaTime = 0;$/;"	m	struct:VkZero::WindowImpl_T	typeref:typename:double
depth	VkZero/include/VkZero/Internal/image_internal.hpp	/^  uint32_t width, height, depth;$/;"	m	class:VkZero::Image	typeref:typename:uint32_t
descriptorCount	VkZero/include/VkZero/Internal/binding_internal.hpp	/^  uint32_t descriptorCount;$/;"	m	struct:VkZero::ResourceBindingImpl_T	typeref:typename:uint32_t
descriptorCount	VkZero/src/binding.cpp	/^  uint32_t descriptorCount;$/;"	v	typeref:typename:uint32_t
descriptorSetLayout	VkZero/include/VkZero/Internal/shader_resource_set_internal.hpp	/^  VkDescriptorSetLayout descriptorSetLayout;$/;"	m	struct:VkZero::ShaderResourceSetImpl_T	typeref:typename:VkDescriptorSetLayout
descriptorSets	VkZero/include/VkZero/Internal/shader_resource_set_internal.hpp	/^  std::vector<VkDescriptorSet> descriptorSets;$/;"	m	struct:VkZero::ShaderResourceSetImpl_T	typeref:typename:std::vector<VkDescriptorSet>
device	VkZero/include/VkZero/Internal/core_internal.hpp	/^    VkDevice device = 0;$/;"	m	struct:VkZero::VkZeroCoreImpl_T	typeref:typename:VkDevice
device	VkZero/include/VkZero/Internal/window_internal.hpp	/^  VkDevice device;$/;"	m	struct:VkZero::WindowImpl_T	typeref:typename:VkDevice
deviceExtensions	VkZero/src/core.cpp	/^const std::vector<const char *> deviceExtensions = {$/;"	v	typeref:typename:const std::vector<const char * >
directory	compile_commands.json	/^    "directory": "\/home\/hnsorens\/VoxelEngine",$/;"	s	object:0
directory	compile_commands.json	/^    "directory": "\/home\/hnsorens\/VoxelEngine",$/;"	s	object:1
directory	compile_commands.json	/^    "directory": "\/home\/hnsorens\/VoxelEngine",$/;"	s	object:2
directory	compile_commands.json	/^    "directory": "\/home\/hnsorens\/VoxelEngine",$/;"	s	object:3
directory	compile_commands.json	/^    "directory": "\/home\/hnsorens\/VoxelEngine",$/;"	s	object:4
draw	VkZero/src/frame.cpp	/^void FrameBase::draw() { impl->draw(); }$/;"	f	class:FrameBase	typeref:typename:void
draw	VkZero/src/frame.cpp	/^void FrameImpl_T::draw() {$/;"	f	class:FrameImpl_T	typeref:typename:void
draw	src/VkZeroObjects.cpp	/^void VkZeroObjects::draw() { frame.draw(); }$/;"	f	class:VkZeroObjects	typeref:typename:void
duplicate_binding_checker	VkZero/include/VkZero/shader.hpp	/^        struct duplicate_binding_checker<> {$/;"	s	namespace:VkZero::ShaderDetails
duplicate_binding_checker	VkZero/include/VkZero/shader.hpp	/^        struct duplicate_binding_checker<First, Rest...>$/;"	s	namespace:VkZero::ShaderDetails
duplicate_binding_checker	VkZero/include/shader.hpp	/^        struct duplicate_binding_checker<> {$/;"	s	namespace:VkZero::ShaderDetails
duplicate_binding_checker	VkZero/include/shader.hpp	/^        struct duplicate_binding_checker<First, Rest...>$/;"	s	namespace:VkZero::ShaderDetails
duplicate_binding_number_checker	VkZero/include/VkZero/shader_resource_set.hpp	/^struct duplicate_binding_number_checker<First, Rest...> {$/;"	s	namespace:VkZero::ShaderResourceSetDetails
duplicate_binding_number_checker	VkZero/include/VkZero/shader_resource_set.hpp	/^template <> struct duplicate_binding_number_checker<> {$/;"	s	namespace:VkZero::ShaderResourceSetDetails
duplicate_binding_number_checker	VkZero/include/shader_resource_set.hpp	/^struct duplicate_binding_number_checker<First, Rest...> {$/;"	s	namespace:VkZero::ShaderResourceSetDetails
duplicate_binding_number_checker	VkZero/include/shader_resource_set.hpp	/^template <> struct duplicate_binding_number_checker<> {$/;"	s	namespace:VkZero::ShaderResourceSetDetails
enableValidationLayers	VkZero/src/core.cpp	/^const bool enableValidationLayers = true;$/;"	v	typeref:typename:const bool
endSingleTimeCommands	VkZero/src/resource_manager.cpp	/^void ResourceManager::endSingleTimeCommands($/;"	f	class:ResourceManager	typeref:typename:void
file	compile_commands.json	/^    "file": "\/home\/hnsorens\/VoxelEngine\/src\/Camera.cpp",$/;"	s	object:0
file	compile_commands.json	/^    "file": "\/home\/hnsorens\/VoxelEngine\/src\/Engine.cpp",$/;"	s	object:1
file	compile_commands.json	/^    "file": "\/home\/hnsorens\/VoxelEngine\/src\/VkZeroObjects.cpp",$/;"	s	object:3
file	compile_commands.json	/^    "file": "\/home\/hnsorens\/VoxelEngine\/src\/VoxelWorld.cpp",$/;"	s	object:4
file	compile_commands.json	/^    "file": "\/home\/hnsorens\/VoxelEngine\/src\/main.cpp",$/;"	s	object:2
filter_duplicates	VkZero/include/VkZero/binding.hpp	/^  struct filter_duplicates<std::tuple<First, Rest...>, std::tuple<Result...>> {$/;"	s	struct:VkZero::CombinedBindings
filter_preserve_input	VkZero/include/VkZero/render_pass.hpp	/^struct filter_preserve_input<std::tuple<First, Rest...>, All> {$/;"	s	namespace:VkZero::RenderPassDetails
filter_preserve_input	VkZero/include/render_pass.hpp	/^struct filter_preserve_input<std::tuple<First, Rest...>, All> {$/;"	s	namespace:VkZero::RenderPassDetails
filtered	VkZero/include/VkZero/render_pass.hpp	/^  using filtered =$/;"	t	struct:VkZero::RenderPassDetails::get_common_attachments	typeref:typename:filter_preserve_input<AllAttachments,AllAttachments>::type
filtered	VkZero/include/render_pass.hpp	/^  using filtered =$/;"	t	struct:VkZero::RenderPassDetails::get_common_attachments	typeref:typename:filter_preserve_input<AllAttachments,AllAttachments>::type
findMemoryType	VkZero/src/resource_manager.cpp	/^uint32_t ResourceManager::findMemoryType(VkPhysicalDevice physicalDevice,$/;"	f	class:ResourceManager	typeref:typename:uint32_t
findQueueFamilies	VkZero/src/core.cpp	/^QueueFamilyIndices VkZeroCoreImpl_T::findQueueFamilies(VkPhysicalDevice device, WindowImpl_T* wi/;"	f	class:VkZeroCoreImpl_T	typeref:typename:QueueFamilyIndices
findResourceIndex	VkZero/include/VkZero/render_pass.hpp	/^constexpr std::size_t findResourceIndex() {$/;"	f	namespace:VkZero::RenderPassResourceSetDetails	typeref:typename:std::size_t
findResourceIndex	VkZero/include/render_pass.hpp	/^constexpr std::size_t findResourceIndex() {$/;"	f	namespace:VkZero::RenderPassResourceSetDetails	typeref:typename:std::size_t
find_binding	VkZero/include/VkZero/binding.hpp	/^struct find_binding<binding, std::tuple<First, Rest...>> {$/;"	s	namespace:VkZero
firstMouse	include/Camera.hpp	/^  bool firstMouse = true;$/;"	m	class:Camera	typeref:typename:bool
flag	include/shaders.hpp	/^  uint32_t flag;$/;"	m	struct:RaytracingPushConstant	typeref:typename:uint32_t
format	VkZero/include/VkZero/Internal/graphics_renderpass_internal.hpp	/^  VkFormat format;$/;"	m	struct:VkZero::AttachmentImpl_T	typeref:typename:VkFormat
formatSize	VkZero/include/VkZero/Internal/image_internal.hpp	/^  size_t formatSize(VkFormat format) {$/;"	f	class:VkZero::Image	typeref:typename:size_t
formats	VkZero/include/VkZero/Internal/window_internal.hpp	/^    std::vector<VkSurfaceFormatKHR> formats;$/;"	m	struct:VkZero::WindowImpl_T::SwapChainSupportDetails	typeref:typename:std::vector<VkSurfaceFormatKHR>
frame	include/Camera.hpp	/^  std::vector<int> frame;$/;"	m	class:Camera	typeref:typename:std::vector<int>
frame	include/VkZeroObjects.hpp	/^  VkZero::Frame<RaytracingRenderPass_t, PipelineRenderPass> frame;$/;"	m	class:VkZeroObjects	typeref:typename:VkZero::Frame<RaytracingRenderPass_t,PipelineRenderPass>
frame	include/shaders.hpp	/^  uint32_t frame;$/;"	m	struct:RaytracingPushConstant	typeref:typename:uint32_t
frame_t	VkZero/include/VkZero/frame.hpp	/^using frame_t = uint32_t;$/;"	t	namespace:VkZero	typeref:typename:uint32_t
frame_t	VkZero/include/frame.hpp	/^using frame_t = uint32_t;$/;"	t	namespace:VkZero	typeref:typename:uint32_t
framebufferCount	VkZero/include/VkZero/Internal/graphics_renderpass_internal.hpp	/^  int framebufferCount = 3;$/;"	m	struct:VkZero::RenderPassResourceSetImpl_T	typeref:typename:int
framebufferResizeCallback	VkZero/src/window.cpp	/^static void framebufferResizeCallback(GLFWwindow *window, int width,$/;"	f	typeref:typename:void	file:
framebufferResized	VkZero/include/VkZero/Internal/window_internal.hpp	/^  bool framebufferResized = false;$/;"	m	struct:VkZero::WindowImpl_T	typeref:typename:bool
framebuffers	VkZero/include/VkZero/Internal/graphics_renderpass_internal.hpp	/^  std::vector<VkFramebuffer> framebuffers;$/;"	m	struct:VkZero::GraphicsRenderpassImpl_T	typeref:typename:std::vector<VkFramebuffer>
generateChunk	src/VoxelWorld.cpp	/^void VoxelWorld::generateChunk(VoxelChunk &chunk) {$/;"	f	class:VoxelWorld	typeref:typename:void
generateTerrain	src/VoxelWorld.cpp	/^void VoxelWorld::generateTerrain() {$/;"	f	class:VoxelWorld	typeref:typename:void
get	VkZero/include/VkZero/Internal/descriptor_pool_internal.hpp	/^        VkDescriptorPool get()$/;"	f	class:VkZero::DescriptorPool	typeref:typename:VkDescriptorPool
get	VkZero/include/VkZero/shader_group.hpp	/^  static std::vector<struct AttachmentImpl_T*> get()$/;"	f	struct:VkZero::GetAttachments	typeref:typename:std::vector<struct AttachmentImpl_T * >
get	VkZero/include/VkZero/shader_library.hpp	/^        constexpr auto& get() {$/;"	f	class:VkZero::ShaderLibrary	typeref:typename:auto &
get	VkZero/include/shader_group.hpp	/^  static std::vector<struct AttachmentImpl_T*> get()$/;"	f	struct:VkZero::GetAttachments	typeref:typename:std::vector<struct AttachmentImpl_T * >
get	VkZero/include/shader_library.hpp	/^        constexpr auto& get() {$/;"	f	class:VkZero::ShaderLibrary	typeref:typename:auto &
getChunk	src/VoxelWorld.cpp	/^uint8_t *VoxelWorld::getChunk(glm::vec3 position) {$/;"	f	class:VoxelWorld	typeref:typename:uint8_t *
getChunkID	src/VoxelWorld.cpp	/^uint16_t VoxelWorld::getChunkID(glm::vec3 position) {$/;"	f	class:VoxelWorld	typeref:typename:uint16_t
getCursorPos	VkZero/src/window.cpp	/^void Window::getCursorPos(double *currentMouseX, double *currentMouseY) {$/;"	f	class:Window	typeref:typename:void
getDeltaTime	VkZero/src/window.cpp	/^double Window::getDeltaTime() const { return impl->deltaTime; }$/;"	f	class:Window	typeref:typename:double
getFrame	VkZero/src/frame.cpp	/^frame_t FrameBase::getFrame()$/;"	f	class:FrameBase	typeref:typename:frame_t
getFramebufferSize	VkZero/src/window.cpp	/^void Window::getFramebufferSize(int *width, int *height) {$/;"	f	class:Window	typeref:typename:void
getFramebuffers	VkZero/src/graphics_renderpass.cpp	/^GraphicsRenderpassImpl_T::getFramebuffers() const {$/;"	f	class:GraphicsRenderpassImpl_T	typeref:typename:const std::vector<VkFramebuffer> &
getHeight	VkZero/src/window.cpp	/^uint32_t Window::getHeight()$/;"	f	class:Window	typeref:typename:uint32_t
getInstance	VkZero/include/VkZero/Internal/core_internal.hpp	/^    static VkZeroCoreImpl_T* getInstance()$/;"	f	struct:VkZero::VkZeroCoreImpl_T	typeref:typename:VkZeroCoreImpl_T *
getPitch	src/Camera.cpp	/^float Camera::getPitch() const { return 0.0f; }/;"	f	class:Camera	typeref:typename:float
getPosition	src/Camera.cpp	/^glm::vec3 Camera::getPosition() const { return glm::vec3(0.0f); }$/;"	f	class:Camera	typeref:typename:glm::vec3
getRenderPass	VkZero/src/graphics_renderpass.cpp	/^VkRenderPass GraphicsRenderpassImpl_T::getRenderPass() const {$/;"	f	class:GraphicsRenderpassImpl_T	typeref:typename:VkRenderPass
getRequiredExtensions	VkZero/src/core.cpp	/^std::vector<const char *> VkZeroCoreImpl_T::getRequiredExtensions() {$/;"	f	class:VkZeroCoreImpl_T	typeref:typename:std::vector<const char * >
getSwapChain	VkZero/src/window.cpp	/^VkSwapchainKHR WindowImpl_T::getSwapChain()$/;"	f	class:WindowImpl_T	typeref:typename:VkSwapchainKHR
getSwapChainImages	VkZero/src/window.cpp	/^AttachmentImage& Window::getSwapChainImages()$/;"	f	class:Window	typeref:typename:AttachmentImage &
getTarget	src/Camera.cpp	/^glm::vec3 Camera::getTarget() const { return glm::vec3(0.0f); }$/;"	f	class:Camera	typeref:typename:glm::vec3
getViewMatrix	src/Camera.cpp	/^glm::mat4 Camera::getViewMatrix() const { return glm::mat4(1.0f); }$/;"	f	class:Camera	typeref:typename:glm::mat4
getWidth	VkZero/src/window.cpp	/^uint32_t Window::getWidth()$/;"	f	class:Window	typeref:typename:uint32_t
getWindow	VkZero/src/window.cpp	/^GLFWwindow *WindowImpl_T::getWindow() const { return window; }$/;"	f	class:WindowImpl_T	typeref:typename:GLFWwindow *
getYaw	src/Camera.cpp	/^float Camera::getYaw() const { return 0.0f; }$/;"	f	class:Camera	typeref:typename:float
get_all_attachments	VkZero/include/VkZero/render_pass.hpp	/^struct get_all_attachments<std::tuple<First, Rest...>> {$/;"	s	namespace:VkZero::RenderPassDetails
get_all_attachments	VkZero/include/render_pass.hpp	/^struct get_all_attachments<std::tuple<First, Rest...>> {$/;"	s	namespace:VkZero::RenderPassDetails
get_binding	VkZero/include/VkZero/binding.hpp	/^  static constexpr int get_binding() { return Binding; }$/;"	f	struct:VkZero::ResourceBinding	typeref:typename:int
get_binding	VkZero/include/VkZero/binding.hpp	/^  static constexpr int get_binding() { return Binding; }$/;"	f	struct:VkZero::ShaderBinding	typeref:typename:int
get_binding	VkZero/include/VkZero/binding.hpp	/^  static constexpr int get_binding() { return binding; }$/;"	f	struct:VkZero::Bind	typeref:typename:int
get_binding	VkZero/include/binding.hpp	/^  static constexpr int get_binding() { return Binding; }$/;"	f	struct:VkZero::ResourceBinding	typeref:typename:int
get_binding	VkZero/include/binding.hpp	/^  static constexpr int get_binding() { return Binding; }$/;"	f	struct:VkZero::ShaderBinding	typeref:typename:int
get_binding_set	VkZero/include/VkZero/binding.hpp	/^  static constexpr int get_binding_set() { return BindingSet; }$/;"	f	struct:VkZero::ShaderBinding	typeref:typename:int
get_binding_set	VkZero/include/binding.hpp	/^  static constexpr int get_binding_set() { return BindingSet; }$/;"	f	struct:VkZero::ShaderBinding	typeref:typename:int
get_binding_type	VkZero/include/VkZero/binding.hpp	/^using get_binding_type = typename find_binding<binding, Tuple>::type;$/;"	t	namespace:VkZero	typeref:typename:find_binding<binding,Tuple>::type
get_common_attachments	VkZero/include/VkZero/render_pass.hpp	/^template <typename AllAttachments> struct get_common_attachments {$/;"	s	namespace:VkZero::RenderPassDetails
get_common_attachments	VkZero/include/render_pass.hpp	/^template <typename AllAttachments> struct get_common_attachments {$/;"	s	namespace:VkZero::RenderPassDetails
get_descriptor_count	VkZero/include/VkZero/binding.hpp	/^  static constexpr int get_descriptor_count() { return DescriptorCount; }$/;"	f	struct:VkZero::ResourceBinding	typeref:typename:int
get_descriptor_count	VkZero/include/VkZero/binding.hpp	/^  static constexpr int get_descriptor_count() { return DescriptorCount; }$/;"	f	struct:VkZero::ShaderBinding	typeref:typename:int
get_descriptor_count	VkZero/include/binding.hpp	/^  static constexpr int get_descriptor_count() { return DescriptorCount; }$/;"	f	struct:VkZero::ResourceBinding	typeref:typename:int
get_descriptor_count	VkZero/include/binding.hpp	/^  static constexpr int get_descriptor_count() { return DescriptorCount; }$/;"	f	struct:VkZero::ShaderBinding	typeref:typename:int
get_format	VkZero/include/VkZero/render_pass.hpp	/^  static constexpr enum Format get_format() { return Format; }$/;"	f	struct:VkZero::ColorAttachment	typeref:enum:Format
get_format	VkZero/include/VkZero/render_pass.hpp	/^  static constexpr enum Format get_format() { return Format; }$/;"	f	struct:VkZero::DepthAttachment	typeref:enum:Format
get_format	VkZero/include/VkZero/render_pass.hpp	/^  static constexpr enum Format get_format() { return Format; }$/;"	f	struct:VkZero::InputAttachment	typeref:enum:Format
get_format	VkZero/include/render_pass.hpp	/^  static constexpr enum Format get_format() { return Format; }$/;"	f	struct:VkZero::ColorAttachment	typeref:enum:Format
get_format	VkZero/include/render_pass.hpp	/^  static constexpr enum Format get_format() { return Format; }$/;"	f	struct:VkZero::DepthAttachment	typeref:enum:Format
get_format	VkZero/include/render_pass.hpp	/^  static constexpr enum Format get_format() { return Format; }$/;"	f	struct:VkZero::InputAttachment	typeref:enum:Format
get_location	VkZero/include/VkZero/render_pass.hpp	/^  static constexpr int get_location() { return Location; }$/;"	f	struct:VkZero::ColorAttachment	typeref:typename:int
get_location	VkZero/include/VkZero/render_pass.hpp	/^  static constexpr int get_location() { return Location; }$/;"	f	struct:VkZero::DepthAttachment	typeref:typename:int
get_location	VkZero/include/VkZero/render_pass.hpp	/^  static constexpr int get_location() { return Location; }$/;"	f	struct:VkZero::InputAttachment	typeref:typename:int
get_location	VkZero/include/render_pass.hpp	/^  static constexpr int get_location() { return Location; }$/;"	f	struct:VkZero::ColorAttachment	typeref:typename:int
get_location	VkZero/include/render_pass.hpp	/^  static constexpr int get_location() { return Location; }$/;"	f	struct:VkZero::DepthAttachment	typeref:typename:int
get_location	VkZero/include/render_pass.hpp	/^  static constexpr int get_location() { return Location; }$/;"	f	struct:VkZero::InputAttachment	typeref:typename:int
get_shader_bindings	VkZero/include/VkZero/shader_library.hpp	/^    struct get_shader_bindings<std::tuple<First, Rest...>> {$/;"	s	namespace:VkZero
get_shader_bindings	VkZero/include/shader_library.hpp	/^    struct get_shader_bindings<std::tuple<First, Rest...>> {$/;"	s	namespace:VkZero
get_stages	VkZero/include/VkZero/binding.hpp	/^  static constexpr int get_stages() { return Stages; }$/;"	f	struct:VkZero::ResourceBinding	typeref:typename:int
get_stages	VkZero/include/binding.hpp	/^  static constexpr int get_stages() { return Stages; }$/;"	f	struct:VkZero::ResourceBinding	typeref:typename:int
get_type	VkZero/include/VkZero/binding.hpp	/^  static constexpr DescriptorType get_type() { return type::type(); }$/;"	f	struct:VkZero::Bind	typeref:typename:DescriptorType
get_type	VkZero/include/VkZero/shader.hpp	/^        static constexpr ShaderType get_type() { return Type; }$/;"	f	class:VkZero::Shader	typeref:typename:ShaderType
get_type	VkZero/include/shader.hpp	/^        static constexpr ShaderType get_type() { return Type; }$/;"	f	class:VkZero::Shader	typeref:typename:ShaderType
graphicsFamily	VkZero/include/VkZero/Internal/core_internal.hpp	/^    std::optional<uint32_t> graphicsFamily;$/;"	m	struct:VkZero::QueueFamilyIndices	typeref:typename:std::optional<uint32_t>
graphicsPipeline	include/VkZeroObjects.hpp	/^  Pipeline graphicsPipeline;$/;"	m	class:VkZeroObjects	typeref:typename:Pipeline
graphicsPushConstants	include/VkZeroObjects.hpp	/^  PipelineShaderPushConstant graphicsPushConstants;$/;"	m	class:VkZeroObjects	typeref:typename:PipelineShaderPushConstant
graphicsQueue	VkZero/include/VkZero/Internal/core_internal.hpp	/^    VkQueue graphicsQueue;$/;"	m	struct:VkZero::VkZeroCoreImpl_T	typeref:typename:VkQueue
graphicsRenderPass	include/VkZeroObjects.hpp	/^  PipelineRenderPass graphicsRenderPass;$/;"	m	class:VkZeroObjects	typeref:typename:PipelineRenderPass
graphicsRenderpassAttachmentSet	include/VkZeroObjects.hpp	/^  PipelineRenderPassResources graphicsRenderpassAttachmentSet;$/;"	m	class:VkZeroObjects	typeref:typename:PipelineRenderPassResources
graphicsResourceSet	include/VkZeroObjects.hpp	/^  PipelineShaderResources graphicsResourceSet;$/;"	m	class:VkZeroObjects	typeref:typename:PipelineShaderResources
graphicsShaderGroup	include/VkZeroObjects.hpp	/^  PipelineShaderGroup graphicsShaderGroup;$/;"	m	class:VkZeroObjects	typeref:typename:PipelineShaderGroup
has_binding	VkZero/include/VkZero/binding.hpp	/^template <int binding, typename Tuple> struct has_binding {$/;"	s	namespace:VkZero
height	VkZero/include/VkZero/Internal/graphics_renderpass_internal.hpp	/^  uint32_t width, height;$/;"	m	struct:VkZero::GraphicsRenderpassImpl_T	typeref:typename:uint32_t
height	VkZero/include/VkZero/Internal/image_internal.hpp	/^  uint32_t width, height, depth;$/;"	m	class:VkZero::Image	typeref:typename:uint32_t
height	VkZero/include/VkZero/Internal/raytracing_pipeline_internal.hpp	/^  uint32_t height;$/;"	m	struct:VkZero::RaytracingPipelineImpl_T	typeref:typename:uint32_t
hideCursor	VkZero/src/window.cpp	/^void Window::hideCursor() {$/;"	f	class:Window	typeref:typename:void
hitRegion	VkZero/include/VkZero/Internal/raytracing_pipeline_internal.hpp	/^  VkStridedDeviceAddressRegionKHR hitRegion;$/;"	m	struct:VkZero::RaytracingPipelineImpl_T	typeref:typename:VkStridedDeviceAddressRegionKHR
image	VkZero/include/VkZero/Internal/graphics_renderpass_internal.hpp	/^  AttachmentImage *image;$/;"	m	struct:VkZero::RenderPassResourceImpl_T	typeref:typename:AttachmentImage *
image	VkZero/include/VkZero/Internal/image_internal.hpp	/^  VkImage image;$/;"	m	struct:VkZero::ImageData_T	typeref:typename:VkImage
imageAvailableSemaphores	VkZero/include/VkZero/Internal/frame_internal.hpp	/^  std::vector<VkSemaphore> imageAvailableSemaphores;$/;"	m	struct:VkZero::FrameImpl_T	typeref:typename:std::vector<VkSemaphore>
imageFormat	VkZero/include/VkZero/Internal/image_internal.hpp	/^  VkFormat imageFormat;$/;"	m	class:VkZero::Image	typeref:typename:VkFormat
imageLayout	VkZero/include/VkZero/Internal/image_internal.hpp	/^  VkImageLayout imageLayout;$/;"	m	class:VkZero::Image	typeref:typename:VkImageLayout
images	VkZero/include/VkZero/Internal/image_internal.hpp	/^  std::vector<ImageData_T*> images;$/;"	m	class:VkZero::Image	typeref:typename:std::vector<ImageData_T * >
impl	VkZero/include/VkZero/binding.hpp	/^  struct ResourceBindingImpl_T* impl;$/;"	m	struct:VkZero::ResourceBindingBase	typeref:struct:ResourceBindingImpl_T *
impl	VkZero/include/VkZero/frame.hpp	/^  struct FrameImpl_T *impl;$/;"	m	struct:VkZero::FrameBase	typeref:struct:FrameImpl_T *
impl	VkZero/include/VkZero/graphics_pipeline.hpp	/^  struct GraphicsPipelineImpl_T *impl;$/;"	m	struct:VkZero::GraphicsPipelineBase	typeref:struct:GraphicsPipelineImpl_T *
impl	VkZero/include/VkZero/image.hpp	/^  struct MultiImageImpl_T *impl;$/;"	m	struct:VkZero::MultiImageBase	typeref:struct:MultiImageImpl_T *
impl	VkZero/include/VkZero/image.hpp	/^  struct MultiStagedImageImpl_T *impl;$/;"	m	struct:VkZero::MultiStagedImageBase	typeref:struct:MultiStagedImageImpl_T *
impl	VkZero/include/VkZero/raytracing_pipeline.hpp	/^  struct RaytracingPipelineImpl_T *impl;$/;"	m	struct:VkZero::RaytracingPipelineBase	typeref:struct:RaytracingPipelineImpl_T *
impl	VkZero/include/VkZero/render_pass.hpp	/^  struct AttachmentImpl_T *impl;$/;"	m	struct:VkZero::AttachmentBase	typeref:struct:AttachmentImpl_T *
impl	VkZero/include/VkZero/render_pass.hpp	/^  struct GraphicsRenderpassImpl_T *impl;$/;"	m	struct:VkZero::GraphicsRenderpassBase	typeref:struct:GraphicsRenderpassImpl_T *
impl	VkZero/include/VkZero/render_pass.hpp	/^  struct PushConstantDataImpl_T* impl;$/;"	m	struct:VkZero::PushConstantDataBase	typeref:struct:PushConstantDataImpl_T *
impl	VkZero/include/VkZero/render_pass.hpp	/^  struct RaytracingRenderpassImpl_T *impl;$/;"	m	struct:VkZero::RaytracingRenderpassBase	typeref:struct:RaytracingRenderpassImpl_T *
impl	VkZero/include/VkZero/render_pass.hpp	/^  struct RenderPassResourceImpl_T *impl;$/;"	m	struct:VkZero::RenderPassResourceBase	typeref:struct:RenderPassResourceImpl_T *
impl	VkZero/include/VkZero/render_pass.hpp	/^  struct RenderPassResourceSetImpl_T *impl;$/;"	m	struct:VkZero::RenderPassResourceSetBase	typeref:struct:RenderPassResourceSetImpl_T *
impl	VkZero/include/VkZero/shader.hpp	/^        struct ShaderImpl_T* impl;$/;"	m	class:VkZero::ShaderBase	typeref:struct:ShaderImpl_T *
impl	VkZero/include/VkZero/shader_group.hpp	/^  struct ShaderGroupImpl* impl;$/;"	m	struct:VkZero::ShaderGroupBase	typeref:struct:ShaderGroupImpl *
impl	VkZero/include/VkZero/shader_group.hpp	/^  struct ShaderPushConstantsImpl_T *impl;$/;"	m	struct:VkZero::ShaderPushConstantsBase	typeref:struct:ShaderPushConstantsImpl_T *
impl	VkZero/include/VkZero/shader_resource_set.hpp	/^  struct ShaderResourceSetImpl_T *impl;$/;"	m	struct:VkZero::ShaderResourceSetBase	typeref:struct:ShaderResourceSetImpl_T *
impl	VkZero/include/VkZero/uniform_buffer.hpp	/^    struct UniformBufferImpl_T* impl;$/;"	m	struct:VkZero::UniformBufferBase	typeref:struct:UniformBufferImpl_T *
impl	VkZero/include/VkZero/window.hpp	/^    WindowImpl impl;$/;"	m	class:VkZero::Window	typeref:typename:WindowImpl
impl	VkZero/include/binding.hpp	/^  struct ResourceBindingImpl_T* impl;$/;"	m	struct:VkZero::ResourceBindingBase	typeref:struct:ResourceBindingImpl_T *
impl	VkZero/include/frame.hpp	/^  struct FrameImpl_T *impl;$/;"	m	struct:VkZero::FrameBase	typeref:struct:FrameImpl_T *
impl	VkZero/include/graphics_pipeline.hpp	/^  struct GraphicsPipelineImpl_T *impl;$/;"	m	struct:VkZero::GraphicsPipelineBase	typeref:struct:GraphicsPipelineImpl_T *
impl	VkZero/include/image.hpp	/^  struct MultiImageImpl_T *impl;$/;"	m	struct:VkZero::MultiImageBase	typeref:struct:MultiImageImpl_T *
impl	VkZero/include/image.hpp	/^  struct MultiStagedImageImpl_T *impl;$/;"	m	struct:VkZero::MultiStagedImageBase	typeref:struct:MultiStagedImageImpl_T *
impl	VkZero/include/raytracing_pipeline.hpp	/^  struct RaytracingPipelineImpl_T *impl;$/;"	m	struct:VkZero::RaytracingPipelineBase	typeref:struct:RaytracingPipelineImpl_T *
impl	VkZero/include/render_pass.hpp	/^  struct AttachmentImpl_T *impl;$/;"	m	struct:VkZero::AttachmentBase	typeref:struct:AttachmentImpl_T *
impl	VkZero/include/render_pass.hpp	/^  struct GraphicsRenderpassImpl_T *impl;$/;"	m	struct:VkZero::GraphicsRenderpassBase	typeref:struct:GraphicsRenderpassImpl_T *
impl	VkZero/include/render_pass.hpp	/^  struct PushConstantDataImpl_T* impl;$/;"	m	struct:VkZero::PushConstantDataBase	typeref:struct:PushConstantDataImpl_T *
impl	VkZero/include/render_pass.hpp	/^  struct RaytracingRenderpassImpl_T *impl;$/;"	m	struct:VkZero::RaytracingRenderpassBase	typeref:struct:RaytracingRenderpassImpl_T *
impl	VkZero/include/render_pass.hpp	/^  struct RenderPassResourceImpl_T *impl;$/;"	m	struct:VkZero::RenderPassResourceBase	typeref:struct:RenderPassResourceImpl_T *
impl	VkZero/include/render_pass.hpp	/^  struct RenderPassResourceSetImpl_T *impl;$/;"	m	struct:VkZero::RenderPassResourceSetBase	typeref:struct:RenderPassResourceSetImpl_T *
impl	VkZero/include/shader.hpp	/^        struct ShaderImpl_T* impl;$/;"	m	class:VkZero::ShaderBase	typeref:struct:ShaderImpl_T *
impl	VkZero/include/shader_group.hpp	/^  struct ShaderGroupImpl* impl;$/;"	m	struct:VkZero::ShaderGroupBase	typeref:struct:ShaderGroupImpl *
impl	VkZero/include/shader_group.hpp	/^  struct ShaderPushConstantsImpl_T *impl;$/;"	m	struct:VkZero::ShaderPushConstantsBase	typeref:struct:ShaderPushConstantsImpl_T *
impl	VkZero/include/shader_resource_set.hpp	/^  struct ShaderResourceSetImpl_T *impl;$/;"	m	struct:VkZero::ShaderResourceSetBase	typeref:struct:ShaderResourceSetImpl_T *
impl	VkZero/include/uniform_buffer.hpp	/^    struct UniformBufferImpl_T* impl;$/;"	m	struct:VkZero::UniformBufferBase	typeref:struct:UniformBufferImpl_T *
impl	VkZero/include/window.hpp	/^    WindowImpl impl;$/;"	m	class:VkZero::Window	typeref:typename:WindowImpl
inFlightFences	VkZero/include/VkZero/Internal/frame_internal.hpp	/^  std::vector<VkFence> inFlightFences;$/;"	m	struct:VkZero::FrameImpl_T	typeref:typename:std::vector<VkFence>
inQueue	include/VoxelWorld.hpp	/^    bool inQueue;$/;"	m	struct:VoxelWorld::VoxelChunk	typeref:typename:bool
infoType	VkZero/include/VkZero/binding.hpp	/^  using infoType = Resource *;$/;"	t	struct:VkZero::ShaderBinding	typeref:typename:Resource *
infoType	VkZero/include/VkZero/binding.hpp	/^  using infoType = typename type::infoType;$/;"	t	struct:VkZero::Bind	typeref:typename:type::infoType
infoType	VkZero/include/binding.hpp	/^  using infoType = Resource *;$/;"	t	struct:VkZero::ShaderBinding	typeref:typename:Resource *
instance	VkZero/include/VkZero/Internal/core_internal.hpp	/^    VkInstance instance;$/;"	m	struct:VkZero::VkZeroCoreImpl_T	typeref:typename:VkInstance
instance	VkZero/include/VkZero/Internal/descriptor_pool_internal.hpp	/^        static DescriptorPool& instance() {$/;"	f	class:VkZero::DescriptorPool	typeref:typename:DescriptorPool &
isComplete	VkZero/include/VkZero/Internal/core_internal.hpp	/^    bool isComplete() {$/;"	f	struct:VkZero::QueueFamilyIndices	typeref:typename:bool
isDeviceSuitable	VkZero/src/core.cpp	/^bool VkZeroCoreImpl_T::isDeviceSuitable(VkPhysicalDevice device, WindowImpl_T* window) {$/;"	f	class:VkZeroCoreImpl_T	typeref:typename:bool
isKeyPressed	VkZero/src/window.cpp	/^bool Window::isKeyPressed(int key) {$/;"	f	class:Window	typeref:typename:bool
isMouseButtonPressed	VkZero/src/window.cpp	/^bool Window::isMouseButtonPressed(int button) {$/;"	f	class:Window	typeref:typename:bool
is_attachments_type	VkZero/include/VkZero/shader.hpp	/^            struct is_attachments_type : std::false_type {};$/;"	s	struct:VkZero::ShaderDetails::attachments_extractor
is_attachments_type	VkZero/include/VkZero/shader.hpp	/^            struct is_attachments_type<ShaderAttachments<Bs...>> : std::true_type {};$/;"	s	struct:VkZero::ShaderDetails::attachments_extractor
is_attachments_type	VkZero/include/shader.hpp	/^            struct is_attachments_type : std::false_type {};$/;"	s	struct:VkZero::ShaderDetails::attachments_extractor
is_attachments_type	VkZero/include/shader.hpp	/^            struct is_attachments_type<ShaderAttachments<Bs...>> : std::true_type {};$/;"	s	struct:VkZero::ShaderDetails::attachments_extractor
is_binding_valid	VkZero/include/VkZero/graphics_pipeline.hpp	/^constexpr bool is_binding_valid() {$/;"	f	namespace:VkZero::PipelineDetails	typeref:typename:bool
is_binding_valid	VkZero/include/graphics_pipeline.hpp	/^constexpr bool is_binding_valid() {$/;"	f	namespace:VkZero::PipelineDetails	typeref:typename:bool
is_bindings_type	VkZero/include/VkZero/shader.hpp	/^            struct is_bindings_type : std::false_type {};$/;"	s	struct:VkZero::ShaderDetails::bindings_extractor
is_bindings_type	VkZero/include/VkZero/shader.hpp	/^            struct is_bindings_type<ShaderBindings<Bs...>> : std::true_type {};$/;"	s	struct:VkZero::ShaderDetails::bindings_extractor
is_bindings_type	VkZero/include/shader.hpp	/^            struct is_bindings_type : std::false_type {};$/;"	s	struct:VkZero::ShaderDetails::bindings_extractor
is_bindings_type	VkZero/include/shader.hpp	/^            struct is_bindings_type<ShaderBindings<Bs...>> : std::true_type {};$/;"	s	struct:VkZero::ShaderDetails::bindings_extractor
is_push_constant_type	VkZero/include/VkZero/shader.hpp	/^            struct is_push_constant_type : std::false_type {};$/;"	s	struct:VkZero::ShaderDetails::push_constant_extractor
is_push_constant_type	VkZero/include/VkZero/shader.hpp	/^            struct is_push_constant_type<ShaderPushConstant<Bs...>> : std::true_type {};$/;"	s	struct:VkZero::ShaderDetails::push_constant_extractor
is_push_constant_type	VkZero/include/shader.hpp	/^            struct is_push_constant_type : std::false_type {};$/;"	s	struct:VkZero::ShaderDetails::push_constant_extractor
is_push_constant_type	VkZero/include/shader.hpp	/^            struct is_push_constant_type<ShaderPushConstant<Bs...>> : std::true_type {};$/;"	s	struct:VkZero::ShaderDetails::push_constant_extractor
keyCallback	VkZero/src/window.cpp	/^static void keyCallback(GLFWwindow *window, int key, int scancode, int action, int mods) {$/;"	f	typeref:typename:void	file:
lastMouseX	include/Camera.hpp	/^  float lastMouseX = 0.0f;$/;"	m	class:Camera	typeref:typename:float
lastMouseY	include/Camera.hpp	/^  float lastMouseY = 0.0f;$/;"	m	class:Camera	typeref:typename:float
lastTime	VkZero/include/VkZero/Internal/window_internal.hpp	/^  double lastTime = 0;$/;"	m	struct:VkZero::WindowImpl_T	typeref:typename:double
location	VkZero/include/VkZero/Internal/graphics_renderpass_internal.hpp	/^  int location;$/;"	m	struct:VkZero::AttachmentImpl_T	typeref:typename:int
lowerBound	src/Camera.cpp	/^    int lowerBound, upperBound, offset, modValue, shift;$/;"	m	struct:Camera::update::__anona64332f60108	typeref:typename:int	file:
mCellularDistanceFunction	include/FastNoiseLite.hpp	/^  CellularDistanceFunction mCellularDistanceFunction;$/;"	m	class:FastNoiseLite	typeref:typename:CellularDistanceFunction
mCellularJitterModifier	include/FastNoiseLite.hpp	/^  float mCellularJitterModifier;$/;"	m	class:FastNoiseLite	typeref:typename:float
mCellularReturnType	include/FastNoiseLite.hpp	/^  CellularReturnType mCellularReturnType;$/;"	m	class:FastNoiseLite	typeref:typename:CellularReturnType
mDomainWarpAmp	include/FastNoiseLite.hpp	/^  float mDomainWarpAmp;$/;"	m	class:FastNoiseLite	typeref:typename:float
mDomainWarpType	include/FastNoiseLite.hpp	/^  DomainWarpType mDomainWarpType;$/;"	m	class:FastNoiseLite	typeref:typename:DomainWarpType
mFractalBounding	include/FastNoiseLite.hpp	/^  float mFractalBounding;$/;"	m	class:FastNoiseLite	typeref:typename:float
mFractalType	include/FastNoiseLite.hpp	/^  FractalType mFractalType;$/;"	m	class:FastNoiseLite	typeref:typename:FractalType
mFrequency	include/FastNoiseLite.hpp	/^  float mFrequency;$/;"	m	class:FastNoiseLite	typeref:typename:float
mGain	include/FastNoiseLite.hpp	/^  float mGain;$/;"	m	class:FastNoiseLite	typeref:typename:float
mLacunarity	include/FastNoiseLite.hpp	/^  float mLacunarity;$/;"	m	class:FastNoiseLite	typeref:typename:float
mNoiseType	include/FastNoiseLite.hpp	/^  NoiseType mNoiseType;$/;"	m	class:FastNoiseLite	typeref:typename:NoiseType
mOctaves	include/FastNoiseLite.hpp	/^  int mOctaves;$/;"	m	class:FastNoiseLite	typeref:typename:int
mPingPongStrength	include/FastNoiseLite.hpp	/^  float mPingPongStrength;$/;"	m	class:FastNoiseLite	typeref:typename:float
mRotationType3D	include/FastNoiseLite.hpp	/^  RotationType3D mRotationType3D;$/;"	m	class:FastNoiseLite	typeref:typename:RotationType3D
mSeed	include/FastNoiseLite.hpp	/^  int mSeed;$/;"	m	class:FastNoiseLite	typeref:typename:int
mTransformType3D	include/FastNoiseLite.hpp	/^  TransformType3D mTransformType3D;$/;"	m	class:FastNoiseLite	typeref:typename:TransformType3D
mWarpTransformType3D	include/FastNoiseLite.hpp	/^  TransformType3D mWarpTransformType3D;$/;"	m	class:FastNoiseLite	typeref:typename:TransformType3D
mWeightedStrength	include/FastNoiseLite.hpp	/^  float mWeightedStrength;$/;"	m	class:FastNoiseLite	typeref:typename:float
m_ranges	VkZero/include/VkZero/Internal/shader_group_internal.hpp	/^    std::vector<VkPushConstantRange> &m_ranges;$/;"	m	struct:VkZero::ShaderGroupImpl	typeref:typename:std::vector<VkPushConstantRange> &
m_shaderGroup	VkZero/include/VkZero/Internal/graphics_pipeline_internal.hpp	/^  ShaderGroupImpl *m_shaderGroup;$/;"	m	struct:VkZero::GraphicsPipelineImpl_T	typeref:typename:ShaderGroupImpl *
m_shaderGroup	VkZero/include/VkZero/Internal/raytracing_pipeline_internal.hpp	/^  ShaderGroupImpl *m_shaderGroup;$/;"	m	struct:VkZero::RaytracingPipelineImpl_T	typeref:typename:ShaderGroupImpl *
m_shaders	VkZero/include/VkZero/Internal/shader_group_internal.hpp	/^    std::vector<VkPipelineShaderStageCreateInfo> m_shaders;$/;"	m	struct:VkZero::ShaderGroupImpl	typeref:typename:std::vector<VkPipelineShaderStageCreateInfo>
main	src/main.cpp	/^int main() {$/;"	f	typeref:typename:int
main_frag	include/shaders.hpp	/^using main_frag = VkZero::Shader<$/;"	t
main_rgen	include/shaders.hpp	/^using main_rgen = VkZero::Shader<$/;"	t
main_rmiss	include/shaders.hpp	/^using main_rmiss = VkZero::Shader<$/;"	t	typeref:typename:VkZero::Shader<"main_rmiss","bin/rmiss.spv",VkZero::SHADER_RMISS>
main_vert	include/shaders.hpp	/^using main_vert = VkZero::Shader<$/;"	t	typeref:typename:VkZero::Shader<"main_vert","bin/vert.spv",VkZero::SHADER_VERTEX>
matches	VkZero/include/VkZero/shader_library.hpp	/^        static constexpr bool matches = []() {$/;"	m	struct:VkZero::shader_index	typeref:typename:bool
matches	VkZero/include/shader_library.hpp	/^        static constexpr bool matches = []() {$/;"	m	struct:VkZero::shader_index	typeref:typename:bool
maxImages	VkZero/include/VkZero/image.hpp	/^  static constexpr int maxImages = MaxImageCount;$/;"	m	class:VkZero::MultiImage	typeref:typename:int
maxImages	VkZero/include/VkZero/image.hpp	/^  static constexpr int maxImages = MaxImageCount;$/;"	m	class:VkZero::MultiStagedImage	typeref:typename:int
maxImages	VkZero/include/image.hpp	/^  static constexpr int maxImages = MaxImageCount;$/;"	m	class:VkZero::MultiImage	typeref:typename:int
maxImages	VkZero/include/image.hpp	/^  static constexpr int maxImages = MaxImageCount;$/;"	m	class:VkZero::MultiStagedImage	typeref:typename:int
memory	VkZero/include/VkZero/Internal/image_internal.hpp	/^  VkDeviceMemory memory;$/;"	m	struct:VkZero::ImageData_T	typeref:typename:VkDeviceMemory
memory	VkZero/include/VkZero/Internal/image_internal.hpp	/^  VkDeviceMemory memory;$/;"	m	struct:VkZero::StagingData_T	typeref:typename:VkDeviceMemory
missRegion	VkZero/include/VkZero/Internal/raytracing_pipeline_internal.hpp	/^  VkStridedDeviceAddressRegionKHR missRegion;$/;"	m	struct:VkZero::RaytracingPipelineImpl_T	typeref:typename:VkStridedDeviceAddressRegionKHR
modValue	src/Camera.cpp	/^    int lowerBound, upperBound, offset, modValue, shift;$/;"	m	struct:Camera::update::__anona64332f60108	typeref:typename:int	file:
mouseSensitivity	include/Camera.hpp	/^  float mouseSensitivity = 0.1f;$/;"	m	class:Camera	typeref:typename:float
mouseX	include/Camera.hpp	/^  float mouseX = 0.0f, mouseY = 0.0f;$/;"	m	class:Camera	typeref:typename:float
mouseY	include/Camera.hpp	/^  float mouseX = 0.0f, mouseY = 0.0f;$/;"	m	class:Camera	typeref:typename:float
movementSpeed	include/Camera.hpp	/^  float movementSpeed = 7.0f;$/;"	m	class:Camera	typeref:typename:float
name	VkZero/include/VkZero/Internal/graphics_renderpass_internal.hpp	/^  const char *name;$/;"	m	struct:VkZero::AttachmentImpl_T	typeref:typename:const char *
name	VkZero/include/VkZero/Internal/graphics_renderpass_internal.hpp	/^  const char *name;$/;"	m	struct:VkZero::RenderPassResourceImpl_T	typeref:typename:const char *
name	VkZero/include/VkZero/render_pass.hpp	/^  static constexpr FixedString name = Name.value;$/;"	m	struct:VkZero::ColorAttachment	typeref:typename:FixedString
name	VkZero/include/VkZero/render_pass.hpp	/^  static constexpr FixedString name = Name.value;$/;"	m	struct:VkZero::DepthAttachment	typeref:typename:FixedString
name	VkZero/include/VkZero/render_pass.hpp	/^  static constexpr FixedString name = Name.value;$/;"	m	struct:VkZero::InputAttachment	typeref:typename:FixedString
name	VkZero/include/VkZero/render_pass.hpp	/^  static constexpr FixedString name = Name.value;$/;"	m	struct:VkZero::PreserveAttachment	typeref:typename:FixedString
name	VkZero/include/VkZero/render_pass.hpp	/^  static constexpr const char *name = Name.value;$/;"	m	class:VkZero::RenderPassResource	typeref:typename:const char *
name	VkZero/include/VkZero/shader.hpp	/^        static constexpr FixedString name = ShaderName.value;$/;"	m	class:VkZero::Shader	typeref:typename:FixedString
name	VkZero/include/render_pass.hpp	/^  static constexpr FixedString name = Name.value;$/;"	m	struct:VkZero::ColorAttachment	typeref:typename:FixedString
name	VkZero/include/render_pass.hpp	/^  static constexpr FixedString name = Name.value;$/;"	m	struct:VkZero::DepthAttachment	typeref:typename:FixedString
name	VkZero/include/render_pass.hpp	/^  static constexpr FixedString name = Name.value;$/;"	m	struct:VkZero::InputAttachment	typeref:typename:FixedString
name	VkZero/include/render_pass.hpp	/^  static constexpr FixedString name = Name.value;$/;"	m	struct:VkZero::PreserveAttachment	typeref:typename:FixedString
name	VkZero/include/render_pass.hpp	/^  static constexpr const char *name = Name.value;$/;"	m	class:VkZero::RenderPassResource	typeref:typename:const char *
name	VkZero/include/shader.hpp	/^        static constexpr FixedString name = ShaderName.value;$/;"	m	class:VkZero::Shader	typeref:typename:FixedString
new_first	VkZero/include/VkZero/render_pass.hpp	/^  using new_first = First;$/;"	t	struct:VkZero::RenderPassDetails::assign_global_locations	typeref:typename:First
new_first	VkZero/include/render_pass.hpp	/^  using new_first = First;$/;"	t	struct:VkZero::RenderPassDetails::assign_global_locations	typeref:typename:First
nextImage	VkZero/include/VkZero/Internal/window_internal.hpp	/^  bool nextImage(uint32_t &imageIndex, VkSemaphore &imageSemaphore) {$/;"	f	struct:VkZero::WindowImpl_T	typeref:typename:bool
noise	include/VoxelWorld.hpp	/^  FastNoiseLite noise;$/;"	m	class:VoxelWorld	typeref:typename:FastNoiseLite
offset	src/Camera.cpp	/^    int lowerBound, upperBound, offset, modValue, shift;$/;"	m	struct:Camera::update::__anona64332f60108	typeref:typename:int	file:
onMouseMove	src/Camera.cpp	/^void Camera::onMouseMove(double xPos, double yPos) {$/;"	f	class:Camera	typeref:typename:void
operator ==	VkZero/include/VkZero/fixed_string.hpp	/^  constexpr bool operator==(const FixedString<M> &other) const {$/;"	f	struct:VkZero::FixedString	typeref:typename:bool
operator ==	VkZero/include/fixed_string.hpp	/^  constexpr bool operator==(const FixedString<M> &other) const {$/;"	f	struct:VkZero::FixedString	typeref:typename:bool
output	compile_commands.json	/^    "output": "\/home\/hnsorens\/VoxelEngine\/bin\/voxels"$/;"	s	object:0
output	compile_commands.json	/^    "output": "\/home\/hnsorens\/VoxelEngine\/bin\/voxels"$/;"	s	object:1
output	compile_commands.json	/^    "output": "\/home\/hnsorens\/VoxelEngine\/bin\/voxels"$/;"	s	object:2
output	compile_commands.json	/^    "output": "\/home\/hnsorens\/VoxelEngine\/bin\/voxels"$/;"	s	object:3
output	compile_commands.json	/^    "output": "\/home\/hnsorens\/VoxelEngine\/bin\/voxels"$/;"	s	object:4
pairwise_compatibility_checker	VkZero/include/VkZero/shader_group.hpp	/^  struct pairwise_compatibility_checker<First, Rest...> {$/;"	s	struct:VkZero::ShaderGroupDetails::shader_binding_validator
pairwise_compatibility_checker	VkZero/include/VkZero/shader_group.hpp	/^  template <typename... Ts> struct pairwise_compatibility_checker {$/;"	s	struct:VkZero::ShaderGroupDetails::shader_binding_validator
pairwise_compatibility_checker	VkZero/include/shader_group.hpp	/^  struct pairwise_compatibility_checker<First, Rest...> {$/;"	s	struct:VkZero::ShaderGroupDetails::shader_binding_validator
pairwise_compatibility_checker	VkZero/include/shader_group.hpp	/^  template <typename... Ts> struct pairwise_compatibility_checker {$/;"	s	struct:VkZero::ShaderGroupDetails::shader_binding_validator
path	VkZero/include/VkZero/shader.hpp	/^        static constexpr FixedString path = Path.value;$/;"	m	class:VkZero::Shader	typeref:typename:FixedString
path	VkZero/include/shader.hpp	/^        static constexpr FixedString path = Path.value;$/;"	m	class:VkZero::Shader	typeref:typename:FixedString
physicalDevice	VkZero/include/VkZero/Internal/core_internal.hpp	/^    VkPhysicalDevice physicalDevice = 0;$/;"	m	struct:VkZero::VkZeroCoreImpl_T	typeref:typename:VkPhysicalDevice
physicalDevice	VkZero/include/VkZero/Internal/window_internal.hpp	/^  VkPhysicalDevice physicalDevice;$/;"	m	struct:VkZero::WindowImpl_T	typeref:typename:VkPhysicalDevice
pickPhysicalDevice	VkZero/src/core.cpp	/^void VkZeroCoreImpl_T::pickPhysicalDevice(WindowImpl_T* window) {$/;"	f	class:VkZeroCoreImpl_T	typeref:typename:void
pipeline	VkZero/include/VkZero/Internal/graphics_pipeline_internal.hpp	/^  VkPipeline pipeline = VK_NULL_HANDLE;$/;"	m	struct:VkZero::GraphicsPipelineImpl_T	typeref:typename:VkPipeline
pipeline	VkZero/include/VkZero/Internal/raytracing_pipeline_internal.hpp	/^  VkPipeline pipeline = VK_NULL_HANDLE;$/;"	m	struct:VkZero::RaytracingPipelineImpl_T	typeref:typename:VkPipeline
pipeline	VkZero/include/VkZero/render_pass.hpp	/^  Pipeline &pipeline;$/;"	m	struct:VkZero::RaytracingRenderPassPipeline	typeref:typename:Pipeline &
pipeline	VkZero/include/render_pass.hpp	/^  Pipeline &pipeline;$/;"	m	struct:VkZero::RaytracingRenderPassPipeline	typeref:typename:Pipeline &
pipelineInfo	VkZero/include/VkZero/Internal/graphics_pipeline_internal.hpp	/^  VkGraphicsPipelineCreateInfo pipelineInfo{};$/;"	m	struct:VkZero::GraphicsPipelineImpl_T	typeref:typename:VkGraphicsPipelineCreateInfo
pipelineInfo	VkZero/include/VkZero/Internal/raytracing_pipeline_internal.hpp	/^  VkRayTracingPipelineCreateInfoKHR pipelineInfo{};$/;"	m	struct:VkZero::RaytracingPipelineImpl_T	typeref:typename:VkRayTracingPipelineCreateInfoKHR
pipelineLayout	VkZero/include/VkZero/Internal/graphics_pipeline_internal.hpp	/^  VkPipelineLayout pipelineLayout;$/;"	m	struct:VkZero::GraphicsPipelineImpl_T	typeref:typename:VkPipelineLayout
pipelineLayout	VkZero/include/VkZero/Internal/raytracing_pipeline_internal.hpp	/^  VkPipelineLayout pipelineLayout;$/;"	m	struct:VkZero::RaytracingPipelineImpl_T	typeref:typename:VkPipelineLayout
pipelines	VkZero/include/VkZero/Internal/graphics_renderpass_internal.hpp	/^  std::vector<GraphicsPipelineImpl_T *> pipelines;$/;"	m	struct:VkZero::GraphicsRenderpassImpl_T	typeref:typename:std::vector<GraphicsPipelineImpl_T * >
pipelines	VkZero/include/VkZero/Internal/raytracing_renderpass_internal.hpp	/^      pipelines;$/;"	m	struct:VkZero::RaytracingRenderpassImpl_T	typeref:typename:std::vector<std::pair<RaytracingPipelineImpl_T *,PushConstantDataImpl_T * >>
pitch	include/Camera.hpp	/^  float pitch = 0.0f; \/\/ Rotation around the X-axis (up\/down)$/;"	m	class:Camera	typeref:typename:float
pollEvents	VkZero/src/window.cpp	/^void Window::pollEvents()$/;"	f	class:Window	typeref:typename:void
pollEvents	VkZero/src/window.cpp	/^void WindowImpl_T::pollEvents() {$/;"	f	class:WindowImpl_T	typeref:typename:void
pool	VkZero/include/VkZero/Internal/descriptor_pool_internal.hpp	/^        VkDescriptorPool pool;$/;"	m	class:VkZero::DescriptorPool	typeref:typename:VkDescriptorPool
populateDebugMessengerCreateInfo	VkZero/src/core.cpp	/^void VkZeroCoreImpl_T::populateDebugMessengerCreateInfo($/;"	f	class:VkZeroCoreImpl_T	typeref:typename:void
pos	src/Camera.cpp	/^    float &pos;$/;"	m	struct:Camera::update::__anona64332f60108	typeref:typename:float &	file:
position	include/VoxelWorld.hpp	/^    glm::ivec3 position;$/;"	m	struct:VoxelWorld::VoxelChunk	typeref:typename:glm::ivec3
present	VkZero/include/VkZero/Internal/window_internal.hpp	/^  bool present(uint32_t &imageIndex, VkSemaphore &signalSemaphore) {$/;"	f	struct:VkZero::WindowImpl_T	typeref:typename:bool
presentFamily	VkZero/include/VkZero/Internal/core_internal.hpp	/^    std::optional<uint32_t> presentFamily;$/;"	m	struct:VkZero::QueueFamilyIndices	typeref:typename:std::optional<uint32_t>
presentModes	VkZero/include/VkZero/Internal/window_internal.hpp	/^    std::vector<VkPresentModeKHR> presentModes;$/;"	m	struct:VkZero::WindowImpl_T::SwapChainSupportDetails	typeref:typename:std::vector<VkPresentModeKHR>
presentQueue	VkZero/include/VkZero/Internal/core_internal.hpp	/^    VkQueue presentQueue;$/;"	m	struct:VkZero::VkZeroCoreImpl_T	typeref:typename:VkQueue
processKeyboardInput	src/Camera.cpp	/^void Camera::processKeyboardInput(int key, float deltaTime) {}$/;"	f	class:Camera	typeref:typename:void
processMouseMovement	src/Camera.cpp	/^void Camera::processMouseMovement(float xoffset, float yoffset) {}$/;"	f	class:Camera	typeref:typename:void
proj	include/Camera.hpp	/^  glm::mat4 proj;$/;"	m	struct:TransformUBO	typeref:typename:glm::mat4
pushConstantData	VkZero/include/VkZero/render_pass.hpp	/^  PushConstant &pushConstantData;$/;"	m	struct:VkZero::RaytracingRenderPassPipeline	typeref:typename:PushConstant &
pushConstantData	VkZero/include/render_pass.hpp	/^  PushConstant &pushConstantData;$/;"	m	struct:VkZero::RaytracingRenderPassPipeline	typeref:typename:PushConstant &
push_constant_compatibility_validator	VkZero/include/VkZero/shader_group.hpp	/^struct push_constant_compatibility_validator<Shader,$/;"	s	namespace:VkZero::ShaderGroupDetails
push_constant_compatibility_validator	VkZero/include/shader_group.hpp	/^struct push_constant_compatibility_validator<Shader,$/;"	s	namespace:VkZero::ShaderGroupDetails
push_constant_extractor	VkZero/include/VkZero/shader.hpp	/^        struct push_constant_extractor<std::tuple<First, Rest...>> {$/;"	s	namespace:VkZero::ShaderDetails
push_constant_extractor	VkZero/include/shader.hpp	/^        struct push_constant_extractor<std::tuple<First, Rest...>> {$/;"	s	namespace:VkZero::ShaderDetails
querySwapChainSupport	VkZero/src/window.cpp	/^WindowImpl_T::SwapChainSupportDetails WindowImpl_T::querySwapChainSupport(VkPhysicalDevice devic/;"	f	class:WindowImpl_T	typeref:typename:WindowImpl_T::SwapChainSupportDetails
queueCond	include/VoxelWorld.hpp	/^  std::condition_variable queueCond;$/;"	m	class:VoxelWorld	typeref:typename:std::condition_variable
queueFamilyIndices	VkZero/include/VkZero/Internal/core_internal.hpp	/^    QueueFamilyIndices queueFamilyIndices;$/;"	m	struct:VkZero::VkZeroCoreImpl_T	typeref:typename:QueueFamilyIndices
queueMutex	include/VoxelWorld.hpp	/^  std::mutex queueMutex;$/;"	m	class:VoxelWorld	typeref:typename:std::mutex
ranges	VkZero/include/VkZero/Internal/shader_group_internal.hpp	/^  std::vector<VkPushConstantRange> ranges;$/;"	m	struct:VkZero::ShaderPushConstantsImpl_T	typeref:typename:std::vector<VkPushConstantRange>
rayCast	src/Camera.cpp	/^glm::ivec3 Camera::rayCast(VoxelWorld &voxelWorld,$/;"	f	class:Camera	typeref:typename:glm::ivec3
rayIntersectsCube	src/Camera.cpp	/^bool Camera::rayIntersectsCube(glm::vec3 corner, float size,$/;"	f	class:Camera	typeref:typename:bool
raygenRegion	VkZero/include/VkZero/Internal/raytracing_pipeline_internal.hpp	/^  VkStridedDeviceAddressRegionKHR raygenRegion;$/;"	m	struct:VkZero::RaytracingPipelineImpl_T	typeref:typename:VkStridedDeviceAddressRegionKHR
raytracingLightStorageImageW	include/VkZeroObjects.hpp	/^  VkZero::SwapImage raytracingLightStorageImageW;$/;"	m	class:VkZeroObjects	typeref:typename:VkZero::SwapImage
raytracingLightStorageImageX	include/VkZeroObjects.hpp	/^  VkZero::SwapImage raytracingLightStorageImageX;$/;"	m	class:VkZeroObjects	typeref:typename:VkZero::SwapImage
raytracingLightStorageImageY	include/VkZeroObjects.hpp	/^  VkZero::SwapImage raytracingLightStorageImageY;$/;"	m	class:VkZeroObjects	typeref:typename:VkZero::SwapImage
raytracingLightStorageImageZ	include/VkZeroObjects.hpp	/^  VkZero::SwapImage raytracingLightStorageImageZ;$/;"	m	class:VkZeroObjects	typeref:typename:VkZero::SwapImage
raytracingPipeline	include/VkZeroObjects.hpp	/^  RaytracingPipeline raytracingPipeline;  $/;"	m	class:VkZeroObjects	typeref:typename:RaytracingPipeline
raytracingPositionStorageImage	include/VkZeroObjects.hpp	/^  VkZero::SwapImage raytracingPositionStorageImage;$/;"	m	class:VkZeroObjects	typeref:typename:VkZero::SwapImage
raytracingPushConstantData	include/VkZeroObjects.hpp	/^  RaytracingPushConstantData raytracingPushConstantData;$/;"	m	class:VkZeroObjects	typeref:typename:RaytracingPushConstantData
raytracingPushConstants	include/VkZeroObjects.hpp	/^  RaytracingPushConstants raytracingPushConstants;$/;"	m	class:VkZeroObjects	typeref:typename:RaytracingPushConstants
raytracingRenderPass	include/VkZeroObjects.hpp	/^  RaytracingRenderPass_t raytracingRenderPass;$/;"	m	class:VkZeroObjects	typeref:typename:RaytracingRenderPass_t
raytracingResourceSet	include/VkZeroObjects.hpp	/^  RaytracingResourceSet raytracingResourceSet;$/;"	m	class:VkZeroObjects	typeref:typename:RaytracingResourceSet
raytracingShaderGroup	include/VkZeroObjects.hpp	/^  RaytracingShaderGroup raytracingShaderGroup;$/;"	m	class:VkZeroObjects	typeref:typename:RaytracingShaderGroup
raytracingStorageImage	include/VkZeroObjects.hpp	/^  VkZero::SwapImage raytracingStorageImage;$/;"	m	class:VkZeroObjects	typeref:typename:VkZero::SwapImage
readFile	VkZero/src/resource_manager.cpp	/^std::vector<char> ResourceManager::readFile(const std::string &filename) {$/;"	f	class:ResourceManager	typeref:typename:std::vector<char>
record	VkZero/src/graphics_renderpass.cpp	/^void GraphicsRenderpassImpl_T::record(VkCommandBuffer commandBuffer,$/;"	f	class:GraphicsRenderpassImpl_T	typeref:typename:void
record	VkZero/src/raytracing_renderpass.cpp	/^void RaytracingRenderpassImpl_T::record(VkCommandBuffer commandBuffer,$/;"	f	class:RaytracingRenderpassImpl_T	typeref:typename:void
recreateSwapchain	VkZero/include/VkZero/Internal/raytracing_renderpass_internal.hpp	/^  void recreateSwapchain(WindowImpl_T* window) override {}$/;"	f	struct:VkZero::RaytracingRenderpassImpl_T	typeref:typename:void
recreateSwapchain	VkZero/src/graphics_renderpass.cpp	/^void GraphicsRenderpassImpl_T::recreateSwapchain(WindowImpl_T* window) {$/;"	f	class:GraphicsRenderpassImpl_T	typeref:typename:void
recreateSwapchain	VkZero/src/window.cpp	/^void WindowImpl_T::recreateSwapchain() {$/;"	f	class:WindowImpl_T	typeref:typename:void
recreateWindow	VkZero/src/window.cpp	/^void WindowImpl_T::recreateWindow() {$/;"	f	class:WindowImpl_T	typeref:typename:void
renderFinishedSemaphores	VkZero/include/VkZero/Internal/frame_internal.hpp	/^  std::vector<VkSemaphore> renderFinishedSemaphores;$/;"	m	struct:VkZero::FrameImpl_T	typeref:typename:std::vector<VkSemaphore>
renderPass	VkZero/include/VkZero/Internal/graphics_renderpass_internal.hpp	/^  VkRenderPass renderPass;$/;"	m	struct:VkZero::GraphicsRenderpassImpl_T	typeref:typename:VkRenderPass
renderpasses	VkZero/include/VkZero/Internal/frame_internal.hpp	/^  std::vector<RenderpassImpl_T *> renderpasses;$/;"	m	struct:VkZero::FrameImpl_T	typeref:typename:std::vector<RenderpassImpl_T * >
requestChunk	src/VoxelWorld.cpp	/^void VoxelWorld::requestChunk(uint16_t chunkID, float priority) {$/;"	f	class:VoxelWorld	typeref:typename:void
resourceType	VkZero/include/VkZero/binding.hpp	/^  using resourceType = Resource *;$/;"	t	struct:VkZero::ResourceBinding	typeref:typename:Resource *
resourceType	VkZero/include/binding.hpp	/^  using resourceType = Resource *;$/;"	t	struct:VkZero::ResourceBinding	typeref:typename:Resource *
resource_matches	VkZero/include/VkZero/graphics_pipeline.hpp	/^constexpr bool resource_matches() {$/;"	f	namespace:VkZero::PipelineDetails	typeref:typename:bool
resource_matches	VkZero/include/graphics_pipeline.hpp	/^constexpr bool resource_matches() {$/;"	f	namespace:VkZero::PipelineDetails	typeref:typename:bool
resources	VkZero/include/VkZero/Internal/binding_internal.hpp	/^  std::vector<BindResource *> resources;$/;"	m	struct:VkZero::ResourceBindingImpl_T	typeref:typename:std::vector<BindResource * >
resources	VkZero/include/VkZero/Internal/graphics_pipeline_internal.hpp	/^  std::vector<ShaderResourceSetImpl_T *> resources;$/;"	m	struct:VkZero::GraphicsPipelineImpl_T	typeref:typename:std::vector<ShaderResourceSetImpl_T * >
resources	VkZero/include/VkZero/Internal/graphics_renderpass_internal.hpp	/^  std::unordered_map<std::string, RenderPassResourceImpl_T *> resources;$/;"	m	struct:VkZero::RenderPassResourceSetImpl_T	typeref:typename:std::unordered_map<std::string,RenderPassResourceImpl_T * >
resources	VkZero/include/VkZero/Internal/raytracing_pipeline_internal.hpp	/^  std::vector<ShaderResourceSetImpl_T *> resources;$/;"	m	struct:VkZero::RaytracingPipelineImpl_T	typeref:typename:std::vector<ShaderResourceSetImpl_T * >
resources	VkZero/src/binding.cpp	/^  std::vector<BindResource *> resources;$/;"	v	typeref:typename:std::vector<BindResource * >
run	Makefile	/^run:$/;"	t
same_count	VkZero/include/VkZero/shader_group.hpp	/^    static constexpr bool same_count =$/;"	m	struct:VkZero::ShaderGroupDetails::shader_binding_validator::binding_compatibility_checker	typeref:typename:bool
same_count	VkZero/include/shader_group.hpp	/^    static constexpr bool same_count =$/;"	m	struct:VkZero::ShaderGroupDetails::shader_binding_validator::binding_compatibility_checker	typeref:typename:bool
same_slot	VkZero/include/VkZero/shader_group.hpp	/^    static constexpr bool same_slot =$/;"	m	struct:VkZero::ShaderGroupDetails::shader_binding_validator::binding_compatibility_checker	typeref:typename:bool
same_slot	VkZero/include/shader_group.hpp	/^    static constexpr bool same_slot =$/;"	m	struct:VkZero::ShaderGroupDetails::shader_binding_validator::binding_compatibility_checker	typeref:typename:bool
same_type	VkZero/include/VkZero/shader_group.hpp	/^    static constexpr bool same_type = A::type() == B::type();$/;"	m	struct:VkZero::ShaderGroupDetails::shader_binding_validator::binding_compatibility_checker	typeref:typename:bool
same_type	VkZero/include/shader_group.hpp	/^    static constexpr bool same_type = A::type() == B::type();$/;"	m	struct:VkZero::ShaderGroupDetails::shader_binding_validator::binding_compatibility_checker	typeref:typename:bool
sampler	VkZero/include/VkZero/Internal/image_internal.hpp	/^  VkSampler sampler;$/;"	m	class:VkZero::Image	typeref:typename:VkSampler
sbtBuffer	VkZero/include/VkZero/Internal/raytracing_pipeline_internal.hpp	/^  VkBuffer sbtBuffer;$/;"	m	struct:VkZero::RaytracingPipelineImpl_T	typeref:typename:VkBuffer
sbtMemory	VkZero/include/VkZero/Internal/raytracing_pipeline_internal.hpp	/^  VkDeviceMemory sbtMemory;$/;"	m	struct:VkZero::RaytracingPipelineImpl_T	typeref:typename:VkDeviceMemory
sbtSize	VkZero/include/VkZero/Internal/raytracing_pipeline_internal.hpp	/^  VkDeviceSize sbtSize;$/;"	m	struct:VkZero::RaytracingPipelineImpl_T	typeref:typename:VkDeviceSize
setupDebugMessenger	VkZero/src/core.cpp	/^void VkZeroCoreImpl_T::setupDebugMessenger() {$/;"	f	class:VkZeroCoreImpl_T	typeref:typename:void
shaderInfo	VkZero/include/VkZero/Internal/shader_internal.hpp	/^        VkPipelineShaderStageCreateInfo shaderInfo {};$/;"	m	struct:VkZero::ShaderImpl_T	typeref:typename:VkPipelineShaderStageCreateInfo
shaderModule	VkZero/include/VkZero/Internal/shader_internal.hpp	/^        VkShaderModule shaderModule;$/;"	m	struct:VkZero::ShaderImpl_T	typeref:typename:VkShaderModule
shaderStages	VkZero/include/VkZero/shader_group.hpp	/^  static constexpr int shaderStages = ShaderStages;$/;"	m	struct:VkZero::PushConstant	typeref:typename:int
shaderStages	VkZero/include/VkZero/shader_group.hpp	/^  uint32_t shaderStages;$/;"	m	struct:VkZero::ShaderPushConstantData	typeref:typename:uint32_t
shaderStages	VkZero/include/shader_group.hpp	/^  static constexpr int shaderStages = ShaderStages;$/;"	m	struct:VkZero::PushConstant	typeref:typename:int
shaderStages	VkZero/include/shader_group.hpp	/^  uint32_t shaderStages;$/;"	m	struct:VkZero::ShaderPushConstantData	typeref:typename:uint32_t
shader_binding_validator	VkZero/include/VkZero/shader_group.hpp	/^template <typename... Shaders> struct shader_binding_validator {$/;"	s	namespace:VkZero::ShaderGroupDetails
shader_binding_validator	VkZero/include/shader_group.hpp	/^template <typename... Shaders> struct shader_binding_validator {$/;"	s	namespace:VkZero::ShaderGroupDetails
shader_binding_validity_checker	VkZero/include/VkZero/graphics_pipeline.hpp	/^constexpr bool shader_binding_validity_checker() {$/;"	f	namespace:VkZero::PipelineDetails	typeref:typename:bool
shader_binding_validity_checker	VkZero/include/graphics_pipeline.hpp	/^constexpr bool shader_binding_validity_checker() {$/;"	f	namespace:VkZero::PipelineDetails	typeref:typename:bool
shader_group_validity_checker	VkZero/include/VkZero/graphics_pipeline.hpp	/^constexpr bool shader_group_validity_checker() {$/;"	f	namespace:VkZero::PipelineDetails	typeref:typename:bool
shader_group_validity_checker	VkZero/include/graphics_pipeline.hpp	/^constexpr bool shader_group_validity_checker() {$/;"	f	namespace:VkZero::PipelineDetails	typeref:typename:bool
shader_index	VkZero/include/VkZero/shader_library.hpp	/^    struct shader_index<Name, First, Rest...> {$/;"	s	namespace:VkZero
shader_index	VkZero/include/VkZero/shader_library.hpp	/^    struct shader_index<Name> {$/;"	s	namespace:VkZero
shader_index	VkZero/include/shader_library.hpp	/^    struct shader_index<Name, First, Rest...> {$/;"	s	namespace:VkZero
shader_index	VkZero/include/shader_library.hpp	/^    struct shader_index<Name> {$/;"	s	namespace:VkZero
shaders	VkZero/include/VkZero/shader_group.hpp	/^    using shaders = std::tuple<Shaders...>;$/;"	t	class:VkZero::ShaderGroup	typeref:typename:std::tuple<Shaders...>
shaders	VkZero/include/VkZero/shader_library.hpp	/^        std::tuple<Shaders...> shaders;$/;"	m	class:VkZero::ShaderLibrary	typeref:typename:std::tuple<Shaders...>
shaders	VkZero/include/shader_group.hpp	/^    using shaders = std::tuple<Shaders...>;$/;"	t	class:VkZero::ShaderGroup	typeref:typename:std::tuple<Shaders...>
shaders	VkZero/include/shader_library.hpp	/^        std::tuple<Shaders...> shaders;$/;"	m	class:VkZero::ShaderLibrary	typeref:typename:std::tuple<Shaders...>
shaders	include/VkZeroObjects.hpp	/^  GlobalShaderLibrary shaders;$/;"	m	class:VkZeroObjects	typeref:typename:GlobalShaderLibrary
shift	src/Camera.cpp	/^    int lowerBound, upperBound, offset, modValue, shift;$/;"	m	struct:Camera::update::__anona64332f60108	typeref:typename:int	file:
shouldClose	VkZero/src/window.cpp	/^bool Window::shouldClose()$/;"	f	class:Window	typeref:typename:bool
shouldClose	VkZero/src/window.cpp	/^bool WindowImpl_T::shouldClose() const {$/;"	f	class:WindowImpl_T	typeref:typename:bool
showCursor	VkZero/src/window.cpp	/^void Window::showCursor() {$/;"	f	class:Window	typeref:typename:void
size	VkZero/include/VkZero/Internal/uniform_buffer_internal.hpp	/^  size_t size;$/;"	m	struct:VkZero::UniformBufferImpl_T	typeref:typename:size_t
sortChunks	src/VoxelWorld.cpp	/^void VoxelWorld::sortChunks() {$/;"	f	class:VoxelWorld	typeref:typename:void
stageBuffers	VkZero/include/VkZero/Internal/image_internal.hpp	/^  std::vector<StagingData_T*> stageBuffers;$/;"	m	class:VkZero::Image	typeref:typename:std::vector<StagingData_T * >
stages	VkZero/include/VkZero/Internal/binding_internal.hpp	/^  VkShaderStageFlags stages;$/;"	m	struct:VkZero::ResourceBindingImpl_T	typeref:typename:VkShaderStageFlags
stages	VkZero/src/binding.cpp	/^  VkShaderStageFlags stages;$/;"	v	typeref:typename:VkShaderStageFlags
startWorkers	src/VoxelWorld.cpp	/^void VoxelWorld::startWorkers(int numThreads) {$/;"	f	class:VoxelWorld	typeref:typename:void
stopThreads	include/VoxelWorld.hpp	/^  bool stopThreads = false;$/;"	m	class:VoxelWorld	typeref:typename:bool
stopWorkers	src/VoxelWorld.cpp	/^void VoxelWorld::stopWorkers() {$/;"	f	class:VoxelWorld	typeref:typename:void
structureSize	VkZero/include/VkZero/shader_group.hpp	/^  uint32_t structureSize;$/;"	m	struct:VkZero::ShaderPushConstantData	typeref:typename:uint32_t
structureSize	VkZero/include/shader_group.hpp	/^  uint32_t structureSize;$/;"	m	struct:VkZero::ShaderPushConstantData	typeref:typename:uint32_t
surface	VkZero/include/VkZero/Internal/window_internal.hpp	/^  VkSurfaceKHR surface;$/;"	m	struct:VkZero::WindowImpl_T	typeref:typename:VkSurfaceKHR
swapChain	VkZero/include/VkZero/Internal/window_internal.hpp	/^  VkSwapchainKHR swapChain;$/;"	m	struct:VkZero::WindowImpl_T	typeref:typename:VkSwapchainKHR
swapChainExtent	VkZero/include/VkZero/Internal/window_internal.hpp	/^  VkExtent2D swapChainExtent;$/;"	m	struct:VkZero::WindowImpl_T	typeref:typename:VkExtent2D
swapChainImageFormat	VkZero/include/VkZero/Internal/window_internal.hpp	/^  VkFormat swapChainImageFormat;$/;"	m	struct:VkZero::WindowImpl_T	typeref:typename:VkFormat
swapchainImageCount	VkZero/include/VkZero/Internal/window_internal.hpp	/^  uint32_t swapchainImageCount;$/;"	m	struct:VkZero::WindowImpl_T	typeref:typename:uint32_t
swapchainImages	VkZero/include/VkZero/Internal/window_internal.hpp	/^  AttachmentImage swapchainImages;$/;"	m	struct:VkZero::WindowImpl_T	typeref:typename:AttachmentImage
tail	VkZero/include/VkZero/render_pass.hpp	/^  using tail = typename filter_preserve_input<std::tuple<Rest...>, All>::type;$/;"	t	struct:VkZero::RenderPassDetails::filter_preserve_input	typeref:typename:filter_preserve_input<std::tuple<Rest...>,All>::type
tail	VkZero/include/render_pass.hpp	/^  using tail = typename filter_preserve_input<std::tuple<Rest...>, All>::type;$/;"	t	struct:VkZero::RenderPassDetails::filter_preserve_input	typeref:typename:filter_preserve_input<std::tuple<Rest...>,All>::type
transitionImageLayout	VkZero/include/VkZero/Internal/image_internal.hpp	/^  void transitionImageLayout(VkCommandBuffer commandBuffer, VkImage image,$/;"	f	class:VkZero::Image	typeref:typename:void
transitionImageLayout	VkZero/include/VkZero/Internal/image_internal.hpp	/^  void transitionImageLayout(VkImage image, VkFormat format,$/;"	f	class:VkZero::Image	typeref:typename:void
tuple_compatibility_checker	VkZero/include/VkZero/shader_group.hpp	/^  struct tuple_compatibility_checker<std::tuple<Ts...>> {$/;"	s	struct:VkZero::ShaderGroupDetails::shader_binding_validator
tuple_compatibility_checker	VkZero/include/shader_group.hpp	/^  struct tuple_compatibility_checker<std::tuple<Ts...>> {$/;"	s	struct:VkZero::ShaderGroupDetails::shader_binding_validator
tuple_for_each	VkZero/include/VkZero/render_pass.hpp	/^constexpr void tuple_for_each(Tuple &&t, Func &&f) {$/;"	f	namespace:VkZero	typeref:typename:void
tuple_for_each	VkZero/include/render_pass.hpp	/^constexpr void tuple_for_each(Tuple &&t, Func &&f) {$/;"	f	namespace:VkZero	typeref:typename:void
tuple_for_each_impl	VkZero/include/VkZero/render_pass.hpp	/^constexpr void tuple_for_each_impl(Tuple &&t, Func &&f,$/;"	f	namespace:VkZero	typeref:typename:void
tuple_for_each_impl	VkZero/include/render_pass.hpp	/^constexpr void tuple_for_each_impl(Tuple &&t, Func &&f,$/;"	f	namespace:VkZero	typeref:typename:void
tuple_push_back	VkZero/include/VkZero/render_pass.hpp	/^struct tuple_push_back<std::tuple<Ts...>, T> {$/;"	s	namespace:VkZero::RenderPassDetails
tuple_push_back	VkZero/include/render_pass.hpp	/^struct tuple_push_back<std::tuple<Ts...>, T> {$/;"	s	namespace:VkZero::RenderPassDetails
type	VkZero/include/VkZero/Internal/binding_internal.hpp	/^  VkDescriptorType type;$/;"	m	struct:VkZero::ResourceBindingImpl_T	typeref:typename:VkDescriptorType
type	VkZero/include/VkZero/Internal/graphics_renderpass_internal.hpp	/^  int type;$/;"	m	struct:VkZero::AttachmentImpl_T	typeref:typename:int
type	VkZero/include/VkZero/binding.hpp	/^    using type = typename std::conditional_t<$/;"	t	struct:VkZero::CombinedBindings::filter_duplicates
type	VkZero/include/VkZero/binding.hpp	/^  static constexpr DescriptorType type() { return ResourceType; }$/;"	f	struct:VkZero::ResourceBinding	typeref:typename:DescriptorType
type	VkZero/include/VkZero/binding.hpp	/^  static constexpr DescriptorType type() { return ResourceType; }$/;"	f	struct:VkZero::ShaderBinding	typeref:typename:DescriptorType
type	VkZero/include/VkZero/binding.hpp	/^  using type = typename filter_duplicates<AllBindings>::type;$/;"	t	struct:VkZero::CombinedBindings	typeref:typename:filter_duplicates<AllBindings>::type
type	VkZero/include/VkZero/binding.hpp	/^  using type = typename std::conditional_t<$/;"	t	struct:VkZero::find_binding
type	VkZero/include/VkZero/render_pass.hpp	/^    using type = ColorAttachment<N, F, Start>;$/;"	t	struct:VkZero::RenderPassDetails::assign_global_locations::update_location	typeref:typename:ColorAttachment<N,F,Start>
type	VkZero/include/VkZero/render_pass.hpp	/^    using type = DepthAttachment<N, F, Start>;$/;"	t	struct:VkZero::RenderPassDetails::assign_global_locations::update_location	typeref:typename:DepthAttachment<N,F,Start>
type	VkZero/include/VkZero/render_pass.hpp	/^    using type = InputAttachment<N, F, Start>;$/;"	t	struct:VkZero::RenderPassDetails::assign_global_locations::update_location	typeref:typename:InputAttachment<N,F,Start>
type	VkZero/include/VkZero/render_pass.hpp	/^    using type = T;$/;"	t	struct:VkZero::RenderPassDetails::assign_global_locations::update_location	typeref:typename:T
type	VkZero/include/VkZero/render_pass.hpp	/^  using type = decltype(std::tuple_cat($/;"	t	struct:VkZero::RenderPassDetails::assign_global_locations
type	VkZero/include/VkZero/render_pass.hpp	/^  using type = std::conditional_t<$/;"	t	struct:VkZero::RenderPassDetails::filter_preserve_input
type	VkZero/include/VkZero/render_pass.hpp	/^  using type = std::tuple<Ts..., T>;$/;"	t	struct:VkZero::RenderPassDetails::tuple_push_back	typeref:typename:std::tuple<Ts...,T>
type	VkZero/include/VkZero/shader.hpp	/^            using type = std::conditional_t<$/;"	t	struct:VkZero::ShaderDetails::attachments_extractor	typeref:typename:std::conditional_t<is_attachments_type<First>::value,First,typename attachments_extractor<std::tuple<Rest...>>::type>
type	VkZero/include/VkZero/shader.hpp	/^            using type = std::conditional_t<$/;"	t	struct:VkZero::ShaderDetails::bindings_extractor	typeref:typename:std::conditional_t<is_bindings_type<First>::value,First,typename bindings_extractor<std::tuple<Rest...>>::type>
type	VkZero/include/VkZero/shader.hpp	/^            using type = std::conditional_t<$/;"	t	struct:VkZero::ShaderDetails::push_constant_extractor	typeref:typename:std::conditional_t<is_push_constant_type<First>::value,First,typename push_constant_extractor<std::tuple<Rest...>>::type>
type	VkZero/include/VkZero/shader_library.hpp	/^        using type = decltype($/;"	t	struct:VkZero::DescriptorTypes
type	VkZero/include/VkZero/shader_library.hpp	/^        using type = decltype($/;"	t	struct:VkZero::get_shader_bindings
type	VkZero/include/VkZero/shader_library.hpp	/^        using type = std::conditional_t<$/;"	t	struct:VkZero::unique_types
type	VkZero/include/binding.hpp	/^  static constexpr DescriptorType type() { return ResourceType; }$/;"	f	struct:VkZero::ResourceBinding	typeref:typename:DescriptorType
type	VkZero/include/binding.hpp	/^  static constexpr DescriptorType type() { return ResourceType; }$/;"	f	struct:VkZero::ShaderBinding	typeref:typename:DescriptorType
type	VkZero/include/render_pass.hpp	/^    using type = ColorAttachment<N, F, Start>;$/;"	t	struct:VkZero::RenderPassDetails::assign_global_locations::update_location	typeref:typename:ColorAttachment<N,F,Start>
type	VkZero/include/render_pass.hpp	/^    using type = DepthAttachment<N, F, Start>;$/;"	t	struct:VkZero::RenderPassDetails::assign_global_locations::update_location	typeref:typename:DepthAttachment<N,F,Start>
type	VkZero/include/render_pass.hpp	/^    using type = InputAttachment<N, F, Start>;$/;"	t	struct:VkZero::RenderPassDetails::assign_global_locations::update_location	typeref:typename:InputAttachment<N,F,Start>
type	VkZero/include/render_pass.hpp	/^    using type = T;$/;"	t	struct:VkZero::RenderPassDetails::assign_global_locations::update_location	typeref:typename:T
type	VkZero/include/render_pass.hpp	/^  using type = decltype(std::tuple_cat($/;"	t	struct:VkZero::RenderPassDetails::assign_global_locations
type	VkZero/include/render_pass.hpp	/^  using type = std::conditional_t<$/;"	t	struct:VkZero::RenderPassDetails::filter_preserve_input
type	VkZero/include/render_pass.hpp	/^  using type = std::tuple<Ts..., T>;$/;"	t	struct:VkZero::RenderPassDetails::tuple_push_back	typeref:typename:std::tuple<Ts...,T>
type	VkZero/include/shader.hpp	/^            using type = std::conditional_t<$/;"	t	struct:VkZero::ShaderDetails::attachments_extractor	typeref:typename:std::conditional_t<is_attachments_type<First>::value,First,typename attachments_extractor<std::tuple<Rest...>>::type>
type	VkZero/include/shader.hpp	/^            using type = std::conditional_t<$/;"	t	struct:VkZero::ShaderDetails::bindings_extractor	typeref:typename:std::conditional_t<is_bindings_type<First>::value,First,typename bindings_extractor<std::tuple<Rest...>>::type>
type	VkZero/include/shader.hpp	/^            using type = std::conditional_t<$/;"	t	struct:VkZero::ShaderDetails::push_constant_extractor	typeref:typename:std::conditional_t<is_push_constant_type<First>::value,First,typename push_constant_extractor<std::tuple<Rest...>>::type>
type	VkZero/include/shader_library.hpp	/^        using type = decltype($/;"	t	struct:VkZero::DescriptorTypes
type	VkZero/include/shader_library.hpp	/^        using type = decltype($/;"	t	struct:VkZero::get_shader_bindings
type	VkZero/include/shader_library.hpp	/^        using type = std::conditional_t<$/;"	t	struct:VkZero::unique_types
type	VkZero/src/binding.cpp	/^  VkDescriptorType type;$/;"	v	typeref:typename:VkDescriptorType
types	VkZero/include/VkZero/shader_library.hpp	/^        using types = std::tuple<Shaders...>;$/;"	t	class:VkZero::ShaderLibrary	typeref:typename:std::tuple<Shaders...>
types	VkZero/include/shader_library.hpp	/^        using types = std::tuple<Shaders...>;$/;"	t	class:VkZero::ShaderLibrary	typeref:typename:std::tuple<Shaders...>
typess	VkZero/include/VkZero/shader_library.hpp	/^        using typess = typename unique_types<typename DescriptorTypes<typename get_shader_bindin/;"	t	class:VkZero::ShaderLibrary	typeref:typename:unique_types<typename DescriptorTypes<typename get_shader_bindings<types>::type>::type>::type
typess	VkZero/include/shader_library.hpp	/^        using typess = typename unique_types<typename DescriptorTypes<typename get_shader_bindin/;"	t	class:VkZero::ShaderLibrary	typeref:typename:unique_types<typename DescriptorTypes<typename get_shader_bindings<types>::type>::type>::type
ubo	VkZero/include/VkZero/Internal/uniform_buffer_internal.hpp	/^  void* ubo;$/;"	m	struct:VkZero::UniformBufferImpl_T	typeref:typename:void *
ubo	include/Camera.hpp	/^  TransformUBO ubo{};$/;"	m	class:Camera	typeref:typename:TransformUBO
uniformBuffer	VkZero/include/VkZero/Internal/uniform_buffer_internal.hpp	/^  std::vector<VkBuffer> uniformBuffer;$/;"	m	struct:VkZero::UniformBufferImpl_T	typeref:typename:std::vector<VkBuffer>
uniformBuffer	include/Camera.hpp	/^  VkZero::UniformBuffer<TransformUBO> uniformBuffer;$/;"	m	class:Camera	typeref:typename:VkZero::UniformBuffer<TransformUBO>
uniformBufferMemory	VkZero/include/VkZero/Internal/uniform_buffer_internal.hpp	/^  std::vector<VkDeviceMemory> uniformBufferMemory;$/;"	m	struct:VkZero::UniformBufferImpl_T	typeref:typename:std::vector<VkDeviceMemory>
uniformBuffersMapped	VkZero/include/VkZero/Internal/uniform_buffer_internal.hpp	/^  std::vector<void *> uniformBuffersMapped;$/;"	m	struct:VkZero::UniformBufferImpl_T	typeref:typename:std::vector<void * >
unique_types	VkZero/include/VkZero/shader_library.hpp	/^    struct unique_types<std::tuple<First, Rest...>> {$/;"	s	namespace:VkZero
unique_types	VkZero/include/shader_library.hpp	/^    struct unique_types<std::tuple<First, Rest...>> {$/;"	s	namespace:VkZero
update	VkZero/src/uniform_buffer.cpp	/^void UniformBufferBase::update(int currentFrame)$/;"	f	class:UniformBufferBase	typeref:typename:void
update	VkZero/src/uniform_buffer.cpp	/^void UniformBufferImpl_T::update(int currentFrame)$/;"	f	class:UniformBufferImpl_T	typeref:typename:void
update	src/Camera.cpp	/^void Camera::update(VkZero::Window &Window,$/;"	f	class:Camera	typeref:typename:void
updateVoxelChunkMap	src/VoxelWorld.cpp	/^void VoxelWorld::updateVoxelChunkMap(int modValue, int offset) {$/;"	f	class:VoxelWorld	typeref:typename:void
updateVoxels	src/VoxelWorld.cpp	/^void VoxelWorld::updateVoxels(void* commandBuffer, int currentImage) {$/;"	f	class:VoxelWorld	typeref:typename:void
update_location	VkZero/include/VkZero/render_pass.hpp	/^  struct update_location<ColorAttachment<N, F, L>> {$/;"	s	struct:VkZero::RenderPassDetails::assign_global_locations
update_location	VkZero/include/VkZero/render_pass.hpp	/^  struct update_location<DepthAttachment<N, F, L>> {$/;"	s	struct:VkZero::RenderPassDetails::assign_global_locations
update_location	VkZero/include/VkZero/render_pass.hpp	/^  struct update_location<InputAttachment<N, F, L>> {$/;"	s	struct:VkZero::RenderPassDetails::assign_global_locations
update_location	VkZero/include/VkZero/render_pass.hpp	/^  template <typename T> struct update_location {$/;"	s	struct:VkZero::RenderPassDetails::assign_global_locations
update_location	VkZero/include/render_pass.hpp	/^  struct update_location<ColorAttachment<N, F, L>> {$/;"	s	struct:VkZero::RenderPassDetails::assign_global_locations
update_location	VkZero/include/render_pass.hpp	/^  struct update_location<DepthAttachment<N, F, L>> {$/;"	s	struct:VkZero::RenderPassDetails::assign_global_locations
update_location	VkZero/include/render_pass.hpp	/^  struct update_location<InputAttachment<N, F, L>> {$/;"	s	struct:VkZero::RenderPassDetails::assign_global_locations
update_location	VkZero/include/render_pass.hpp	/^  template <typename T> struct update_location {$/;"	s	struct:VkZero::RenderPassDetails::assign_global_locations
upperBound	src/Camera.cpp	/^    int lowerBound, upperBound, offset, modValue, shift;$/;"	m	struct:Camera::update::__anona64332f60108	typeref:typename:int	file:
validationLayers	VkZero/src/core.cpp	/^const std::vector<const char *> validationLayers = {$/;"	v	typeref:typename:const std::vector<const char * >
value	VkZero/include/VkZero/binding.hpp	/^  static constexpr bool value =$/;"	m	struct:VkZero::has_binding	typeref:typename:bool
value	VkZero/include/VkZero/fixed_string.hpp	/^  char value[N] = {};$/;"	m	struct:VkZero::FixedString	typeref:typename:char[]
value	VkZero/include/VkZero/render_pass.hpp	/^  using value = decltype(std::tuple_cat($/;"	t	struct:VkZero::RenderPassDetails::get_all_attachments
value	VkZero/include/VkZero/render_pass.hpp	/^  using value = typename assign_global_locations<filtered>::type;$/;"	t	struct:VkZero::RenderPassDetails::get_common_attachments	typeref:typename:assign_global_locations<filtered>::type
value	VkZero/include/VkZero/shader.hpp	/^            static constexpr bool value = $/;"	m	struct:VkZero::ShaderDetails::duplicate_binding_checker	typeref:typename:bool
value	VkZero/include/VkZero/shader.hpp	/^            static constexpr bool value = false;$/;"	m	struct:VkZero::ShaderDetails::duplicate_binding_checker	typeref:typename:bool
value	VkZero/include/VkZero/shader_group.hpp	/^    static constexpr bool value = !same_slot || (same_type && same_count);$/;"	m	struct:VkZero::ShaderGroupDetails::shader_binding_validator::binding_compatibility_checker	typeref:typename:bool
value	VkZero/include/VkZero/shader_group.hpp	/^    static constexpr bool value = pairwise_compatibility_checker<Ts...>::value;$/;"	m	struct:VkZero::ShaderGroupDetails::shader_binding_validator::tuple_compatibility_checker	typeref:typename:bool
value	VkZero/include/VkZero/shader_group.hpp	/^    static constexpr bool value = true; \/\/ Empty pack or single element is fine$/;"	m	struct:VkZero::ShaderGroupDetails::shader_binding_validator::pairwise_compatibility_checker	typeref:typename:bool
value	VkZero/include/VkZero/shader_group.hpp	/^    static constexpr bool value =$/;"	m	struct:VkZero::ShaderGroupDetails::shader_binding_validator::pairwise_compatibility_checker	typeref:typename:bool
value	VkZero/include/VkZero/shader_group.hpp	/^  static constexpr bool value =$/;"	m	struct:VkZero::ShaderGroupDetails::push_constant_compatibility_validator	typeref:typename:bool
value	VkZero/include/VkZero/shader_group.hpp	/^  static constexpr bool value =$/;"	m	struct:VkZero::ShaderGroupDetails::shader_binding_validator	typeref:typename:bool
value	VkZero/include/VkZero/shader_group.hpp	/^  using value = decltype(std::tuple_cat($/;"	t	struct:VkZero::ShaderGroupDetails::attachment_collector
value	VkZero/include/VkZero/shader_library.hpp	/^        static constexpr DescriptorType value = Type;$/;"	m	struct:VkZero::DescriptorTypeObject	typeref:typename:DescriptorType
value	VkZero/include/VkZero/shader_library.hpp	/^        static constexpr int value = -1;$/;"	m	struct:VkZero::shader_index	typeref:typename:int
value	VkZero/include/VkZero/shader_library.hpp	/^        static constexpr int value = matches ? 0 : (1 + shader_index<Name, Rest...>::value);$/;"	m	struct:VkZero::shader_index	typeref:typename:int
value	VkZero/include/VkZero/shader_resource_set.hpp	/^  static constexpr bool value = false;$/;"	m	struct:VkZero::ShaderResourceSetDetails::duplicate_binding_number_checker	typeref:typename:bool
value	VkZero/include/VkZero/shader_resource_set.hpp	/^  static constexpr bool value =$/;"	m	struct:VkZero::ShaderResourceSetDetails::duplicate_binding_number_checker	typeref:typename:bool
value	VkZero/include/fixed_string.hpp	/^  char value[N] = {};$/;"	m	struct:VkZero::FixedString	typeref:typename:char[]
value	VkZero/include/render_pass.hpp	/^  using value = decltype(std::tuple_cat($/;"	t	struct:VkZero::RenderPassDetails::get_all_attachments
value	VkZero/include/render_pass.hpp	/^  using value = typename assign_global_locations<filtered>::type;$/;"	t	struct:VkZero::RenderPassDetails::get_common_attachments	typeref:typename:assign_global_locations<filtered>::type
value	VkZero/include/shader.hpp	/^            static constexpr bool value = $/;"	m	struct:VkZero::ShaderDetails::duplicate_binding_checker	typeref:typename:bool
value	VkZero/include/shader.hpp	/^            static constexpr bool value = false;$/;"	m	struct:VkZero::ShaderDetails::duplicate_binding_checker	typeref:typename:bool
value	VkZero/include/shader_group.hpp	/^    static constexpr bool value = !same_slot || (same_type && same_count);$/;"	m	struct:VkZero::ShaderGroupDetails::shader_binding_validator::binding_compatibility_checker	typeref:typename:bool
value	VkZero/include/shader_group.hpp	/^    static constexpr bool value = pairwise_compatibility_checker<Ts...>::value;$/;"	m	struct:VkZero::ShaderGroupDetails::shader_binding_validator::tuple_compatibility_checker	typeref:typename:bool
value	VkZero/include/shader_group.hpp	/^    static constexpr bool value = true; \/\/ Empty pack or single element is fine$/;"	m	struct:VkZero::ShaderGroupDetails::shader_binding_validator::pairwise_compatibility_checker	typeref:typename:bool
value	VkZero/include/shader_group.hpp	/^    static constexpr bool value =$/;"	m	struct:VkZero::ShaderGroupDetails::shader_binding_validator::pairwise_compatibility_checker	typeref:typename:bool
value	VkZero/include/shader_group.hpp	/^  static constexpr bool value =$/;"	m	struct:VkZero::ShaderGroupDetails::push_constant_compatibility_validator	typeref:typename:bool
value	VkZero/include/shader_group.hpp	/^  static constexpr bool value =$/;"	m	struct:VkZero::ShaderGroupDetails::shader_binding_validator	typeref:typename:bool
value	VkZero/include/shader_group.hpp	/^  using value = decltype(std::tuple_cat($/;"	t	struct:VkZero::ShaderGroupDetails::attachment_collector
value	VkZero/include/shader_library.hpp	/^        static constexpr DescriptorType value = Type;$/;"	m	struct:VkZero::DescriptorTypeObject	typeref:typename:DescriptorType
value	VkZero/include/shader_library.hpp	/^        static constexpr int value = -1;$/;"	m	struct:VkZero::shader_index	typeref:typename:int
value	VkZero/include/shader_library.hpp	/^        static constexpr int value = matches ? 0 : (1 + shader_index<Name, Rest...>::value);$/;"	m	struct:VkZero::shader_index	typeref:typename:int
value	VkZero/include/shader_resource_set.hpp	/^  static constexpr bool value = false;$/;"	m	struct:VkZero::ShaderResourceSetDetails::duplicate_binding_number_checker	typeref:typename:bool
value	VkZero/include/shader_resource_set.hpp	/^  static constexpr bool value =$/;"	m	struct:VkZero::ShaderResourceSetDetails::duplicate_binding_number_checker	typeref:typename:bool
view	VkZero/include/VkZero/Internal/image_internal.hpp	/^  VkImageView view;$/;"	m	struct:VkZero::ImageData_T	typeref:typename:VkImageView
view	include/Camera.hpp	/^  glm::mat4 view;$/;"	m	struct:TransformUBO	typeref:typename:glm::mat4
vkCmdTraceRaysKHR	VkZero/include/VkZero/Internal/raytracing_renderpass_internal.hpp	/^  PFN_vkCmdTraceRaysKHR vkCmdTraceRaysKHR;$/;"	m	struct:VkZero::RaytracingRenderpassImpl_T	typeref:typename:PFN_vkCmdTraceRaysKHR
vkZero_core	VkZero/src/core.cpp	/^VkZeroCoreImpl_T* VkZero::vkZero_core = NULL;$/;"	m	class:VkZero	typeref:typename:VkZeroCoreImpl_T *
vox	src/VoxelWorld.cpp	/^#define vox(/;"	d	file:
voxChunk	src/Camera.cpp	/^#define voxChunk(/;"	d	file:
voxChunk	src/VoxelWorld.cpp	/^#define voxChunk(/;"	d	file:
voxelChunkMapData	include/VoxelWorld.hpp	/^  uint16_t *voxelChunkMapData;$/;"	m	class:VoxelWorld	typeref:typename:uint16_t *
voxelChunkMapImage	include/VoxelWorld.hpp	/^  VkZero::StagedSharedImage voxelChunkMapImage;$/;"	m	class:VoxelWorld	typeref:typename:VkZero::StagedSharedImage
voxelData	include/VoxelWorld.hpp	/^  std::vector<VoxelChunk> voxelData;$/;"	m	class:VoxelWorld	typeref:typename:std::vector<VoxelChunk>
voxelImages	include/VoxelWorld.hpp	/^  std::vector<VkZero::StagedSharedImage> voxelImages;$/;"	m	class:VoxelWorld	typeref:typename:std::vector<VkZero::StagedSharedImage>
voxel_base	include/VoxelWorld.hpp	/^#define voxel_base(/;"	d
voxel_mat	include/VoxelWorld.hpp	/^#define voxel_mat(/;"	d
width	VkZero/include/VkZero/Internal/graphics_renderpass_internal.hpp	/^  uint32_t width, height;$/;"	m	struct:VkZero::GraphicsRenderpassImpl_T	typeref:typename:uint32_t
width	VkZero/include/VkZero/Internal/image_internal.hpp	/^  uint32_t width, height, depth;$/;"	m	class:VkZero::Image	typeref:typename:uint32_t
width	VkZero/include/VkZero/Internal/raytracing_pipeline_internal.hpp	/^  uint32_t width;$/;"	m	struct:VkZero::RaytracingPipelineImpl_T	typeref:typename:uint32_t
window	VkZero/include/VkZero/Internal/frame_internal.hpp	/^  WindowImpl_T *window;$/;"	m	struct:VkZero::FrameImpl_T	typeref:typename:WindowImpl_T *
window	VkZero/include/VkZero/Internal/window_internal.hpp	/^  GLFWwindow *window;$/;"	m	struct:VkZero::WindowImpl_T	typeref:typename:GLFWwindow *
workers	include/VoxelWorld.hpp	/^  std::vector<std::thread> workers;$/;"	m	class:VoxelWorld	typeref:typename:std::vector<std::thread>
write	VkZero/src/binding.cpp	/^  void ResourceBindingImpl_T::write(VkDevice device, VkDescriptorSet &descriptorSet, int element/;"	f	class:ResourceBindingImpl_T	typeref:typename:void
write	VkZero/src/image.cpp	/^  void MultiStagedImageImpl_T::write(VkCommandBuffer commandBuffer, char *data, uint32_t index) /;"	f	class:MultiStagedImageImpl_T	typeref:typename:void
write	VkZero/src/image.cpp	/^  void MultiStagedImageImpl_T::write(char *data, uint32_t index) {$/;"	f	class:MultiStagedImageImpl_T	typeref:typename:void
write	VkZero/src/image.cpp	/^void MultiStagedImageBase::write(char *data, uint32_t index) {$/;"	f	class:MultiStagedImageBase	typeref:typename:void
write	VkZero/src/image.cpp	/^void MultiStagedImageBase::write(void* commandBuffer, char *data, uint32_t index) {$/;"	f	class:MultiStagedImageBase	typeref:typename:void
writeAll	VkZero/src/binding.cpp	/^  void ResourceBindingImpl_T::writeAll(VkDevice device, std::vector<VkDescriptorSet> descriptorS/;"	f	class:ResourceBindingImpl_T	typeref:typename:void
writeDescriptor	VkZero/src/image.cpp	/^    void MultiStagedImageImpl_T::writeDescriptor(VkDevice device, VkDescriptorSet descriptorSet,$/;"	f	class:MultiStagedImageImpl_T	typeref:typename:void
writeDescriptor	VkZero/src/image.cpp	/^void MultiImageImpl_T::writeDescriptor(VkDevice device, VkDescriptorSet descriptorSet,$/;"	f	class:MultiImageImpl_T	typeref:typename:void
writeDescriptor	VkZero/src/uniform_buffer.cpp	/^void UniformBufferImpl_T::writeDescriptor(VkDevice device, VkDescriptorSet descriptorSet,$/;"	f	class:UniformBufferImpl_T	typeref:typename:void
yaw	include/Camera.hpp	/^  float yaw = -90.0f; \/\/ Rotation around the Y-axis (left\/right)$/;"	m	class:Camera	typeref:typename:float
~Camera	src/Camera.cpp	/^Camera::~Camera() {}$/;"	f	class:Camera
~PushConstantDataImpl_T	VkZero/include/VkZero/Internal/graphics_renderpass_internal.hpp	/^  ~PushConstantDataImpl_T() { delete data; }$/;"	f	struct:VkZero::PushConstantDataImpl_T
~VkZeroCoreImpl_T	VkZero/src/core.cpp	/^VkZeroCoreImpl_T::~VkZeroCoreImpl_T() {}$/;"	f	class:VkZeroCoreImpl_T
~VkZeroObjects	src/VkZeroObjects.cpp	/^VkZeroObjects::~VkZeroObjects() {}$/;"	f	class:VkZeroObjects
~VoxelWorld	src/VoxelWorld.cpp	/^VoxelWorld::~VoxelWorld() {}$/;"	f	class:VoxelWorld
~Window	VkZero/src/window.cpp	/^Window::~Window() {$/;"	f	class:Window
~WindowImpl_T	VkZero/src/window.cpp	/^WindowImpl_T::~WindowImpl_T()$/;"	f	class:WindowImpl_T
